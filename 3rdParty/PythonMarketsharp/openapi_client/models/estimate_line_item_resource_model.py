# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class EstimateLineItemResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'sku': 'str',
        'position': 'int',
        'estimate_id': 'int',
        'quantity': 'int',
        'unit_of_measure': 'int',
        'retail_price': 'float',
        'line_item_discount_amount': 'float',
        'line_item_discount_percent': 'float',
        'cost': 'float',
        'notes': 'str'
    }

    attribute_map = {
        'id': 'id',
        'sku': 'sku',
        'position': 'position',
        'estimate_id': 'estimateId',
        'quantity': 'quantity',
        'unit_of_measure': 'unitOfMeasure',
        'retail_price': 'retailPrice',
        'line_item_discount_amount': 'lineItem_DiscountAmount',
        'line_item_discount_percent': 'lineItem_DiscountPercent',
        'cost': 'cost',
        'notes': 'notes'
    }

    def __init__(self, id=None, sku=None, position=None, estimate_id=None, quantity=None, unit_of_measure=None, retail_price=None, line_item_discount_amount=None, line_item_discount_percent=None, cost=None, notes=None, local_vars_configuration=None):  # noqa: E501
        """EstimateLineItemResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._sku = None
        self._position = None
        self._estimate_id = None
        self._quantity = None
        self._unit_of_measure = None
        self._retail_price = None
        self._line_item_discount_amount = None
        self._line_item_discount_percent = None
        self._cost = None
        self._notes = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if sku is not None:
            self.sku = sku
        if position is not None:
            self.position = position
        if estimate_id is not None:
            self.estimate_id = estimate_id
        if quantity is not None:
            self.quantity = quantity
        if unit_of_measure is not None:
            self.unit_of_measure = unit_of_measure
        if retail_price is not None:
            self.retail_price = retail_price
        if line_item_discount_amount is not None:
            self.line_item_discount_amount = line_item_discount_amount
        if line_item_discount_percent is not None:
            self.line_item_discount_percent = line_item_discount_percent
        if cost is not None:
            self.cost = cost
        if notes is not None:
            self.notes = notes

    @property
    def id(self):
        """Gets the id of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The id of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EstimateLineItemResourceModel.


        :param id: The id of this EstimateLineItemResourceModel.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def sku(self):
        """Gets the sku of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The sku of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this EstimateLineItemResourceModel.


        :param sku: The sku of this EstimateLineItemResourceModel.  # noqa: E501
        :type: str
        """

        self._sku = sku

    @property
    def position(self):
        """Gets the position of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The position of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this EstimateLineItemResourceModel.


        :param position: The position of this EstimateLineItemResourceModel.  # noqa: E501
        :type: int
        """

        self._position = position

    @property
    def estimate_id(self):
        """Gets the estimate_id of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The estimate_id of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._estimate_id

    @estimate_id.setter
    def estimate_id(self, estimate_id):
        """Sets the estimate_id of this EstimateLineItemResourceModel.


        :param estimate_id: The estimate_id of this EstimateLineItemResourceModel.  # noqa: E501
        :type: int
        """

        self._estimate_id = estimate_id

    @property
    def quantity(self):
        """Gets the quantity of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The quantity of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this EstimateLineItemResourceModel.


        :param quantity: The quantity of this EstimateLineItemResourceModel.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def unit_of_measure(self):
        """Gets the unit_of_measure of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The unit_of_measure of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._unit_of_measure

    @unit_of_measure.setter
    def unit_of_measure(self, unit_of_measure):
        """Sets the unit_of_measure of this EstimateLineItemResourceModel.


        :param unit_of_measure: The unit_of_measure of this EstimateLineItemResourceModel.  # noqa: E501
        :type: int
        """

        self._unit_of_measure = unit_of_measure

    @property
    def retail_price(self):
        """Gets the retail_price of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The retail_price of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: float
        """
        return self._retail_price

    @retail_price.setter
    def retail_price(self, retail_price):
        """Sets the retail_price of this EstimateLineItemResourceModel.


        :param retail_price: The retail_price of this EstimateLineItemResourceModel.  # noqa: E501
        :type: float
        """

        self._retail_price = retail_price

    @property
    def line_item_discount_amount(self):
        """Gets the line_item_discount_amount of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The line_item_discount_amount of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: float
        """
        return self._line_item_discount_amount

    @line_item_discount_amount.setter
    def line_item_discount_amount(self, line_item_discount_amount):
        """Sets the line_item_discount_amount of this EstimateLineItemResourceModel.


        :param line_item_discount_amount: The line_item_discount_amount of this EstimateLineItemResourceModel.  # noqa: E501
        :type: float
        """

        self._line_item_discount_amount = line_item_discount_amount

    @property
    def line_item_discount_percent(self):
        """Gets the line_item_discount_percent of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The line_item_discount_percent of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: float
        """
        return self._line_item_discount_percent

    @line_item_discount_percent.setter
    def line_item_discount_percent(self, line_item_discount_percent):
        """Sets the line_item_discount_percent of this EstimateLineItemResourceModel.


        :param line_item_discount_percent: The line_item_discount_percent of this EstimateLineItemResourceModel.  # noqa: E501
        :type: float
        """

        self._line_item_discount_percent = line_item_discount_percent

    @property
    def cost(self):
        """Gets the cost of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The cost of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: float
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this EstimateLineItemResourceModel.


        :param cost: The cost of this EstimateLineItemResourceModel.  # noqa: E501
        :type: float
        """

        self._cost = cost

    @property
    def notes(self):
        """Gets the notes of this EstimateLineItemResourceModel.  # noqa: E501


        :return: The notes of this EstimateLineItemResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this EstimateLineItemResourceModel.


        :param notes: The notes of this EstimateLineItemResourceModel.  # noqa: E501
        :type: str
        """

        self._notes = notes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EstimateLineItemResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, EstimateLineItemResourceModel):
            return True

        return self.to_dict() != other.to_dict()
