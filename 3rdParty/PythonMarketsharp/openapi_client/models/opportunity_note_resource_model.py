# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class OpportunityNoteResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'note': 'str',
        'updated_utc': 'datetime',
        'updated_by': 'str',
        'created_utc': 'datetime',
        'created_by': 'str',
        'updated_by_detail': 'EmployeePictureResourceModel',
        'created_by_detail': 'EmployeePictureResourceModel'
    }

    attribute_map = {
        'id': 'id',
        'note': 'note',
        'updated_utc': 'updatedUtc',
        'updated_by': 'updatedBy',
        'created_utc': 'createdUtc',
        'created_by': 'createdBy',
        'updated_by_detail': 'updatedByDetail',
        'created_by_detail': 'createdByDetail'
    }

    def __init__(self, id=None, note=None, updated_utc=None, updated_by=None, created_utc=None, created_by=None, updated_by_detail=None, created_by_detail=None, local_vars_configuration=None):  # noqa: E501
        """OpportunityNoteResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._note = None
        self._updated_utc = None
        self._updated_by = None
        self._created_utc = None
        self._created_by = None
        self._updated_by_detail = None
        self._created_by_detail = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if note is not None:
            self.note = note
        if updated_utc is not None:
            self.updated_utc = updated_utc
        if updated_by is not None:
            self.updated_by = updated_by
        if created_utc is not None:
            self.created_utc = created_utc
        if created_by is not None:
            self.created_by = created_by
        if updated_by_detail is not None:
            self.updated_by_detail = updated_by_detail
        if created_by_detail is not None:
            self.created_by_detail = created_by_detail

    @property
    def id(self):
        """Gets the id of this OpportunityNoteResourceModel.  # noqa: E501

        Id of the note. Auto incremented identity field.  # noqa: E501

        :return: The id of this OpportunityNoteResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OpportunityNoteResourceModel.

        Id of the note. Auto incremented identity field.  # noqa: E501

        :param id: The id of this OpportunityNoteResourceModel.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def note(self):
        """Gets the note of this OpportunityNoteResourceModel.  # noqa: E501

        Field containing note text.  # noqa: E501

        :return: The note of this OpportunityNoteResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this OpportunityNoteResourceModel.

        Field containing note text.  # noqa: E501

        :param note: The note of this OpportunityNoteResourceModel.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def updated_utc(self):
        """Gets the updated_utc of this OpportunityNoteResourceModel.  # noqa: E501

        Date that the note record was last updated.  # noqa: E501

        :return: The updated_utc of this OpportunityNoteResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_utc

    @updated_utc.setter
    def updated_utc(self, updated_utc):
        """Sets the updated_utc of this OpportunityNoteResourceModel.

        Date that the note record was last updated.  # noqa: E501

        :param updated_utc: The updated_utc of this OpportunityNoteResourceModel.  # noqa: E501
        :type: datetime
        """

        self._updated_utc = updated_utc

    @property
    def updated_by(self):
        """Gets the updated_by of this OpportunityNoteResourceModel.  # noqa: E501

        Id of the employee who last updated the note record.  # noqa: E501

        :return: The updated_by of this OpportunityNoteResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this OpportunityNoteResourceModel.

        Id of the employee who last updated the note record.  # noqa: E501

        :param updated_by: The updated_by of this OpportunityNoteResourceModel.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_utc(self):
        """Gets the created_utc of this OpportunityNoteResourceModel.  # noqa: E501

        Date that the note record was created.  # noqa: E501

        :return: The created_utc of this OpportunityNoteResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._created_utc

    @created_utc.setter
    def created_utc(self, created_utc):
        """Sets the created_utc of this OpportunityNoteResourceModel.

        Date that the note record was created.  # noqa: E501

        :param created_utc: The created_utc of this OpportunityNoteResourceModel.  # noqa: E501
        :type: datetime
        """

        self._created_utc = created_utc

    @property
    def created_by(self):
        """Gets the created_by of this OpportunityNoteResourceModel.  # noqa: E501

        Id of the employee who created the note record.  # noqa: E501

        :return: The created_by of this OpportunityNoteResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this OpportunityNoteResourceModel.

        Id of the employee who created the note record.  # noqa: E501

        :param created_by: The created_by of this OpportunityNoteResourceModel.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def updated_by_detail(self):
        """Gets the updated_by_detail of this OpportunityNoteResourceModel.  # noqa: E501


        :return: The updated_by_detail of this OpportunityNoteResourceModel.  # noqa: E501
        :rtype: EmployeePictureResourceModel
        """
        return self._updated_by_detail

    @updated_by_detail.setter
    def updated_by_detail(self, updated_by_detail):
        """Sets the updated_by_detail of this OpportunityNoteResourceModel.


        :param updated_by_detail: The updated_by_detail of this OpportunityNoteResourceModel.  # noqa: E501
        :type: EmployeePictureResourceModel
        """

        self._updated_by_detail = updated_by_detail

    @property
    def created_by_detail(self):
        """Gets the created_by_detail of this OpportunityNoteResourceModel.  # noqa: E501


        :return: The created_by_detail of this OpportunityNoteResourceModel.  # noqa: E501
        :rtype: EmployeePictureResourceModel
        """
        return self._created_by_detail

    @created_by_detail.setter
    def created_by_detail(self, created_by_detail):
        """Sets the created_by_detail of this OpportunityNoteResourceModel.


        :param created_by_detail: The created_by_detail of this OpportunityNoteResourceModel.  # noqa: E501
        :type: EmployeePictureResourceModel
        """

        self._created_by_detail = created_by_detail

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OpportunityNoteResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, OpportunityNoteResourceModel):
            return True

        return self.to_dict() != other.to_dict()
