# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class GlobalLeadCaptureContactResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'company_id': 'str',
        'contact_id': 'str',
        'third_party_id': 'str',
        'title': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'address1': 'str',
        'address2': 'str',
        'city': 'str',
        'state': 'str',
        'zip': 'str',
        'inquiry_date_time': 'datetime',
        'appointment_date': 'datetime',
        'appointment_set_date_time': 'datetime',
        'appointment_result': 'str',
        'appointment_presented_date_time': 'datetime',
        'appointment_sold_date_time': 'datetime',
        'contract_approved_date_time': 'datetime',
        'contract_status': 'str',
        'contract_amount': 'float',
        'job_completed_date_time': 'datetime',
        'latest_updated_time': 'datetime'
    }

    attribute_map = {
        'company_id': 'companyId',
        'contact_id': 'contactId',
        'third_party_id': 'thirdPartyId',
        'title': 'title',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'address1': 'address1',
        'address2': 'address2',
        'city': 'city',
        'state': 'state',
        'zip': 'zip',
        'inquiry_date_time': 'inquiryDateTime',
        'appointment_date': 'appointmentDate',
        'appointment_set_date_time': 'appointmentSetDateTime',
        'appointment_result': 'appointmentResult',
        'appointment_presented_date_time': 'appointmentPresentedDateTime',
        'appointment_sold_date_time': 'appointmentSoldDateTime',
        'contract_approved_date_time': 'contractApprovedDateTime',
        'contract_status': 'contractStatus',
        'contract_amount': 'contractAmount',
        'job_completed_date_time': 'jobCompletedDateTime',
        'latest_updated_time': 'latestUpdatedTime'
    }

    def __init__(self, company_id=None, contact_id=None, third_party_id=None, title=None, first_name=None, last_name=None, address1=None, address2=None, city=None, state=None, zip=None, inquiry_date_time=None, appointment_date=None, appointment_set_date_time=None, appointment_result=None, appointment_presented_date_time=None, appointment_sold_date_time=None, contract_approved_date_time=None, contract_status=None, contract_amount=None, job_completed_date_time=None, latest_updated_time=None, local_vars_configuration=None):  # noqa: E501
        """GlobalLeadCaptureContactResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._company_id = None
        self._contact_id = None
        self._third_party_id = None
        self._title = None
        self._first_name = None
        self._last_name = None
        self._address1 = None
        self._address2 = None
        self._city = None
        self._state = None
        self._zip = None
        self._inquiry_date_time = None
        self._appointment_date = None
        self._appointment_set_date_time = None
        self._appointment_result = None
        self._appointment_presented_date_time = None
        self._appointment_sold_date_time = None
        self._contract_approved_date_time = None
        self._contract_status = None
        self._contract_amount = None
        self._job_completed_date_time = None
        self._latest_updated_time = None
        self.discriminator = None

        if company_id is not None:
            self.company_id = company_id
        if contact_id is not None:
            self.contact_id = contact_id
        if third_party_id is not None:
            self.third_party_id = third_party_id
        if title is not None:
            self.title = title
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if address1 is not None:
            self.address1 = address1
        if address2 is not None:
            self.address2 = address2
        if city is not None:
            self.city = city
        if state is not None:
            self.state = state
        if zip is not None:
            self.zip = zip
        if inquiry_date_time is not None:
            self.inquiry_date_time = inquiry_date_time
        if appointment_date is not None:
            self.appointment_date = appointment_date
        if appointment_set_date_time is not None:
            self.appointment_set_date_time = appointment_set_date_time
        if appointment_result is not None:
            self.appointment_result = appointment_result
        if appointment_presented_date_time is not None:
            self.appointment_presented_date_time = appointment_presented_date_time
        if appointment_sold_date_time is not None:
            self.appointment_sold_date_time = appointment_sold_date_time
        if contract_approved_date_time is not None:
            self.contract_approved_date_time = contract_approved_date_time
        if contract_status is not None:
            self.contract_status = contract_status
        if contract_amount is not None:
            self.contract_amount = contract_amount
        if job_completed_date_time is not None:
            self.job_completed_date_time = job_completed_date_time
        if latest_updated_time is not None:
            self.latest_updated_time = latest_updated_time

    @property
    def company_id(self):
        """Gets the company_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The company_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this GlobalLeadCaptureContactResourceModel.


        :param company_id: The company_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._company_id = company_id

    @property
    def contact_id(self):
        """Gets the contact_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The contact_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this GlobalLeadCaptureContactResourceModel.


        :param contact_id: The contact_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._contact_id = contact_id

    @property
    def third_party_id(self):
        """Gets the third_party_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The third_party_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._third_party_id

    @third_party_id.setter
    def third_party_id(self, third_party_id):
        """Sets the third_party_id of this GlobalLeadCaptureContactResourceModel.


        :param third_party_id: The third_party_id of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._third_party_id = third_party_id

    @property
    def title(self):
        """Gets the title of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The title of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GlobalLeadCaptureContactResourceModel.


        :param title: The title of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def first_name(self):
        """Gets the first_name of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The first_name of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this GlobalLeadCaptureContactResourceModel.


        :param first_name: The first_name of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The last_name of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this GlobalLeadCaptureContactResourceModel.


        :param last_name: The last_name of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def address1(self):
        """Gets the address1 of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The address1 of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """Sets the address1 of this GlobalLeadCaptureContactResourceModel.


        :param address1: The address1 of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """Gets the address2 of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The address2 of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this GlobalLeadCaptureContactResourceModel.


        :param address2: The address2 of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._address2 = address2

    @property
    def city(self):
        """Gets the city of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The city of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this GlobalLeadCaptureContactResourceModel.


        :param city: The city of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def state(self):
        """Gets the state of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The state of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GlobalLeadCaptureContactResourceModel.


        :param state: The state of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def zip(self):
        """Gets the zip of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The zip of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this GlobalLeadCaptureContactResourceModel.


        :param zip: The zip of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._zip = zip

    @property
    def inquiry_date_time(self):
        """Gets the inquiry_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The inquiry_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._inquiry_date_time

    @inquiry_date_time.setter
    def inquiry_date_time(self, inquiry_date_time):
        """Sets the inquiry_date_time of this GlobalLeadCaptureContactResourceModel.


        :param inquiry_date_time: The inquiry_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: datetime
        """

        self._inquiry_date_time = inquiry_date_time

    @property
    def appointment_date(self):
        """Gets the appointment_date of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The appointment_date of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._appointment_date

    @appointment_date.setter
    def appointment_date(self, appointment_date):
        """Sets the appointment_date of this GlobalLeadCaptureContactResourceModel.


        :param appointment_date: The appointment_date of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: datetime
        """

        self._appointment_date = appointment_date

    @property
    def appointment_set_date_time(self):
        """Gets the appointment_set_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The appointment_set_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._appointment_set_date_time

    @appointment_set_date_time.setter
    def appointment_set_date_time(self, appointment_set_date_time):
        """Sets the appointment_set_date_time of this GlobalLeadCaptureContactResourceModel.


        :param appointment_set_date_time: The appointment_set_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: datetime
        """

        self._appointment_set_date_time = appointment_set_date_time

    @property
    def appointment_result(self):
        """Gets the appointment_result of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The appointment_result of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._appointment_result

    @appointment_result.setter
    def appointment_result(self, appointment_result):
        """Sets the appointment_result of this GlobalLeadCaptureContactResourceModel.


        :param appointment_result: The appointment_result of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._appointment_result = appointment_result

    @property
    def appointment_presented_date_time(self):
        """Gets the appointment_presented_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The appointment_presented_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._appointment_presented_date_time

    @appointment_presented_date_time.setter
    def appointment_presented_date_time(self, appointment_presented_date_time):
        """Sets the appointment_presented_date_time of this GlobalLeadCaptureContactResourceModel.


        :param appointment_presented_date_time: The appointment_presented_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: datetime
        """

        self._appointment_presented_date_time = appointment_presented_date_time

    @property
    def appointment_sold_date_time(self):
        """Gets the appointment_sold_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The appointment_sold_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._appointment_sold_date_time

    @appointment_sold_date_time.setter
    def appointment_sold_date_time(self, appointment_sold_date_time):
        """Sets the appointment_sold_date_time of this GlobalLeadCaptureContactResourceModel.


        :param appointment_sold_date_time: The appointment_sold_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: datetime
        """

        self._appointment_sold_date_time = appointment_sold_date_time

    @property
    def contract_approved_date_time(self):
        """Gets the contract_approved_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The contract_approved_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._contract_approved_date_time

    @contract_approved_date_time.setter
    def contract_approved_date_time(self, contract_approved_date_time):
        """Sets the contract_approved_date_time of this GlobalLeadCaptureContactResourceModel.


        :param contract_approved_date_time: The contract_approved_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: datetime
        """

        self._contract_approved_date_time = contract_approved_date_time

    @property
    def contract_status(self):
        """Gets the contract_status of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The contract_status of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._contract_status

    @contract_status.setter
    def contract_status(self, contract_status):
        """Sets the contract_status of this GlobalLeadCaptureContactResourceModel.


        :param contract_status: The contract_status of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: str
        """

        self._contract_status = contract_status

    @property
    def contract_amount(self):
        """Gets the contract_amount of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The contract_amount of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: float
        """
        return self._contract_amount

    @contract_amount.setter
    def contract_amount(self, contract_amount):
        """Sets the contract_amount of this GlobalLeadCaptureContactResourceModel.


        :param contract_amount: The contract_amount of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: float
        """

        self._contract_amount = contract_amount

    @property
    def job_completed_date_time(self):
        """Gets the job_completed_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The job_completed_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._job_completed_date_time

    @job_completed_date_time.setter
    def job_completed_date_time(self, job_completed_date_time):
        """Sets the job_completed_date_time of this GlobalLeadCaptureContactResourceModel.


        :param job_completed_date_time: The job_completed_date_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: datetime
        """

        self._job_completed_date_time = job_completed_date_time

    @property
    def latest_updated_time(self):
        """Gets the latest_updated_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501


        :return: The latest_updated_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._latest_updated_time

    @latest_updated_time.setter
    def latest_updated_time(self, latest_updated_time):
        """Sets the latest_updated_time of this GlobalLeadCaptureContactResourceModel.


        :param latest_updated_time: The latest_updated_time of this GlobalLeadCaptureContactResourceModel.  # noqa: E501
        :type: datetime
        """

        self._latest_updated_time = latest_updated_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GlobalLeadCaptureContactResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GlobalLeadCaptureContactResourceModel):
            return True

        return self.to_dict() != other.to_dict()
