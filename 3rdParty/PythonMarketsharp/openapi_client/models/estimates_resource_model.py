# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class EstimatesResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'appointment_id': 'str',
        'name': 'str',
        'estimate_date_time': 'datetime',
        'estimate_status': 'str',
        'estimate_type': 'str',
        'proposal_delivery_date': 'datetime',
        'discount_amount': 'float',
        'discount_percent': 'float',
        'tax_amount': 'float',
        'notes': 'str',
        'line_items': 'list[EstimateLineItemResourceModel]'
    }

    attribute_map = {
        'appointment_id': 'appointmentId',
        'name': 'name',
        'estimate_date_time': 'estimateDateTime',
        'estimate_status': 'estimateStatus',
        'estimate_type': 'estimateType',
        'proposal_delivery_date': 'proposalDeliveryDate',
        'discount_amount': 'discountAmount',
        'discount_percent': 'discountPercent',
        'tax_amount': 'taxAmount',
        'notes': 'notes',
        'line_items': 'lineItems'
    }

    def __init__(self, appointment_id=None, name=None, estimate_date_time=None, estimate_status=None, estimate_type=None, proposal_delivery_date=None, discount_amount=None, discount_percent=None, tax_amount=None, notes=None, line_items=None, local_vars_configuration=None):  # noqa: E501
        """EstimatesResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._appointment_id = None
        self._name = None
        self._estimate_date_time = None
        self._estimate_status = None
        self._estimate_type = None
        self._proposal_delivery_date = None
        self._discount_amount = None
        self._discount_percent = None
        self._tax_amount = None
        self._notes = None
        self._line_items = None
        self.discriminator = None

        if appointment_id is not None:
            self.appointment_id = appointment_id
        if name is not None:
            self.name = name
        if estimate_date_time is not None:
            self.estimate_date_time = estimate_date_time
        if estimate_status is not None:
            self.estimate_status = estimate_status
        if estimate_type is not None:
            self.estimate_type = estimate_type
        if proposal_delivery_date is not None:
            self.proposal_delivery_date = proposal_delivery_date
        if discount_amount is not None:
            self.discount_amount = discount_amount
        if discount_percent is not None:
            self.discount_percent = discount_percent
        if tax_amount is not None:
            self.tax_amount = tax_amount
        if notes is not None:
            self.notes = notes
        if line_items is not None:
            self.line_items = line_items

    @property
    def appointment_id(self):
        """Gets the appointment_id of this EstimatesResourceModel.  # noqa: E501


        :return: The appointment_id of this EstimatesResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._appointment_id

    @appointment_id.setter
    def appointment_id(self, appointment_id):
        """Sets the appointment_id of this EstimatesResourceModel.


        :param appointment_id: The appointment_id of this EstimatesResourceModel.  # noqa: E501
        :type: str
        """

        self._appointment_id = appointment_id

    @property
    def name(self):
        """Gets the name of this EstimatesResourceModel.  # noqa: E501


        :return: The name of this EstimatesResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EstimatesResourceModel.


        :param name: The name of this EstimatesResourceModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def estimate_date_time(self):
        """Gets the estimate_date_time of this EstimatesResourceModel.  # noqa: E501


        :return: The estimate_date_time of this EstimatesResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._estimate_date_time

    @estimate_date_time.setter
    def estimate_date_time(self, estimate_date_time):
        """Sets the estimate_date_time of this EstimatesResourceModel.


        :param estimate_date_time: The estimate_date_time of this EstimatesResourceModel.  # noqa: E501
        :type: datetime
        """

        self._estimate_date_time = estimate_date_time

    @property
    def estimate_status(self):
        """Gets the estimate_status of this EstimatesResourceModel.  # noqa: E501


        :return: The estimate_status of this EstimatesResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._estimate_status

    @estimate_status.setter
    def estimate_status(self, estimate_status):
        """Sets the estimate_status of this EstimatesResourceModel.


        :param estimate_status: The estimate_status of this EstimatesResourceModel.  # noqa: E501
        :type: str
        """

        self._estimate_status = estimate_status

    @property
    def estimate_type(self):
        """Gets the estimate_type of this EstimatesResourceModel.  # noqa: E501


        :return: The estimate_type of this EstimatesResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._estimate_type

    @estimate_type.setter
    def estimate_type(self, estimate_type):
        """Sets the estimate_type of this EstimatesResourceModel.


        :param estimate_type: The estimate_type of this EstimatesResourceModel.  # noqa: E501
        :type: str
        """

        self._estimate_type = estimate_type

    @property
    def proposal_delivery_date(self):
        """Gets the proposal_delivery_date of this EstimatesResourceModel.  # noqa: E501


        :return: The proposal_delivery_date of this EstimatesResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._proposal_delivery_date

    @proposal_delivery_date.setter
    def proposal_delivery_date(self, proposal_delivery_date):
        """Sets the proposal_delivery_date of this EstimatesResourceModel.


        :param proposal_delivery_date: The proposal_delivery_date of this EstimatesResourceModel.  # noqa: E501
        :type: datetime
        """

        self._proposal_delivery_date = proposal_delivery_date

    @property
    def discount_amount(self):
        """Gets the discount_amount of this EstimatesResourceModel.  # noqa: E501


        :return: The discount_amount of this EstimatesResourceModel.  # noqa: E501
        :rtype: float
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this EstimatesResourceModel.


        :param discount_amount: The discount_amount of this EstimatesResourceModel.  # noqa: E501
        :type: float
        """

        self._discount_amount = discount_amount

    @property
    def discount_percent(self):
        """Gets the discount_percent of this EstimatesResourceModel.  # noqa: E501


        :return: The discount_percent of this EstimatesResourceModel.  # noqa: E501
        :rtype: float
        """
        return self._discount_percent

    @discount_percent.setter
    def discount_percent(self, discount_percent):
        """Sets the discount_percent of this EstimatesResourceModel.


        :param discount_percent: The discount_percent of this EstimatesResourceModel.  # noqa: E501
        :type: float
        """

        self._discount_percent = discount_percent

    @property
    def tax_amount(self):
        """Gets the tax_amount of this EstimatesResourceModel.  # noqa: E501


        :return: The tax_amount of this EstimatesResourceModel.  # noqa: E501
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this EstimatesResourceModel.


        :param tax_amount: The tax_amount of this EstimatesResourceModel.  # noqa: E501
        :type: float
        """

        self._tax_amount = tax_amount

    @property
    def notes(self):
        """Gets the notes of this EstimatesResourceModel.  # noqa: E501


        :return: The notes of this EstimatesResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this EstimatesResourceModel.


        :param notes: The notes of this EstimatesResourceModel.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def line_items(self):
        """Gets the line_items of this EstimatesResourceModel.  # noqa: E501


        :return: The line_items of this EstimatesResourceModel.  # noqa: E501
        :rtype: list[EstimateLineItemResourceModel]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this EstimatesResourceModel.


        :param line_items: The line_items of this EstimatesResourceModel.  # noqa: E501
        :type: list[EstimateLineItemResourceModel]
        """

        self._line_items = line_items

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EstimatesResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, EstimatesResourceModel):
            return True

        return self.to_dict() != other.to_dict()
