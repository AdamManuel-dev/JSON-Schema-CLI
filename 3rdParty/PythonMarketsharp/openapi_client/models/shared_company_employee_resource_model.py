# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class SharedCompanyEmployeeResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'oid': 'str',
        'company_number': 'int',
        'parent_company_oid': 'str',
        'company_name': 'str',
        'is_parent_company': 'bool',
        'shared_emp_oid': 'str'
    }

    attribute_map = {
        'oid': 'oid',
        'company_number': 'companyNumber',
        'parent_company_oid': 'parentCompanyOid',
        'company_name': 'companyName',
        'is_parent_company': 'isParentCompany',
        'shared_emp_oid': 'sharedEmpOid'
    }

    def __init__(self, oid=None, company_number=None, parent_company_oid=None, company_name=None, is_parent_company=None, shared_emp_oid=None, local_vars_configuration=None):  # noqa: E501
        """SharedCompanyEmployeeResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._oid = None
        self._company_number = None
        self._parent_company_oid = None
        self._company_name = None
        self._is_parent_company = None
        self._shared_emp_oid = None
        self.discriminator = None

        if oid is not None:
            self.oid = oid
        if company_number is not None:
            self.company_number = company_number
        if parent_company_oid is not None:
            self.parent_company_oid = parent_company_oid
        if company_name is not None:
            self.company_name = company_name
        if is_parent_company is not None:
            self.is_parent_company = is_parent_company
        if shared_emp_oid is not None:
            self.shared_emp_oid = shared_emp_oid

    @property
    def oid(self):
        """Gets the oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501


        :return: The oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._oid

    @oid.setter
    def oid(self, oid):
        """Sets the oid of this SharedCompanyEmployeeResourceModel.


        :param oid: The oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :type: str
        """

        self._oid = oid

    @property
    def company_number(self):
        """Gets the company_number of this SharedCompanyEmployeeResourceModel.  # noqa: E501


        :return: The company_number of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._company_number

    @company_number.setter
    def company_number(self, company_number):
        """Sets the company_number of this SharedCompanyEmployeeResourceModel.


        :param company_number: The company_number of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :type: int
        """

        self._company_number = company_number

    @property
    def parent_company_oid(self):
        """Gets the parent_company_oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501


        :return: The parent_company_oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._parent_company_oid

    @parent_company_oid.setter
    def parent_company_oid(self, parent_company_oid):
        """Sets the parent_company_oid of this SharedCompanyEmployeeResourceModel.


        :param parent_company_oid: The parent_company_oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :type: str
        """

        self._parent_company_oid = parent_company_oid

    @property
    def company_name(self):
        """Gets the company_name of this SharedCompanyEmployeeResourceModel.  # noqa: E501


        :return: The company_name of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this SharedCompanyEmployeeResourceModel.


        :param company_name: The company_name of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def is_parent_company(self):
        """Gets the is_parent_company of this SharedCompanyEmployeeResourceModel.  # noqa: E501


        :return: The is_parent_company of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_parent_company

    @is_parent_company.setter
    def is_parent_company(self, is_parent_company):
        """Sets the is_parent_company of this SharedCompanyEmployeeResourceModel.


        :param is_parent_company: The is_parent_company of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :type: bool
        """

        self._is_parent_company = is_parent_company

    @property
    def shared_emp_oid(self):
        """Gets the shared_emp_oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501


        :return: The shared_emp_oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._shared_emp_oid

    @shared_emp_oid.setter
    def shared_emp_oid(self, shared_emp_oid):
        """Sets the shared_emp_oid of this SharedCompanyEmployeeResourceModel.


        :param shared_emp_oid: The shared_emp_oid of this SharedCompanyEmployeeResourceModel.  # noqa: E501
        :type: str
        """

        self._shared_emp_oid = shared_emp_oid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SharedCompanyEmployeeResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SharedCompanyEmployeeResourceModel):
            return True

        return self.to_dict() != other.to_dict()
