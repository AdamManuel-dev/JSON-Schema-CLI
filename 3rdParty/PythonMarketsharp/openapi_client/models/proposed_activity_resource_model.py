# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ProposedActivityResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'production_step_id': 'str',
        'note': 'str',
        'assigned_employee_id': 'str',
        'scheduled_employee_id': 'str',
        'reference_id': 'int',
        'activity_process_step_id': 'str',
        'service_order_id': 'str',
        'lead_id': 'str',
        'appointment_id': 'str',
        'reminder_minutes': 'int',
        'name': 'str',
        'result_id': 'int',
        'job_id': 'str',
        'due_date': 'datetime',
        'completion_date': 'datetime',
        'contact_id': 'str',
        'email_template': 'ProposedActivityCommunicationTemplateResourceModel',
        'text_template': 'ProposedActivityCommunicationTemplateResourceModel'
    }

    attribute_map = {
        'id': 'id',
        'production_step_id': 'productionStepId',
        'note': 'note',
        'assigned_employee_id': 'assignedEmployeeId',
        'scheduled_employee_id': 'scheduledEmployeeId',
        'reference_id': 'referenceId',
        'activity_process_step_id': 'activityProcessStepId',
        'service_order_id': 'serviceOrderId',
        'lead_id': 'leadId',
        'appointment_id': 'appointmentId',
        'reminder_minutes': 'reminderMinutes',
        'name': 'name',
        'result_id': 'resultId',
        'job_id': 'jobId',
        'due_date': 'dueDate',
        'completion_date': 'completionDate',
        'contact_id': 'contactId',
        'email_template': 'emailTemplate',
        'text_template': 'textTemplate'
    }

    def __init__(self, id=None, production_step_id=None, note=None, assigned_employee_id=None, scheduled_employee_id=None, reference_id=None, activity_process_step_id=None, service_order_id=None, lead_id=None, appointment_id=None, reminder_minutes=None, name=None, result_id=None, job_id=None, due_date=None, completion_date=None, contact_id=None, email_template=None, text_template=None, local_vars_configuration=None):  # noqa: E501
        """ProposedActivityResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._production_step_id = None
        self._note = None
        self._assigned_employee_id = None
        self._scheduled_employee_id = None
        self._reference_id = None
        self._activity_process_step_id = None
        self._service_order_id = None
        self._lead_id = None
        self._appointment_id = None
        self._reminder_minutes = None
        self._name = None
        self._result_id = None
        self._job_id = None
        self._due_date = None
        self._completion_date = None
        self._contact_id = None
        self._email_template = None
        self._text_template = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if production_step_id is not None:
            self.production_step_id = production_step_id
        if note is not None:
            self.note = note
        if assigned_employee_id is not None:
            self.assigned_employee_id = assigned_employee_id
        if scheduled_employee_id is not None:
            self.scheduled_employee_id = scheduled_employee_id
        if reference_id is not None:
            self.reference_id = reference_id
        if activity_process_step_id is not None:
            self.activity_process_step_id = activity_process_step_id
        if service_order_id is not None:
            self.service_order_id = service_order_id
        if lead_id is not None:
            self.lead_id = lead_id
        if appointment_id is not None:
            self.appointment_id = appointment_id
        if reminder_minutes is not None:
            self.reminder_minutes = reminder_minutes
        if name is not None:
            self.name = name
        if result_id is not None:
            self.result_id = result_id
        if job_id is not None:
            self.job_id = job_id
        if due_date is not None:
            self.due_date = due_date
        if completion_date is not None:
            self.completion_date = completion_date
        if contact_id is not None:
            self.contact_id = contact_id
        if email_template is not None:
            self.email_template = email_template
        if text_template is not None:
            self.text_template = text_template

    @property
    def id(self):
        """Gets the id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProposedActivityResourceModel.


        :param id: The id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def production_step_id(self):
        """Gets the production_step_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The production_step_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._production_step_id

    @production_step_id.setter
    def production_step_id(self, production_step_id):
        """Sets the production_step_id of this ProposedActivityResourceModel.


        :param production_step_id: The production_step_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._production_step_id = production_step_id

    @property
    def note(self):
        """Gets the note of this ProposedActivityResourceModel.  # noqa: E501


        :return: The note of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this ProposedActivityResourceModel.


        :param note: The note of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def assigned_employee_id(self):
        """Gets the assigned_employee_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The assigned_employee_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._assigned_employee_id

    @assigned_employee_id.setter
    def assigned_employee_id(self, assigned_employee_id):
        """Sets the assigned_employee_id of this ProposedActivityResourceModel.


        :param assigned_employee_id: The assigned_employee_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._assigned_employee_id = assigned_employee_id

    @property
    def scheduled_employee_id(self):
        """Gets the scheduled_employee_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The scheduled_employee_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._scheduled_employee_id

    @scheduled_employee_id.setter
    def scheduled_employee_id(self, scheduled_employee_id):
        """Sets the scheduled_employee_id of this ProposedActivityResourceModel.


        :param scheduled_employee_id: The scheduled_employee_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._scheduled_employee_id = scheduled_employee_id

    @property
    def reference_id(self):
        """Gets the reference_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The reference_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this ProposedActivityResourceModel.


        :param reference_id: The reference_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: int
        """

        self._reference_id = reference_id

    @property
    def activity_process_step_id(self):
        """Gets the activity_process_step_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The activity_process_step_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._activity_process_step_id

    @activity_process_step_id.setter
    def activity_process_step_id(self, activity_process_step_id):
        """Sets the activity_process_step_id of this ProposedActivityResourceModel.


        :param activity_process_step_id: The activity_process_step_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._activity_process_step_id = activity_process_step_id

    @property
    def service_order_id(self):
        """Gets the service_order_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The service_order_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._service_order_id

    @service_order_id.setter
    def service_order_id(self, service_order_id):
        """Sets the service_order_id of this ProposedActivityResourceModel.


        :param service_order_id: The service_order_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._service_order_id = service_order_id

    @property
    def lead_id(self):
        """Gets the lead_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The lead_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._lead_id

    @lead_id.setter
    def lead_id(self, lead_id):
        """Sets the lead_id of this ProposedActivityResourceModel.


        :param lead_id: The lead_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._lead_id = lead_id

    @property
    def appointment_id(self):
        """Gets the appointment_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The appointment_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._appointment_id

    @appointment_id.setter
    def appointment_id(self, appointment_id):
        """Sets the appointment_id of this ProposedActivityResourceModel.


        :param appointment_id: The appointment_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._appointment_id = appointment_id

    @property
    def reminder_minutes(self):
        """Gets the reminder_minutes of this ProposedActivityResourceModel.  # noqa: E501


        :return: The reminder_minutes of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._reminder_minutes

    @reminder_minutes.setter
    def reminder_minutes(self, reminder_minutes):
        """Sets the reminder_minutes of this ProposedActivityResourceModel.


        :param reminder_minutes: The reminder_minutes of this ProposedActivityResourceModel.  # noqa: E501
        :type: int
        """

        self._reminder_minutes = reminder_minutes

    @property
    def name(self):
        """Gets the name of this ProposedActivityResourceModel.  # noqa: E501


        :return: The name of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProposedActivityResourceModel.


        :param name: The name of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def result_id(self):
        """Gets the result_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The result_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._result_id

    @result_id.setter
    def result_id(self, result_id):
        """Sets the result_id of this ProposedActivityResourceModel.


        :param result_id: The result_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: int
        """

        self._result_id = result_id

    @property
    def job_id(self):
        """Gets the job_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The job_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this ProposedActivityResourceModel.


        :param job_id: The job_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._job_id = job_id

    @property
    def due_date(self):
        """Gets the due_date of this ProposedActivityResourceModel.  # noqa: E501


        :return: The due_date of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this ProposedActivityResourceModel.


        :param due_date: The due_date of this ProposedActivityResourceModel.  # noqa: E501
        :type: datetime
        """

        self._due_date = due_date

    @property
    def completion_date(self):
        """Gets the completion_date of this ProposedActivityResourceModel.  # noqa: E501


        :return: The completion_date of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._completion_date

    @completion_date.setter
    def completion_date(self, completion_date):
        """Sets the completion_date of this ProposedActivityResourceModel.


        :param completion_date: The completion_date of this ProposedActivityResourceModel.  # noqa: E501
        :type: datetime
        """

        self._completion_date = completion_date

    @property
    def contact_id(self):
        """Gets the contact_id of this ProposedActivityResourceModel.  # noqa: E501


        :return: The contact_id of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this ProposedActivityResourceModel.


        :param contact_id: The contact_id of this ProposedActivityResourceModel.  # noqa: E501
        :type: str
        """

        self._contact_id = contact_id

    @property
    def email_template(self):
        """Gets the email_template of this ProposedActivityResourceModel.  # noqa: E501


        :return: The email_template of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: ProposedActivityCommunicationTemplateResourceModel
        """
        return self._email_template

    @email_template.setter
    def email_template(self, email_template):
        """Sets the email_template of this ProposedActivityResourceModel.


        :param email_template: The email_template of this ProposedActivityResourceModel.  # noqa: E501
        :type: ProposedActivityCommunicationTemplateResourceModel
        """

        self._email_template = email_template

    @property
    def text_template(self):
        """Gets the text_template of this ProposedActivityResourceModel.  # noqa: E501


        :return: The text_template of this ProposedActivityResourceModel.  # noqa: E501
        :rtype: ProposedActivityCommunicationTemplateResourceModel
        """
        return self._text_template

    @text_template.setter
    def text_template(self, text_template):
        """Sets the text_template of this ProposedActivityResourceModel.


        :param text_template: The text_template of this ProposedActivityResourceModel.  # noqa: E501
        :type: ProposedActivityCommunicationTemplateResourceModel
        """

        self._text_template = text_template

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProposedActivityResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ProposedActivityResourceModel):
            return True

        return self.to_dict() != other.to_dict()
