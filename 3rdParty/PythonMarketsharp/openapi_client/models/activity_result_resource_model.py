# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ActivityResultResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'company_id': 'str',
        'name': 'str',
        'email_success': 'bool',
        'email_failure': 'bool',
        'count_as_appt_confirmed': 'bool',
        'position': 'int',
        'is_active': 'bool',
        'count_as_appt_created': 'bool',
        'count_as_appt_contacted': 'bool',
        'activity_process_id': 'str',
        'confirmed': 'bool',
        'text_success': 'bool',
        'text_failure': 'bool',
        'call_in_type': 'bool',
        'call_out_type': 'bool',
        'call_back_type': 'bool',
        'created_at': 'datetime',
        'created_by': 'str',
        'updated_at': 'datetime',
        'updated_by': 'str'
    }

    attribute_map = {
        'id': 'id',
        'company_id': 'companyId',
        'name': 'name',
        'email_success': 'emailSuccess',
        'email_failure': 'emailFailure',
        'count_as_appt_confirmed': 'countAsApptConfirmed',
        'position': 'position',
        'is_active': 'isActive',
        'count_as_appt_created': 'countAsApptCreated',
        'count_as_appt_contacted': 'countAsApptContacted',
        'activity_process_id': 'activityProcessId',
        'confirmed': 'confirmed',
        'text_success': 'textSuccess',
        'text_failure': 'textFailure',
        'call_in_type': 'callInType',
        'call_out_type': 'callOutType',
        'call_back_type': 'callBackType',
        'created_at': 'createdAt',
        'created_by': 'createdBy',
        'updated_at': 'updatedAt',
        'updated_by': 'updatedBy'
    }

    def __init__(self, id=None, company_id=None, name=None, email_success=None, email_failure=None, count_as_appt_confirmed=None, position=None, is_active=None, count_as_appt_created=None, count_as_appt_contacted=None, activity_process_id=None, confirmed=None, text_success=None, text_failure=None, call_in_type=None, call_out_type=None, call_back_type=None, created_at=None, created_by=None, updated_at=None, updated_by=None, local_vars_configuration=None):  # noqa: E501
        """ActivityResultResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._company_id = None
        self._name = None
        self._email_success = None
        self._email_failure = None
        self._count_as_appt_confirmed = None
        self._position = None
        self._is_active = None
        self._count_as_appt_created = None
        self._count_as_appt_contacted = None
        self._activity_process_id = None
        self._confirmed = None
        self._text_success = None
        self._text_failure = None
        self._call_in_type = None
        self._call_out_type = None
        self._call_back_type = None
        self._created_at = None
        self._created_by = None
        self._updated_at = None
        self._updated_by = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if company_id is not None:
            self.company_id = company_id
        if name is not None:
            self.name = name
        if email_success is not None:
            self.email_success = email_success
        if email_failure is not None:
            self.email_failure = email_failure
        if count_as_appt_confirmed is not None:
            self.count_as_appt_confirmed = count_as_appt_confirmed
        if position is not None:
            self.position = position
        if is_active is not None:
            self.is_active = is_active
        if count_as_appt_created is not None:
            self.count_as_appt_created = count_as_appt_created
        if count_as_appt_contacted is not None:
            self.count_as_appt_contacted = count_as_appt_contacted
        if activity_process_id is not None:
            self.activity_process_id = activity_process_id
        if confirmed is not None:
            self.confirmed = confirmed
        if text_success is not None:
            self.text_success = text_success
        if text_failure is not None:
            self.text_failure = text_failure
        if call_in_type is not None:
            self.call_in_type = call_in_type
        if call_out_type is not None:
            self.call_out_type = call_out_type
        if call_back_type is not None:
            self.call_back_type = call_back_type
        if created_at is not None:
            self.created_at = created_at
        if created_by is not None:
            self.created_by = created_by
        if updated_at is not None:
            self.updated_at = updated_at
        if updated_by is not None:
            self.updated_by = updated_by

    @property
    def id(self):
        """Gets the id of this ActivityResultResourceModel.  # noqa: E501


        :return: The id of this ActivityResultResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActivityResultResourceModel.


        :param id: The id of this ActivityResultResourceModel.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def company_id(self):
        """Gets the company_id of this ActivityResultResourceModel.  # noqa: E501


        :return: The company_id of this ActivityResultResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this ActivityResultResourceModel.


        :param company_id: The company_id of this ActivityResultResourceModel.  # noqa: E501
        :type: str
        """

        self._company_id = company_id

    @property
    def name(self):
        """Gets the name of this ActivityResultResourceModel.  # noqa: E501


        :return: The name of this ActivityResultResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ActivityResultResourceModel.


        :param name: The name of this ActivityResultResourceModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def email_success(self):
        """Gets the email_success of this ActivityResultResourceModel.  # noqa: E501


        :return: The email_success of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._email_success

    @email_success.setter
    def email_success(self, email_success):
        """Sets the email_success of this ActivityResultResourceModel.


        :param email_success: The email_success of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._email_success = email_success

    @property
    def email_failure(self):
        """Gets the email_failure of this ActivityResultResourceModel.  # noqa: E501


        :return: The email_failure of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._email_failure

    @email_failure.setter
    def email_failure(self, email_failure):
        """Sets the email_failure of this ActivityResultResourceModel.


        :param email_failure: The email_failure of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._email_failure = email_failure

    @property
    def count_as_appt_confirmed(self):
        """Gets the count_as_appt_confirmed of this ActivityResultResourceModel.  # noqa: E501


        :return: The count_as_appt_confirmed of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._count_as_appt_confirmed

    @count_as_appt_confirmed.setter
    def count_as_appt_confirmed(self, count_as_appt_confirmed):
        """Sets the count_as_appt_confirmed of this ActivityResultResourceModel.


        :param count_as_appt_confirmed: The count_as_appt_confirmed of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._count_as_appt_confirmed = count_as_appt_confirmed

    @property
    def position(self):
        """Gets the position of this ActivityResultResourceModel.  # noqa: E501


        :return: The position of this ActivityResultResourceModel.  # noqa: E501
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ActivityResultResourceModel.


        :param position: The position of this ActivityResultResourceModel.  # noqa: E501
        :type: int
        """

        self._position = position

    @property
    def is_active(self):
        """Gets the is_active of this ActivityResultResourceModel.  # noqa: E501


        :return: The is_active of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this ActivityResultResourceModel.


        :param is_active: The is_active of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._is_active = is_active

    @property
    def count_as_appt_created(self):
        """Gets the count_as_appt_created of this ActivityResultResourceModel.  # noqa: E501


        :return: The count_as_appt_created of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._count_as_appt_created

    @count_as_appt_created.setter
    def count_as_appt_created(self, count_as_appt_created):
        """Sets the count_as_appt_created of this ActivityResultResourceModel.


        :param count_as_appt_created: The count_as_appt_created of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._count_as_appt_created = count_as_appt_created

    @property
    def count_as_appt_contacted(self):
        """Gets the count_as_appt_contacted of this ActivityResultResourceModel.  # noqa: E501


        :return: The count_as_appt_contacted of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._count_as_appt_contacted

    @count_as_appt_contacted.setter
    def count_as_appt_contacted(self, count_as_appt_contacted):
        """Sets the count_as_appt_contacted of this ActivityResultResourceModel.


        :param count_as_appt_contacted: The count_as_appt_contacted of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._count_as_appt_contacted = count_as_appt_contacted

    @property
    def activity_process_id(self):
        """Gets the activity_process_id of this ActivityResultResourceModel.  # noqa: E501


        :return: The activity_process_id of this ActivityResultResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._activity_process_id

    @activity_process_id.setter
    def activity_process_id(self, activity_process_id):
        """Sets the activity_process_id of this ActivityResultResourceModel.


        :param activity_process_id: The activity_process_id of this ActivityResultResourceModel.  # noqa: E501
        :type: str
        """

        self._activity_process_id = activity_process_id

    @property
    def confirmed(self):
        """Gets the confirmed of this ActivityResultResourceModel.  # noqa: E501


        :return: The confirmed of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._confirmed

    @confirmed.setter
    def confirmed(self, confirmed):
        """Sets the confirmed of this ActivityResultResourceModel.


        :param confirmed: The confirmed of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._confirmed = confirmed

    @property
    def text_success(self):
        """Gets the text_success of this ActivityResultResourceModel.  # noqa: E501


        :return: The text_success of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._text_success

    @text_success.setter
    def text_success(self, text_success):
        """Sets the text_success of this ActivityResultResourceModel.


        :param text_success: The text_success of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._text_success = text_success

    @property
    def text_failure(self):
        """Gets the text_failure of this ActivityResultResourceModel.  # noqa: E501


        :return: The text_failure of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._text_failure

    @text_failure.setter
    def text_failure(self, text_failure):
        """Sets the text_failure of this ActivityResultResourceModel.


        :param text_failure: The text_failure of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._text_failure = text_failure

    @property
    def call_in_type(self):
        """Gets the call_in_type of this ActivityResultResourceModel.  # noqa: E501


        :return: The call_in_type of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._call_in_type

    @call_in_type.setter
    def call_in_type(self, call_in_type):
        """Sets the call_in_type of this ActivityResultResourceModel.


        :param call_in_type: The call_in_type of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._call_in_type = call_in_type

    @property
    def call_out_type(self):
        """Gets the call_out_type of this ActivityResultResourceModel.  # noqa: E501


        :return: The call_out_type of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._call_out_type

    @call_out_type.setter
    def call_out_type(self, call_out_type):
        """Sets the call_out_type of this ActivityResultResourceModel.


        :param call_out_type: The call_out_type of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._call_out_type = call_out_type

    @property
    def call_back_type(self):
        """Gets the call_back_type of this ActivityResultResourceModel.  # noqa: E501


        :return: The call_back_type of this ActivityResultResourceModel.  # noqa: E501
        :rtype: bool
        """
        return self._call_back_type

    @call_back_type.setter
    def call_back_type(self, call_back_type):
        """Sets the call_back_type of this ActivityResultResourceModel.


        :param call_back_type: The call_back_type of this ActivityResultResourceModel.  # noqa: E501
        :type: bool
        """

        self._call_back_type = call_back_type

    @property
    def created_at(self):
        """Gets the created_at of this ActivityResultResourceModel.  # noqa: E501


        :return: The created_at of this ActivityResultResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ActivityResultResourceModel.


        :param created_at: The created_at of this ActivityResultResourceModel.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this ActivityResultResourceModel.  # noqa: E501


        :return: The created_by of this ActivityResultResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ActivityResultResourceModel.


        :param created_by: The created_by of this ActivityResultResourceModel.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def updated_at(self):
        """Gets the updated_at of this ActivityResultResourceModel.  # noqa: E501


        :return: The updated_at of this ActivityResultResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ActivityResultResourceModel.


        :param updated_at: The updated_at of this ActivityResultResourceModel.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this ActivityResultResourceModel.  # noqa: E501


        :return: The updated_by of this ActivityResultResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this ActivityResultResourceModel.


        :param updated_by: The updated_by of this ActivityResultResourceModel.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ActivityResultResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ActivityResultResourceModel):
            return True

        return self.to_dict() != other.to_dict()
