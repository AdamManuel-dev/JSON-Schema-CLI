# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ProductionSearchBindingModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'view_id': 'str',
        'assigned_to': 'str',
        'salesperson': 'str',
        'process': 'str',
        'product': 'str',
        'status': 'str',
        'page_number': 'int',
        'pagesize': 'int',
        'company_id': 'str',
        'logged_in_employee_id': 'str',
        'calculated_date_field_type': 'str',
        'calculated_start_comparison': 'str',
        'calculated_end_comparison': 'str',
        'calculated_start_date': 'datetime',
        'calculated_end_date': 'datetime',
        'date_range_type': 'str',
        'custom_date_field': 'str',
        'custom_start': 'datetime',
        'custom_end': 'datetime',
        'is_custom_date': 'bool'
    }

    attribute_map = {
        'view_id': 'viewId',
        'assigned_to': 'assignedTo',
        'salesperson': 'salesperson',
        'process': 'process',
        'product': 'product',
        'status': 'status',
        'page_number': 'pageNumber',
        'pagesize': 'pagesize',
        'company_id': 'companyId',
        'logged_in_employee_id': 'loggedInEmployeeId',
        'calculated_date_field_type': 'calculatedDateFieldType',
        'calculated_start_comparison': 'calculatedStartComparison',
        'calculated_end_comparison': 'calculatedEndComparison',
        'calculated_start_date': 'calculatedStartDate',
        'calculated_end_date': 'calculatedEndDate',
        'date_range_type': 'dateRangeType',
        'custom_date_field': 'customDateField',
        'custom_start': 'customStart',
        'custom_end': 'customEnd',
        'is_custom_date': 'isCustomDate'
    }

    def __init__(self, view_id=None, assigned_to=None, salesperson=None, process=None, product=None, status=None, page_number=None, pagesize=None, company_id=None, logged_in_employee_id=None, calculated_date_field_type=None, calculated_start_comparison=None, calculated_end_comparison=None, calculated_start_date=None, calculated_end_date=None, date_range_type=None, custom_date_field=None, custom_start=None, custom_end=None, is_custom_date=None, local_vars_configuration=None):  # noqa: E501
        """ProductionSearchBindingModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._view_id = None
        self._assigned_to = None
        self._salesperson = None
        self._process = None
        self._product = None
        self._status = None
        self._page_number = None
        self._pagesize = None
        self._company_id = None
        self._logged_in_employee_id = None
        self._calculated_date_field_type = None
        self._calculated_start_comparison = None
        self._calculated_end_comparison = None
        self._calculated_start_date = None
        self._calculated_end_date = None
        self._date_range_type = None
        self._custom_date_field = None
        self._custom_start = None
        self._custom_end = None
        self._is_custom_date = None
        self.discriminator = None

        if view_id is not None:
            self.view_id = view_id
        if assigned_to is not None:
            self.assigned_to = assigned_to
        if salesperson is not None:
            self.salesperson = salesperson
        if process is not None:
            self.process = process
        if product is not None:
            self.product = product
        if status is not None:
            self.status = status
        if page_number is not None:
            self.page_number = page_number
        if pagesize is not None:
            self.pagesize = pagesize
        if company_id is not None:
            self.company_id = company_id
        if logged_in_employee_id is not None:
            self.logged_in_employee_id = logged_in_employee_id
        if calculated_date_field_type is not None:
            self.calculated_date_field_type = calculated_date_field_type
        if calculated_start_comparison is not None:
            self.calculated_start_comparison = calculated_start_comparison
        if calculated_end_comparison is not None:
            self.calculated_end_comparison = calculated_end_comparison
        if calculated_start_date is not None:
            self.calculated_start_date = calculated_start_date
        if calculated_end_date is not None:
            self.calculated_end_date = calculated_end_date
        if date_range_type is not None:
            self.date_range_type = date_range_type
        if custom_date_field is not None:
            self.custom_date_field = custom_date_field
        if custom_start is not None:
            self.custom_start = custom_start
        if custom_end is not None:
            self.custom_end = custom_end
        if is_custom_date is not None:
            self.is_custom_date = is_custom_date

    @property
    def view_id(self):
        """Gets the view_id of this ProductionSearchBindingModel.  # noqa: E501


        :return: The view_id of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._view_id

    @view_id.setter
    def view_id(self, view_id):
        """Sets the view_id of this ProductionSearchBindingModel.


        :param view_id: The view_id of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._view_id = view_id

    @property
    def assigned_to(self):
        """Gets the assigned_to of this ProductionSearchBindingModel.  # noqa: E501


        :return: The assigned_to of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._assigned_to

    @assigned_to.setter
    def assigned_to(self, assigned_to):
        """Sets the assigned_to of this ProductionSearchBindingModel.


        :param assigned_to: The assigned_to of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._assigned_to = assigned_to

    @property
    def salesperson(self):
        """Gets the salesperson of this ProductionSearchBindingModel.  # noqa: E501


        :return: The salesperson of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._salesperson

    @salesperson.setter
    def salesperson(self, salesperson):
        """Sets the salesperson of this ProductionSearchBindingModel.


        :param salesperson: The salesperson of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._salesperson = salesperson

    @property
    def process(self):
        """Gets the process of this ProductionSearchBindingModel.  # noqa: E501


        :return: The process of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._process

    @process.setter
    def process(self, process):
        """Sets the process of this ProductionSearchBindingModel.


        :param process: The process of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._process = process

    @property
    def product(self):
        """Gets the product of this ProductionSearchBindingModel.  # noqa: E501


        :return: The product of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this ProductionSearchBindingModel.


        :param product: The product of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._product = product

    @property
    def status(self):
        """Gets the status of this ProductionSearchBindingModel.  # noqa: E501


        :return: The status of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ProductionSearchBindingModel.


        :param status: The status of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def page_number(self):
        """Gets the page_number of this ProductionSearchBindingModel.  # noqa: E501


        :return: The page_number of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this ProductionSearchBindingModel.


        :param page_number: The page_number of this ProductionSearchBindingModel.  # noqa: E501
        :type: int
        """

        self._page_number = page_number

    @property
    def pagesize(self):
        """Gets the pagesize of this ProductionSearchBindingModel.  # noqa: E501


        :return: The pagesize of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: int
        """
        return self._pagesize

    @pagesize.setter
    def pagesize(self, pagesize):
        """Sets the pagesize of this ProductionSearchBindingModel.


        :param pagesize: The pagesize of this ProductionSearchBindingModel.  # noqa: E501
        :type: int
        """

        self._pagesize = pagesize

    @property
    def company_id(self):
        """Gets the company_id of this ProductionSearchBindingModel.  # noqa: E501


        :return: The company_id of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this ProductionSearchBindingModel.


        :param company_id: The company_id of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._company_id = company_id

    @property
    def logged_in_employee_id(self):
        """Gets the logged_in_employee_id of this ProductionSearchBindingModel.  # noqa: E501


        :return: The logged_in_employee_id of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._logged_in_employee_id

    @logged_in_employee_id.setter
    def logged_in_employee_id(self, logged_in_employee_id):
        """Sets the logged_in_employee_id of this ProductionSearchBindingModel.


        :param logged_in_employee_id: The logged_in_employee_id of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._logged_in_employee_id = logged_in_employee_id

    @property
    def calculated_date_field_type(self):
        """Gets the calculated_date_field_type of this ProductionSearchBindingModel.  # noqa: E501


        :return: The calculated_date_field_type of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._calculated_date_field_type

    @calculated_date_field_type.setter
    def calculated_date_field_type(self, calculated_date_field_type):
        """Sets the calculated_date_field_type of this ProductionSearchBindingModel.


        :param calculated_date_field_type: The calculated_date_field_type of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._calculated_date_field_type = calculated_date_field_type

    @property
    def calculated_start_comparison(self):
        """Gets the calculated_start_comparison of this ProductionSearchBindingModel.  # noqa: E501


        :return: The calculated_start_comparison of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._calculated_start_comparison

    @calculated_start_comparison.setter
    def calculated_start_comparison(self, calculated_start_comparison):
        """Sets the calculated_start_comparison of this ProductionSearchBindingModel.


        :param calculated_start_comparison: The calculated_start_comparison of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._calculated_start_comparison = calculated_start_comparison

    @property
    def calculated_end_comparison(self):
        """Gets the calculated_end_comparison of this ProductionSearchBindingModel.  # noqa: E501


        :return: The calculated_end_comparison of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._calculated_end_comparison

    @calculated_end_comparison.setter
    def calculated_end_comparison(self, calculated_end_comparison):
        """Sets the calculated_end_comparison of this ProductionSearchBindingModel.


        :param calculated_end_comparison: The calculated_end_comparison of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._calculated_end_comparison = calculated_end_comparison

    @property
    def calculated_start_date(self):
        """Gets the calculated_start_date of this ProductionSearchBindingModel.  # noqa: E501


        :return: The calculated_start_date of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: datetime
        """
        return self._calculated_start_date

    @calculated_start_date.setter
    def calculated_start_date(self, calculated_start_date):
        """Sets the calculated_start_date of this ProductionSearchBindingModel.


        :param calculated_start_date: The calculated_start_date of this ProductionSearchBindingModel.  # noqa: E501
        :type: datetime
        """

        self._calculated_start_date = calculated_start_date

    @property
    def calculated_end_date(self):
        """Gets the calculated_end_date of this ProductionSearchBindingModel.  # noqa: E501


        :return: The calculated_end_date of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: datetime
        """
        return self._calculated_end_date

    @calculated_end_date.setter
    def calculated_end_date(self, calculated_end_date):
        """Sets the calculated_end_date of this ProductionSearchBindingModel.


        :param calculated_end_date: The calculated_end_date of this ProductionSearchBindingModel.  # noqa: E501
        :type: datetime
        """

        self._calculated_end_date = calculated_end_date

    @property
    def date_range_type(self):
        """Gets the date_range_type of this ProductionSearchBindingModel.  # noqa: E501

        The selected dropdown, will be a user friendly date search name (this week) or set to customDateRange  # noqa: E501

        :return: The date_range_type of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._date_range_type

    @date_range_type.setter
    def date_range_type(self, date_range_type):
        """Sets the date_range_type of this ProductionSearchBindingModel.

        The selected dropdown, will be a user friendly date search name (this week) or set to customDateRange  # noqa: E501

        :param date_range_type: The date_range_type of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._date_range_type = date_range_type

    @property
    def custom_date_field(self):
        """Gets the custom_date_field of this ProductionSearchBindingModel.  # noqa: E501

        If set, will tell us what date field custom start and end will pertain to  # noqa: E501

        :return: The custom_date_field of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: str
        """
        return self._custom_date_field

    @custom_date_field.setter
    def custom_date_field(self, custom_date_field):
        """Sets the custom_date_field of this ProductionSearchBindingModel.

        If set, will tell us what date field custom start and end will pertain to  # noqa: E501

        :param custom_date_field: The custom_date_field of this ProductionSearchBindingModel.  # noqa: E501
        :type: str
        """

        self._custom_date_field = custom_date_field

    @property
    def custom_start(self):
        """Gets the custom_start of this ProductionSearchBindingModel.  # noqa: E501


        :return: The custom_start of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: datetime
        """
        return self._custom_start

    @custom_start.setter
    def custom_start(self, custom_start):
        """Sets the custom_start of this ProductionSearchBindingModel.


        :param custom_start: The custom_start of this ProductionSearchBindingModel.  # noqa: E501
        :type: datetime
        """

        self._custom_start = custom_start

    @property
    def custom_end(self):
        """Gets the custom_end of this ProductionSearchBindingModel.  # noqa: E501


        :return: The custom_end of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: datetime
        """
        return self._custom_end

    @custom_end.setter
    def custom_end(self, custom_end):
        """Sets the custom_end of this ProductionSearchBindingModel.


        :param custom_end: The custom_end of this ProductionSearchBindingModel.  # noqa: E501
        :type: datetime
        """

        self._custom_end = custom_end

    @property
    def is_custom_date(self):
        """Gets the is_custom_date of this ProductionSearchBindingModel.  # noqa: E501

        True for when custom dates should be respected  # noqa: E501

        :return: The is_custom_date of this ProductionSearchBindingModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_custom_date

    @is_custom_date.setter
    def is_custom_date(self, is_custom_date):
        """Sets the is_custom_date of this ProductionSearchBindingModel.

        True for when custom dates should be respected  # noqa: E501

        :param is_custom_date: The is_custom_date of this ProductionSearchBindingModel.  # noqa: E501
        :type: bool
        """

        self._is_custom_date = is_custom_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProductionSearchBindingModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ProductionSearchBindingModel):
            return True

        return self.to_dict() != other.to_dict()
