# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class PaymentReconciliationData(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'company_id': 'str',
        'event_id': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'email': 'str',
        'payment_id': 'int',
        'payment_created': 'datetime',
        'pay_simple_customer_id': 'int',
        'contact_id': 'str',
        'job_id': 'str',
        'created_by': 'str',
        'created_utc': 'datetime',
        'updated_by': 'str',
        'updated_utc': 'datetime',
        'pay_simple_payment_reconciliation_status_id': 'int',
        'pay_simple_payment_reconciliation_status': 'str',
        'amount': 'float',
        'job_name': 'str',
        'job_number': 'str',
        'contact_first_name': 'str',
        'contact_last_name': 'str'
    }

    attribute_map = {
        'company_id': 'companyID',
        'event_id': 'eventID',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'email': 'email',
        'payment_id': 'paymentID',
        'payment_created': 'paymentCreated',
        'pay_simple_customer_id': 'paySimpleCustomerID',
        'contact_id': 'contactID',
        'job_id': 'jobID',
        'created_by': 'createdBy',
        'created_utc': 'createdUTC',
        'updated_by': 'updatedBy',
        'updated_utc': 'updatedUTC',
        'pay_simple_payment_reconciliation_status_id': 'paySimplePaymentReconciliationStatusID',
        'pay_simple_payment_reconciliation_status': 'paySimplePaymentReconciliationStatus',
        'amount': 'amount',
        'job_name': 'jobName',
        'job_number': 'jobNumber',
        'contact_first_name': 'contactFirstName',
        'contact_last_name': 'contactLastName'
    }

    def __init__(self, company_id=None, event_id=None, first_name=None, last_name=None, email=None, payment_id=None, payment_created=None, pay_simple_customer_id=None, contact_id=None, job_id=None, created_by=None, created_utc=None, updated_by=None, updated_utc=None, pay_simple_payment_reconciliation_status_id=None, pay_simple_payment_reconciliation_status=None, amount=None, job_name=None, job_number=None, contact_first_name=None, contact_last_name=None, local_vars_configuration=None):  # noqa: E501
        """PaymentReconciliationData - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._company_id = None
        self._event_id = None
        self._first_name = None
        self._last_name = None
        self._email = None
        self._payment_id = None
        self._payment_created = None
        self._pay_simple_customer_id = None
        self._contact_id = None
        self._job_id = None
        self._created_by = None
        self._created_utc = None
        self._updated_by = None
        self._updated_utc = None
        self._pay_simple_payment_reconciliation_status_id = None
        self._pay_simple_payment_reconciliation_status = None
        self._amount = None
        self._job_name = None
        self._job_number = None
        self._contact_first_name = None
        self._contact_last_name = None
        self.discriminator = None

        if company_id is not None:
            self.company_id = company_id
        if event_id is not None:
            self.event_id = event_id
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if email is not None:
            self.email = email
        if payment_id is not None:
            self.payment_id = payment_id
        if payment_created is not None:
            self.payment_created = payment_created
        if pay_simple_customer_id is not None:
            self.pay_simple_customer_id = pay_simple_customer_id
        if contact_id is not None:
            self.contact_id = contact_id
        if job_id is not None:
            self.job_id = job_id
        if created_by is not None:
            self.created_by = created_by
        if created_utc is not None:
            self.created_utc = created_utc
        if updated_by is not None:
            self.updated_by = updated_by
        if updated_utc is not None:
            self.updated_utc = updated_utc
        if pay_simple_payment_reconciliation_status_id is not None:
            self.pay_simple_payment_reconciliation_status_id = pay_simple_payment_reconciliation_status_id
        if pay_simple_payment_reconciliation_status is not None:
            self.pay_simple_payment_reconciliation_status = pay_simple_payment_reconciliation_status
        if amount is not None:
            self.amount = amount
        if job_name is not None:
            self.job_name = job_name
        if job_number is not None:
            self.job_number = job_number
        if contact_first_name is not None:
            self.contact_first_name = contact_first_name
        if contact_last_name is not None:
            self.contact_last_name = contact_last_name

    @property
    def company_id(self):
        """Gets the company_id of this PaymentReconciliationData.  # noqa: E501


        :return: The company_id of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this PaymentReconciliationData.


        :param company_id: The company_id of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._company_id = company_id

    @property
    def event_id(self):
        """Gets the event_id of this PaymentReconciliationData.  # noqa: E501


        :return: The event_id of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this PaymentReconciliationData.


        :param event_id: The event_id of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._event_id = event_id

    @property
    def first_name(self):
        """Gets the first_name of this PaymentReconciliationData.  # noqa: E501


        :return: The first_name of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this PaymentReconciliationData.


        :param first_name: The first_name of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this PaymentReconciliationData.  # noqa: E501


        :return: The last_name of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this PaymentReconciliationData.


        :param last_name: The last_name of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def email(self):
        """Gets the email of this PaymentReconciliationData.  # noqa: E501


        :return: The email of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this PaymentReconciliationData.


        :param email: The email of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def payment_id(self):
        """Gets the payment_id of this PaymentReconciliationData.  # noqa: E501


        :return: The payment_id of this PaymentReconciliationData.  # noqa: E501
        :rtype: int
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """Sets the payment_id of this PaymentReconciliationData.


        :param payment_id: The payment_id of this PaymentReconciliationData.  # noqa: E501
        :type: int
        """

        self._payment_id = payment_id

    @property
    def payment_created(self):
        """Gets the payment_created of this PaymentReconciliationData.  # noqa: E501


        :return: The payment_created of this PaymentReconciliationData.  # noqa: E501
        :rtype: datetime
        """
        return self._payment_created

    @payment_created.setter
    def payment_created(self, payment_created):
        """Sets the payment_created of this PaymentReconciliationData.


        :param payment_created: The payment_created of this PaymentReconciliationData.  # noqa: E501
        :type: datetime
        """

        self._payment_created = payment_created

    @property
    def pay_simple_customer_id(self):
        """Gets the pay_simple_customer_id of this PaymentReconciliationData.  # noqa: E501


        :return: The pay_simple_customer_id of this PaymentReconciliationData.  # noqa: E501
        :rtype: int
        """
        return self._pay_simple_customer_id

    @pay_simple_customer_id.setter
    def pay_simple_customer_id(self, pay_simple_customer_id):
        """Sets the pay_simple_customer_id of this PaymentReconciliationData.


        :param pay_simple_customer_id: The pay_simple_customer_id of this PaymentReconciliationData.  # noqa: E501
        :type: int
        """

        self._pay_simple_customer_id = pay_simple_customer_id

    @property
    def contact_id(self):
        """Gets the contact_id of this PaymentReconciliationData.  # noqa: E501


        :return: The contact_id of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this PaymentReconciliationData.


        :param contact_id: The contact_id of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._contact_id = contact_id

    @property
    def job_id(self):
        """Gets the job_id of this PaymentReconciliationData.  # noqa: E501


        :return: The job_id of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this PaymentReconciliationData.


        :param job_id: The job_id of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._job_id = job_id

    @property
    def created_by(self):
        """Gets the created_by of this PaymentReconciliationData.  # noqa: E501


        :return: The created_by of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this PaymentReconciliationData.


        :param created_by: The created_by of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def created_utc(self):
        """Gets the created_utc of this PaymentReconciliationData.  # noqa: E501


        :return: The created_utc of this PaymentReconciliationData.  # noqa: E501
        :rtype: datetime
        """
        return self._created_utc

    @created_utc.setter
    def created_utc(self, created_utc):
        """Sets the created_utc of this PaymentReconciliationData.


        :param created_utc: The created_utc of this PaymentReconciliationData.  # noqa: E501
        :type: datetime
        """

        self._created_utc = created_utc

    @property
    def updated_by(self):
        """Gets the updated_by of this PaymentReconciliationData.  # noqa: E501


        :return: The updated_by of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this PaymentReconciliationData.


        :param updated_by: The updated_by of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def updated_utc(self):
        """Gets the updated_utc of this PaymentReconciliationData.  # noqa: E501


        :return: The updated_utc of this PaymentReconciliationData.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_utc

    @updated_utc.setter
    def updated_utc(self, updated_utc):
        """Sets the updated_utc of this PaymentReconciliationData.


        :param updated_utc: The updated_utc of this PaymentReconciliationData.  # noqa: E501
        :type: datetime
        """

        self._updated_utc = updated_utc

    @property
    def pay_simple_payment_reconciliation_status_id(self):
        """Gets the pay_simple_payment_reconciliation_status_id of this PaymentReconciliationData.  # noqa: E501


        :return: The pay_simple_payment_reconciliation_status_id of this PaymentReconciliationData.  # noqa: E501
        :rtype: int
        """
        return self._pay_simple_payment_reconciliation_status_id

    @pay_simple_payment_reconciliation_status_id.setter
    def pay_simple_payment_reconciliation_status_id(self, pay_simple_payment_reconciliation_status_id):
        """Sets the pay_simple_payment_reconciliation_status_id of this PaymentReconciliationData.


        :param pay_simple_payment_reconciliation_status_id: The pay_simple_payment_reconciliation_status_id of this PaymentReconciliationData.  # noqa: E501
        :type: int
        """

        self._pay_simple_payment_reconciliation_status_id = pay_simple_payment_reconciliation_status_id

    @property
    def pay_simple_payment_reconciliation_status(self):
        """Gets the pay_simple_payment_reconciliation_status of this PaymentReconciliationData.  # noqa: E501


        :return: The pay_simple_payment_reconciliation_status of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._pay_simple_payment_reconciliation_status

    @pay_simple_payment_reconciliation_status.setter
    def pay_simple_payment_reconciliation_status(self, pay_simple_payment_reconciliation_status):
        """Sets the pay_simple_payment_reconciliation_status of this PaymentReconciliationData.


        :param pay_simple_payment_reconciliation_status: The pay_simple_payment_reconciliation_status of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._pay_simple_payment_reconciliation_status = pay_simple_payment_reconciliation_status

    @property
    def amount(self):
        """Gets the amount of this PaymentReconciliationData.  # noqa: E501


        :return: The amount of this PaymentReconciliationData.  # noqa: E501
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this PaymentReconciliationData.


        :param amount: The amount of this PaymentReconciliationData.  # noqa: E501
        :type: float
        """

        self._amount = amount

    @property
    def job_name(self):
        """Gets the job_name of this PaymentReconciliationData.  # noqa: E501


        :return: The job_name of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this PaymentReconciliationData.


        :param job_name: The job_name of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._job_name = job_name

    @property
    def job_number(self):
        """Gets the job_number of this PaymentReconciliationData.  # noqa: E501


        :return: The job_number of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._job_number

    @job_number.setter
    def job_number(self, job_number):
        """Sets the job_number of this PaymentReconciliationData.


        :param job_number: The job_number of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._job_number = job_number

    @property
    def contact_first_name(self):
        """Gets the contact_first_name of this PaymentReconciliationData.  # noqa: E501


        :return: The contact_first_name of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._contact_first_name

    @contact_first_name.setter
    def contact_first_name(self, contact_first_name):
        """Sets the contact_first_name of this PaymentReconciliationData.


        :param contact_first_name: The contact_first_name of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._contact_first_name = contact_first_name

    @property
    def contact_last_name(self):
        """Gets the contact_last_name of this PaymentReconciliationData.  # noqa: E501


        :return: The contact_last_name of this PaymentReconciliationData.  # noqa: E501
        :rtype: str
        """
        return self._contact_last_name

    @contact_last_name.setter
    def contact_last_name(self, contact_last_name):
        """Sets the contact_last_name of this PaymentReconciliationData.


        :param contact_last_name: The contact_last_name of this PaymentReconciliationData.  # noqa: E501
        :type: str
        """

        self._contact_last_name = contact_last_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PaymentReconciliationData):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PaymentReconciliationData):
            return True

        return self.to_dict() != other.to_dict()
