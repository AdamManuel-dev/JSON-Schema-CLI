# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ContactJobResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'last_appointment_date': 'datetime',
        'jobs': 'list[Job]',
        'phone_numbers': 'list[SimplePhoneResourceModel]',
        'id': 'str',
        'company_id': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'contact_business_name': 'str',
        'address': 'str',
        'address_line2': 'str',
        'city': 'str',
        'state': 'str',
        'zip': 'str',
        'email1': 'str',
        'email2': 'str',
        'email3': 'str',
        'last_modified_date_time': 'datetime',
        'contact_type': 'str'
    }

    attribute_map = {
        'last_appointment_date': 'lastAppointmentDate',
        'jobs': 'jobs',
        'phone_numbers': 'phoneNumbers',
        'id': 'id',
        'company_id': 'companyId',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'contact_business_name': 'contactBusinessName',
        'address': 'address',
        'address_line2': 'addressLine2',
        'city': 'city',
        'state': 'state',
        'zip': 'zip',
        'email1': 'email1',
        'email2': 'email2',
        'email3': 'email3',
        'last_modified_date_time': 'lastModifiedDateTime',
        'contact_type': 'contactType'
    }

    def __init__(self, last_appointment_date=None, jobs=None, phone_numbers=None, id=None, company_id=None, first_name=None, last_name=None, contact_business_name=None, address=None, address_line2=None, city=None, state=None, zip=None, email1=None, email2=None, email3=None, last_modified_date_time=None, contact_type=None, local_vars_configuration=None):  # noqa: E501
        """ContactJobResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._last_appointment_date = None
        self._jobs = None
        self._phone_numbers = None
        self._id = None
        self._company_id = None
        self._first_name = None
        self._last_name = None
        self._contact_business_name = None
        self._address = None
        self._address_line2 = None
        self._city = None
        self._state = None
        self._zip = None
        self._email1 = None
        self._email2 = None
        self._email3 = None
        self._last_modified_date_time = None
        self._contact_type = None
        self.discriminator = None

        if last_appointment_date is not None:
            self.last_appointment_date = last_appointment_date
        if jobs is not None:
            self.jobs = jobs
        if phone_numbers is not None:
            self.phone_numbers = phone_numbers
        if id is not None:
            self.id = id
        if company_id is not None:
            self.company_id = company_id
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if contact_business_name is not None:
            self.contact_business_name = contact_business_name
        if address is not None:
            self.address = address
        if address_line2 is not None:
            self.address_line2 = address_line2
        if city is not None:
            self.city = city
        if state is not None:
            self.state = state
        if zip is not None:
            self.zip = zip
        if email1 is not None:
            self.email1 = email1
        if email2 is not None:
            self.email2 = email2
        if email3 is not None:
            self.email3 = email3
        if last_modified_date_time is not None:
            self.last_modified_date_time = last_modified_date_time
        if contact_type is not None:
            self.contact_type = contact_type

    @property
    def last_appointment_date(self):
        """Gets the last_appointment_date of this ContactJobResourceModel.  # noqa: E501

        Last Appointment Date for this contact, regardless of what inquiry it is on  # noqa: E501

        :return: The last_appointment_date of this ContactJobResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._last_appointment_date

    @last_appointment_date.setter
    def last_appointment_date(self, last_appointment_date):
        """Sets the last_appointment_date of this ContactJobResourceModel.

        Last Appointment Date for this contact, regardless of what inquiry it is on  # noqa: E501

        :param last_appointment_date: The last_appointment_date of this ContactJobResourceModel.  # noqa: E501
        :type: datetime
        """

        self._last_appointment_date = last_appointment_date

    @property
    def jobs(self):
        """Gets the jobs of this ContactJobResourceModel.  # noqa: E501


        :return: The jobs of this ContactJobResourceModel.  # noqa: E501
        :rtype: list[Job]
        """
        return self._jobs

    @jobs.setter
    def jobs(self, jobs):
        """Sets the jobs of this ContactJobResourceModel.


        :param jobs: The jobs of this ContactJobResourceModel.  # noqa: E501
        :type: list[Job]
        """

        self._jobs = jobs

    @property
    def phone_numbers(self):
        """Gets the phone_numbers of this ContactJobResourceModel.  # noqa: E501


        :return: The phone_numbers of this ContactJobResourceModel.  # noqa: E501
        :rtype: list[SimplePhoneResourceModel]
        """
        return self._phone_numbers

    @phone_numbers.setter
    def phone_numbers(self, phone_numbers):
        """Sets the phone_numbers of this ContactJobResourceModel.


        :param phone_numbers: The phone_numbers of this ContactJobResourceModel.  # noqa: E501
        :type: list[SimplePhoneResourceModel]
        """

        self._phone_numbers = phone_numbers

    @property
    def id(self):
        """Gets the id of this ContactJobResourceModel.  # noqa: E501


        :return: The id of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContactJobResourceModel.


        :param id: The id of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def company_id(self):
        """Gets the company_id of this ContactJobResourceModel.  # noqa: E501


        :return: The company_id of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this ContactJobResourceModel.


        :param company_id: The company_id of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._company_id = company_id

    @property
    def first_name(self):
        """Gets the first_name of this ContactJobResourceModel.  # noqa: E501


        :return: The first_name of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ContactJobResourceModel.


        :param first_name: The first_name of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this ContactJobResourceModel.  # noqa: E501


        :return: The last_name of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ContactJobResourceModel.


        :param last_name: The last_name of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def contact_business_name(self):
        """Gets the contact_business_name of this ContactJobResourceModel.  # noqa: E501


        :return: The contact_business_name of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._contact_business_name

    @contact_business_name.setter
    def contact_business_name(self, contact_business_name):
        """Sets the contact_business_name of this ContactJobResourceModel.


        :param contact_business_name: The contact_business_name of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._contact_business_name = contact_business_name

    @property
    def address(self):
        """Gets the address of this ContactJobResourceModel.  # noqa: E501


        :return: The address of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ContactJobResourceModel.


        :param address: The address of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def address_line2(self):
        """Gets the address_line2 of this ContactJobResourceModel.  # noqa: E501


        :return: The address_line2 of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this ContactJobResourceModel.


        :param address_line2: The address_line2 of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._address_line2 = address_line2

    @property
    def city(self):
        """Gets the city of this ContactJobResourceModel.  # noqa: E501


        :return: The city of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this ContactJobResourceModel.


        :param city: The city of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def state(self):
        """Gets the state of this ContactJobResourceModel.  # noqa: E501


        :return: The state of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ContactJobResourceModel.


        :param state: The state of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def zip(self):
        """Gets the zip of this ContactJobResourceModel.  # noqa: E501


        :return: The zip of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this ContactJobResourceModel.


        :param zip: The zip of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._zip = zip

    @property
    def email1(self):
        """Gets the email1 of this ContactJobResourceModel.  # noqa: E501


        :return: The email1 of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._email1

    @email1.setter
    def email1(self, email1):
        """Sets the email1 of this ContactJobResourceModel.


        :param email1: The email1 of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._email1 = email1

    @property
    def email2(self):
        """Gets the email2 of this ContactJobResourceModel.  # noqa: E501


        :return: The email2 of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._email2

    @email2.setter
    def email2(self, email2):
        """Sets the email2 of this ContactJobResourceModel.


        :param email2: The email2 of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._email2 = email2

    @property
    def email3(self):
        """Gets the email3 of this ContactJobResourceModel.  # noqa: E501


        :return: The email3 of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._email3

    @email3.setter
    def email3(self, email3):
        """Sets the email3 of this ContactJobResourceModel.


        :param email3: The email3 of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._email3 = email3

    @property
    def last_modified_date_time(self):
        """Gets the last_modified_date_time of this ContactJobResourceModel.  # noqa: E501


        :return: The last_modified_date_time of this ContactJobResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._last_modified_date_time

    @last_modified_date_time.setter
    def last_modified_date_time(self, last_modified_date_time):
        """Sets the last_modified_date_time of this ContactJobResourceModel.


        :param last_modified_date_time: The last_modified_date_time of this ContactJobResourceModel.  # noqa: E501
        :type: datetime
        """

        self._last_modified_date_time = last_modified_date_time

    @property
    def contact_type(self):
        """Gets the contact_type of this ContactJobResourceModel.  # noqa: E501


        :return: The contact_type of this ContactJobResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._contact_type

    @contact_type.setter
    def contact_type(self, contact_type):
        """Sets the contact_type of this ContactJobResourceModel.


        :param contact_type: The contact_type of this ContactJobResourceModel.  # noqa: E501
        :type: str
        """

        self._contact_type = contact_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ContactJobResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ContactJobResourceModel):
            return True

        return self.to_dict() != other.to_dict()
