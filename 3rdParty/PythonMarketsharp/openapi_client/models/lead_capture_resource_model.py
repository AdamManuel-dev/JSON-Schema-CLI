# coding: utf-8

"""
    MarketSharp CRM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class LeadCaptureResourceModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'primary_lead_source': 'SimplePrimaryLeadSourceResourceModel',
        'secondary_lead_source': 'SimpleSecondaryLeadSourceResourceModel',
        'activity_process': 'SimpleActivityProcessResourceModel',
        'employee_ids_to_notify': 'list[str]',
        'on_success_url': 'str',
        'on_error_url': 'str',
        'created_date': 'datetime',
        'created_by': 'str',
        'id': 'str',
        'name': 'str',
        'form_id': 'str'
    }

    attribute_map = {
        'primary_lead_source': 'primaryLeadSource',
        'secondary_lead_source': 'secondaryLeadSource',
        'activity_process': 'activityProcess',
        'employee_ids_to_notify': 'employeeIdsToNotify',
        'on_success_url': 'onSuccessUrl',
        'on_error_url': 'onErrorUrl',
        'created_date': 'createdDate',
        'created_by': 'createdBy',
        'id': 'id',
        'name': 'name',
        'form_id': 'formId'
    }

    def __init__(self, primary_lead_source=None, secondary_lead_source=None, activity_process=None, employee_ids_to_notify=None, on_success_url=None, on_error_url=None, created_date=None, created_by=None, id=None, name=None, form_id=None, local_vars_configuration=None):  # noqa: E501
        """LeadCaptureResourceModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._primary_lead_source = None
        self._secondary_lead_source = None
        self._activity_process = None
        self._employee_ids_to_notify = None
        self._on_success_url = None
        self._on_error_url = None
        self._created_date = None
        self._created_by = None
        self._id = None
        self._name = None
        self._form_id = None
        self.discriminator = None

        if primary_lead_source is not None:
            self.primary_lead_source = primary_lead_source
        if secondary_lead_source is not None:
            self.secondary_lead_source = secondary_lead_source
        if activity_process is not None:
            self.activity_process = activity_process
        if employee_ids_to_notify is not None:
            self.employee_ids_to_notify = employee_ids_to_notify
        if on_success_url is not None:
            self.on_success_url = on_success_url
        if on_error_url is not None:
            self.on_error_url = on_error_url
        if created_date is not None:
            self.created_date = created_date
        if created_by is not None:
            self.created_by = created_by
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if form_id is not None:
            self.form_id = form_id

    @property
    def primary_lead_source(self):
        """Gets the primary_lead_source of this LeadCaptureResourceModel.  # noqa: E501


        :return: The primary_lead_source of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: SimplePrimaryLeadSourceResourceModel
        """
        return self._primary_lead_source

    @primary_lead_source.setter
    def primary_lead_source(self, primary_lead_source):
        """Sets the primary_lead_source of this LeadCaptureResourceModel.


        :param primary_lead_source: The primary_lead_source of this LeadCaptureResourceModel.  # noqa: E501
        :type: SimplePrimaryLeadSourceResourceModel
        """

        self._primary_lead_source = primary_lead_source

    @property
    def secondary_lead_source(self):
        """Gets the secondary_lead_source of this LeadCaptureResourceModel.  # noqa: E501


        :return: The secondary_lead_source of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: SimpleSecondaryLeadSourceResourceModel
        """
        return self._secondary_lead_source

    @secondary_lead_source.setter
    def secondary_lead_source(self, secondary_lead_source):
        """Sets the secondary_lead_source of this LeadCaptureResourceModel.


        :param secondary_lead_source: The secondary_lead_source of this LeadCaptureResourceModel.  # noqa: E501
        :type: SimpleSecondaryLeadSourceResourceModel
        """

        self._secondary_lead_source = secondary_lead_source

    @property
    def activity_process(self):
        """Gets the activity_process of this LeadCaptureResourceModel.  # noqa: E501


        :return: The activity_process of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: SimpleActivityProcessResourceModel
        """
        return self._activity_process

    @activity_process.setter
    def activity_process(self, activity_process):
        """Sets the activity_process of this LeadCaptureResourceModel.


        :param activity_process: The activity_process of this LeadCaptureResourceModel.  # noqa: E501
        :type: SimpleActivityProcessResourceModel
        """

        self._activity_process = activity_process

    @property
    def employee_ids_to_notify(self):
        """Gets the employee_ids_to_notify of this LeadCaptureResourceModel.  # noqa: E501


        :return: The employee_ids_to_notify of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: list[str]
        """
        return self._employee_ids_to_notify

    @employee_ids_to_notify.setter
    def employee_ids_to_notify(self, employee_ids_to_notify):
        """Sets the employee_ids_to_notify of this LeadCaptureResourceModel.


        :param employee_ids_to_notify: The employee_ids_to_notify of this LeadCaptureResourceModel.  # noqa: E501
        :type: list[str]
        """

        self._employee_ids_to_notify = employee_ids_to_notify

    @property
    def on_success_url(self):
        """Gets the on_success_url of this LeadCaptureResourceModel.  # noqa: E501


        :return: The on_success_url of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._on_success_url

    @on_success_url.setter
    def on_success_url(self, on_success_url):
        """Sets the on_success_url of this LeadCaptureResourceModel.


        :param on_success_url: The on_success_url of this LeadCaptureResourceModel.  # noqa: E501
        :type: str
        """

        self._on_success_url = on_success_url

    @property
    def on_error_url(self):
        """Gets the on_error_url of this LeadCaptureResourceModel.  # noqa: E501


        :return: The on_error_url of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._on_error_url

    @on_error_url.setter
    def on_error_url(self, on_error_url):
        """Sets the on_error_url of this LeadCaptureResourceModel.


        :param on_error_url: The on_error_url of this LeadCaptureResourceModel.  # noqa: E501
        :type: str
        """

        self._on_error_url = on_error_url

    @property
    def created_date(self):
        """Gets the created_date of this LeadCaptureResourceModel.  # noqa: E501


        :return: The created_date of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this LeadCaptureResourceModel.


        :param created_date: The created_date of this LeadCaptureResourceModel.  # noqa: E501
        :type: datetime
        """

        self._created_date = created_date

    @property
    def created_by(self):
        """Gets the created_by of this LeadCaptureResourceModel.  # noqa: E501


        :return: The created_by of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this LeadCaptureResourceModel.


        :param created_by: The created_by of this LeadCaptureResourceModel.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def id(self):
        """Gets the id of this LeadCaptureResourceModel.  # noqa: E501


        :return: The id of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LeadCaptureResourceModel.


        :param id: The id of this LeadCaptureResourceModel.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this LeadCaptureResourceModel.  # noqa: E501


        :return: The name of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LeadCaptureResourceModel.


        :param name: The name of this LeadCaptureResourceModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def form_id(self):
        """Gets the form_id of this LeadCaptureResourceModel.  # noqa: E501


        :return: The form_id of this LeadCaptureResourceModel.  # noqa: E501
        :rtype: str
        """
        return self._form_id

    @form_id.setter
    def form_id(self, form_id):
        """Sets the form_id of this LeadCaptureResourceModel.


        :param form_id: The form_id of this LeadCaptureResourceModel.  # noqa: E501
        :type: str
        """

        self._form_id = form_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LeadCaptureResourceModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, LeadCaptureResourceModel):
            return True

        return self.to_dict() != other.to_dict()
