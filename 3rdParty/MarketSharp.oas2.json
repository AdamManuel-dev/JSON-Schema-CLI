{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "MarketSharp CRM API"
  },
  "host": "restapi1aws.marketsharpm.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Retrieve a token",
        "description": "There are two ways to authenticate with this API. Application Authentication and Employee Authentication. <br />You need credentials provided by Marketsharp in order to authenticate with this API <br /><br />Application Authentication can be used access more than one Marketsharp company with the same set of credentials. <br />Employee Authentication uses your Marketsharp login credentials to authenticate to the api. Therefore, you would need to know login credentals to every marketsharp company you need access to.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "grant_type",
            "in": "formData",
            "description": "Set to password",
            "required": true,
            "type": "string",
            "default": "password"
          },
          {
            "name": "companyId",
            "in": "formData",
            "description": "Your Marketsharp Company Id. Provide when authenticating. Takes precedence over company_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "apikey",
            "in": "formData",
            "description": "Provided by MarketSharp",
            "required": true,
            "type": "string"
          },
          {
            "name": "apisecret",
            "in": "formData",
            "description": "Provide only if you authenticating as an application.",
            "required": false,
            "type": "string"
          },
          {
            "name": "empoid",
            "in": "formData",
            "description": "Provide only if you authenticating as an application.",
            "required": false,
            "type": "string"
          },
          {
            "name": "company_id",
            "in": "formData",
            "description": "Provide only if you authenticating as an employee. This parameter is deprecated and will be removed in the future. Please use companyId instead",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "formData",
            "description": "Provide only if you authenticating as an employee.",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Provide only if you authenticating as an employee.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/companies/{companyId}/activityprocesses": {
      "get": {
        "tags": [
          "ActivityProcesses"
        ],
        "summary": "List all activity processes",
        "operationId": "ActivityProcesses_GetActivityProcesses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LeadCaptureResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/activities/process/{activityProcessId}/proposedActivities": {
      "post": {
        "tags": [
          "ActivityProcesses"
        ],
        "summary": "Returns pending activities auto-generated from activity process configuration.",
        "operationId": "ActivityProcesses_GetProposedActivities",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityProcessId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "description": "RequestType for now is ProductionStep. More to come later, such as ServiceOrder.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposedActivitiesRequestBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProposedActivityResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyid}/activitityprocessid": {
      "post": {
        "tags": [
          "ActivityProcesses"
        ],
        "summary": "Get activity process id.",
        "description": "This endpoint returns and activity process id for a given \r\n            reference id and result id. The reference id can be null if one doesn't\r\n            exist. Result id is required.",
        "operationId": "ActivityProcesses_GetActivityProcessIdFromRefAndRes",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceAndResultBindingModel"
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/activities/references": {
      "get": {
        "tags": [
          "ActivityReferences"
        ],
        "summary": "Get activity references for a company.",
        "operationId": "ActivityReferences_GetActivityReferences",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityReferenceResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/activities/results": {
      "get": {
        "tags": [
          "ActivityResult"
        ],
        "summary": "Retrieve Activity Results",
        "operationId": "ActivityResult_GetActivityResults",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "(optional)",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityResultResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/activities/types": {
      "get": {
        "tags": [
          "ActivityTypes"
        ],
        "summary": "Get activity types.",
        "operationId": "ActivityTypes_GetActivityReferences",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityTypeResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/additionalcontacts/search": {
      "post": {
        "tags": [
          "AdditionalContacts"
        ],
        "summary": "Search for additional contacts",
        "description": "QuickFind - Additional Contact Search. Employee id required in bearer token.",
        "operationId": "AdditionalContacts_SearchAdditionalContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "additionalContact",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdditionalContactSearchBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/additionalcontacts/search": {
      "post": {
        "tags": [
          "AdditionalContacts"
        ],
        "summary": "Search for additional contacts",
        "operationId": "AdditionalContacts_SearchAdditionalContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "additionalContact",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdditionalContactSearchBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/salesoverview": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Used to retrieve the sales overview.",
        "description": "This endpoint takes 2 parameters. A boolean, determining whether to use net sales or gross sales.\r\nA value of true indicates that net sales should be used. And an array of string \r\nvalues that represent the divisions to include. <br />\r\nExample { Divisions : [\"Indoor\", \"Outdoor\", \"Unspecified\"], NetSales : false } <br />\r\nThe result will be returned as an objects as shown below with 4 properties. <br />\r\nExample {\"todaysSales\":\"$0.00\",\"yesterdaysSales\":\"$0.00\",\"mtdSales\":\"$0.00\",\"ytdSales\":\"$501.00\"}",
        "operationId": "Analytics_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/leadsgeneratedbyprimaryleadsource": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Used to retrieve a company's leads that are generated by primary lead source.",
        "description": "This endpoint takes 3 parameters, an array of string values that represent the divisions to include and\r\na begin date and end date to determine the range of the query.\r\n<br />\r\nExample { Divisions : [\"'Unspecified'\"], \r\n          StartDate : \"2016-04-23T18:25:43.511Z\", \r\n          EndDate : \"2016-12-23T18:25:43.511Z\" } <br />\r\nThe result will be returned as an array of objects with each object having 2 properties - \r\na value property and an argument property. <br />\r\nExample [{\"value\":8,\"argument\":\"Canvass\"},{\"value\":4,\"argument\":\"Direct Mail\"}]",
        "operationId": "Analytics_GetLeads",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/performanceratios": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Used to retrieve a company's performance ratios.",
        "description": "This endpoint takes 1 parameter, an array of string values that represent the divisions to include. <br />\r\nExample { Divisions : [\"Indoor\", \"Outdoor\", \"Unspecified\"] } <br />\r\nThe performance ratios will be returned as shown below. <br />\r\nExample {\"todaysPr\":\"0.0%\",\"yesterdaysPr\":\"0.0%\",\"mtdPr\":\"0.0%\",\"ytdPr\":\"115.8%\"}",
        "operationId": "Analytics_GetPerformanceRatios",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/closingratios": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Used to retrieve a company's closing ratios.",
        "description": "This endpoint takes 2 parameters. A boolean, determining whether to get the net closing ratios or the \r\ngross closing ratios. A value of true indicates that net sales should be used. And an array of string \r\nvalues that represent the divisions to include. <br />\r\nExample { Divisions : [\"Indoor\", \"Outdoor\", \"Unspecified\"], NetSales : false } <br />\r\nThe closing ratios will be returned as shown here. <br />\r\nExample {\"todaysCr\":\"0.0%\",\"yesterdaysCr\":\"0.0%\",\"mtdCr\":\"0.0%\",\"ytdCr\":\"15.0%\"}",
        "operationId": "Analytics_GetClosingRatios",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/divisions": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Used to retrieve the avaliable divisions.",
        "description": "This endpoint takes a single parameter a boolean, determining whether to include white space divisions. <br />\r\nExample { IncludeWhiteSpaceDivs : true } <br />\r\nAn array of string values will be returned <br />\r\nExample [\"Division I\",\"Location 1\",\"Indoor\",\"Outdoor\",\"Unspecified\"]",
        "operationId": "Analytics_GetDivisions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/userprefdivisions": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve a users saved preferences for what divisions are selected for a given\r\ndashboard widget.",
        "description": "This endpoint requires a single parameter passed in the body of the post which is the unique\r\nidentifier for the dashboard widget for which the save preferences should be retrieved. <br />\r\nExample { WidgetGuid : '########-####-####-####-############' } <br />\r\nAn array of strings will be returned containing the divisions. <br />\r\nExample [\"Division I\", \"Indoor\", \"Outdoor\", \"Unspecified\"]",
        "operationId": "Analytics_GetUserPrefDivisions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Some response text",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/userprefusenetvalue": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve a users saved preference for the use net value of a specific widget.",
        "description": "This endpoint requires a single parameter passed in the body of the post which is the unique\r\nidentifier for the dashboard widget for which the saved preference should be retrieved. <br />\r\nExample { WidgetGuid : '########-####-####-####-############' } <br />\r\nA boolean will be returned, which if set to True, indicates to use net and if set to False, use gross. A value of\r\nnull indicates the preference was not found for the given parameters",
        "operationId": "Analytics_GetUserPrefUseNetValue",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/userprefdaterangequickpick": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve a users saved preference for the date range quick pick value of a specific widget.",
        "description": "This endpoint requires a single parameter passed in the body of the post which is the unique\r\nidentifier for the dashboard widget for which the saved preference should be retrieved. <br />\r\nExample { WidgetGuid : '########-####-####-####-############' } <br />\r\nA string will be returned",
        "operationId": "Analytics_GetUserPrefDateRangeQuickPick",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/userprefdaterangestart": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve a users saved preference for the date range start value of a specific widget.",
        "description": "This endpoint requires a single parameter passed in the body of the post which is the unique\r\nidentifier for the dashboard widget for which the saved preference should be retrieved. <br />\r\nExample { WidgetGuid : '########-####-####-####-############' } <br />\r\nIf the preference is found, a Date will be returned representing the start range, otherwise null will be returned",
        "operationId": "Analytics_GetUserPrefDateRangeStart",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/userprefdaterangeend": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve a users saved preference for the date range end value of a specific widget.",
        "description": "This endpoint requires a single parameter passed in the body of the post which is the unique\r\nidentifier for the dashboard widget for which the saved preference should be retrieved. <br />\r\nExample { WidgetGuid : '########-####-####-####-############' } <br />\r\nIf the preference is found, a Date will be returned representing the end range, otherwise null will be returned",
        "operationId": "Analytics_GetUserPrefDateRangeEnd",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/saveuserprefdivisions": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to save a users preference for the selected divisions of a given dashboard widget.",
        "description": "This endpoint requires 2 parameters. The unique identifier for the dashboard widget (GUID) and the division values (array). Ensure that \r\nany division values passed into this endpoint do not contain the character sequence \"','\" as this is used as a delimiter.<br />\r\nExample { WidgetGuid : '########-####-####-####-############', Divisions :  [\"Division I\" , \"Location 1\"]} <br />\r\nA boolean will be returned indicating the success or failure of the operation. If the value is true the operation\r\nwas successful. <br />\r\nExample { success: true}",
        "operationId": "Analytics_SaveUserPrefDivisions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/saveUserPrefDateRangeQuickPick": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "Analytics_SaveUserPrefDateRangeQuickPick",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/saveUserPrefDateRangeStart": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "Analytics_SaveUserPrefDateRangeStart",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/saveUserPrefDateRangeEnd": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "Analytics_SaveUserPrefDateRangeEnd",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/saveuserprefusenetvalue": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to save a users preference for the use net value of a specific widget.",
        "description": "This endpoint requires 2 parameters. The unique identifier for the dashboard widget (GUID) and the use net value\r\nwhich should be set to True or False (string). <br />\r\nExample { WidgetGuid : '########-####-####-####-############', PrefValue :  \"True\"} <br />\r\nA boolean will be returned indicating the success or failure of the operation. If the value is true the operation \r\nwas successful. <br />\r\nReturn Example { success: true }",
        "operationId": "Analytics_SaveUserPrefUseNetValue",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/salespace": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Used to retrieve a company's sales pace.",
        "description": "This endpoint takes one parameter, UseSalesPaceMonth which is a boolean. When set to true the\r\ncalculations will be performed for the current month. False results in a yearly calculation.<br />\r\nThe sales pace will be returned as shown here. All values are decimals.<br />\r\nReturn Example {   \"salesGoal\": 50000, \"sales\": 1730, \"onPaceToMake\": 5688.7387387387387387387387388,\r\n                   \"percentToDate\": 30.4, \"percentSalesGoal\": 3.5, \"efficiencySpeed\": 11.4 }",
        "operationId": "Analytics_GetSalesPace",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/userprefusemonthlyvalue": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve a users saved preference for the use monthly value of a specific widget.\r\nKnown to be used for the \r\nwidget.",
        "description": "This endpoint requires a single parameter passed in the body of the post which is the unique\r\nidentifier for the dashboard widget for which the saved preference should be retrieved. <br />\r\nExample { WidgetGuid : '########-####-####-####-############' } <br />\r\nA boolean will be returned, set to either True, False, or null. A null value indicates the preference\r\nwas not found for the user.",
        "operationId": "Analytics_GetUserPrefUseMonthlyValue",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/saveuserprefusemonthlyvalue": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to save a users preference for the use monthly value of a specific widget. Known to be used for\r\nthe Company Sales Pace widget.",
        "description": "This endpoint requires 2 parameters. The unique identifier for the dashboard widget (GUID) and the use monthly value\r\nwhich should be set to 'True' or 'False' (string). <br />\r\nExample { WidgetGuid : '########-####-####-####-############', PrefValue :  \"True\"} <br />\r\nA boolean will be returned indicating the success or failure of the operation. If the value is true the operation\r\nwas successful.",
        "operationId": "Analytics_SaveUserPrefusemonthlyvalue",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/salespaceprereqsmet": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to determine if the neccessary data to determine the sales pace is avaliable.",
        "description": "This endpoint requires a single boolean parameter, set UseSalesPaceYear of the model to true to indicate\r\nthat the enitre year should be checked and to false to indicate that the current month should be checked. <br />\r\nExample: {UseSalesPaceYear : true}\r\nAn array of strings representing the missing months will be returned. If the array size is 0 and not null, \r\nall the required data is present. <br />\r\nReturn Example [\"2/17\", \"3/17\"]",
        "operationId": "Analytics_SalesPacePrereqsMet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/operatingstatement": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint returns a companies operating statement.",
        "description": "This endpoint requires 7 parameters for all data to be returned correctly. <br />\r\nDivisions An array of string values that represent the divisions to include\r\nStartDate - A date indicating the start range for which to query the data. <br />\r\nEndDate - A date indicating the end range for which to query the data.<br />\r\nNumInquiries, NumApptsRun, NumApptsIssued, NumApptsPresented <br />\r\nExample {Divisions : [\"Indoor'\", \"'Outdoor\", \"'Unspecified'\"], StartDate : \"2016-04-23T18:25:43.511Z\", EndDate : \"2016-12-23T18:25:43.511Z\",\r\n         NumInquiries : 20, NumApptsRun : 10, NumApptsIssued : 8, NumApptsPresented : 15 } <br />\r\nAn object containing the following properties will be returned:  <br />\r\nint TotalCalls <br />\r\nint NumInquiries <br />\r\nint NumApptSet <br />\r\nint NumActivitiesConfirmed <br />\r\nint NumApptsIssued <br />\r\nint NumApptsPresented <br />\r\ndecimal TotalQuoted <br />\r\nint TotalSold <br />\r\nint GrossSalesQty <br />\r\nint NetSalesQty <br />\r\ndecimal GrossSalesDollarAmt <br />\r\ndecimal NetSalesDollarAmt <br />\r\ndecimal CanceledSales <br />\r\ndecimal FinanceRejectedSales <br />\r\ndecimal PendingSales <br />\r\ndecimal InquiriesToGrossSold <br />\r\ndecimal InquiriesToNetSold <br />\r\ndecimal ApptsToGrossSold <br />\r\ndecimal ApptsToNetSold <br />\r\ndecimal ApptsIssuedToGrossSold <br />\r\ndecimal ApptsIssuedToNetSold <br />\r\ndecimal ApptsPresentedToGrossSold <br />\r\ndecimal ApptsPresentedToNetSold <br />\r\ndecimal GrossSalesPerApptIssued <br />\r\ndecimal GrossSalesPerApptPresented <br />\r\ndecimal NetSalesPerApptIssued <br />\r\ndecimal NetSalesPerApptPresented <br />\r\ndecimal JobsCompletedQty <br />\r\ndecimal JobsCompletedDollarAmt <br />\r\ndecimal NumServiceCalls <br />\r\ndecimal NumDistinctProposals <br />\r\ndecimal MoneyReceived <br />",
        "operationId": "Analytics_GetOperatingStatement",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/performanceratiosbysalesperson": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve the performance ratios for employees for a given set of divisions\r\nand in a give time period.",
        "description": "This endpoint requires the following parameters:\r\nDivisions An array of string values that represent the divisions to include\r\nStartDate - A date indicating the start range for which to query the data. <br />\r\nEndDate - A date indicating the end range for which to query the data.<br />\r\nExample {Divisions : [\"Indoor'\", \"'Outdoor\", \"'Unspecified'\"], StartDate : \"2016-04-23T18:25:43.511Z\", EndDate : \"2016-12-23T18:25:43.511Z\" <br />\r\nAn array of ojects with each object representing a sales person will be returned. Each object has a name property which represents\r\nthe sales persons name and a ratio property representing the performance ratio.  <br />\r\nReturn Example [{\"name\":\"Easter Bunny\",\"ratio\":111.80000000},{\"name\":\"Santa Claus\",\"ratio\":0.00000000}]",
        "operationId": "Analytics_GetPerformanceRatiosBySP",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/companyperformancestandards": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve the performance standards for a company.",
        "description": "This endpoint requires no parameters. <br />\r\nAn array of ojects with each object representing a performance parameter will be returned. Each object has three properties: <br />\r\nName String The performance standard name <br />\r\nTarget int The target value of the standard <br />\r\nMinimum int The minimum value of the standard <br />\r\nReturn Example [{\"name\":\"Performance Ratio\",\"target\":125,\"minimum\":100},{\"name\":\"Presentations\",\"target\":80,\"minimum\":70}]",
        "operationId": "Analytics_GetCompanyPerformanceStandards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/closingratiosbysalesperson": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve the closing ratios for employees for a given set of divisions\r\nand in a give time period.",
        "description": "This endpoint requires the following parameters:\r\nDivisions An array of string values that represent the divisions to include\r\nStartDate - A date indicating the start range for which to query the data. <br />\r\nEndDate - A date indicating the end range for which to query the data.<br />\r\nExample {Divisions : [\"Indoor'\", \"'Outdoor\", \"'Unspecified'\"], StartDate : \"2016-04-23T18:25:43.511Z\", EndDate : \"2016-12-23T18:25:43.511Z\"} <br />\r\nAn array of ojects with each object representing a sales person will be returned. Each object has a name property which represents\r\nthe sales persons name and a ratio property representing the closing ratio.  <br />\r\nReturn Example [{\"name\":\"Easter Bunny\",\"ratio\":12.0},{\"name\":\"Santa Claus\",\"ratio\":13.0}]",
        "operationId": "Analytics_GetSalesPersonClosingRatios",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/salespacebysalesperson": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve the sales pace for a sales person.",
        "description": "This endpoint requires the following parameters:\r\nUseSalesPaceYear A boolean indicating whether to use the whole year or the current month for calculations true indicates use month. <br />\r\nExample {UseSalesPaceMonth : true} <br />",
        "operationId": "Analytics_GetSalesPersonSalesPace",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/salespacebysalespersonpreqsmet": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "Analytics_SalesPersonPrereqsMet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/netsalesbysalesperson": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve the net sales of sales people given a set of divisions and a time period.",
        "description": "This endpoint requires the following parameters:\r\nDivisions An array of string values that represent the divisions to include\r\nStartDate - A date indicating the start range for which to query the data. <br />\r\nEndDate - A date indicating the end range for which to query the data.<br />\r\nExample {Divisions : [\"Indoor'\", \"'Outdoor\", \"'Unspecified'\"], StartDate : \"2016-04-23T18:25:43.511Z\", EndDate : \"2016-12-23T18:25:43.511Z\"} <br />\r\nAn array of ojects with each object representing a sales person will be returned. Each object has a name property which represents\r\nthe sales persons name and a value property representing the sales.  <br />\r\nReturn Example [{\"name\":\"Easter Bunny\",\"value\":0.00}}]",
        "operationId": "Analytics_GetSalesPersonNetSales",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/netsalescomparedtoinstalledjobs": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve the net sales and the installed jobs for a given set of divisions over the course of \r\na year.",
        "description": "This endpoint requires the following parameters:\r\nDivisions An array of string values that represent the divisions to include <br />\r\nExample {Divisions : [\"Indoor'\", \"'Outdoor\", \"'Unspecified'\"]} <br />\r\nThe return is as shown below, however each array contains 12 'month value object pairs', 2 have been shown for simplicity. <br />\r\nReturn Example {\"netSales\":[{\"month\":\"April\",\"value\":5388.00},{\"month\":\"May\",\"value\":57100.00}], \r\n\"installedJobs\":[{\"month\":\"April\",\"value\":5000.00},{\"month\":\"May\",\"value\":0.00}]}",
        "operationId": "Analytics_GetNetSalesComparedToInstalledJobs",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/netsalescomparedtoprioryear": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "This endpoint is used to retrieve the net sales for the current year and the previous year.",
        "description": "This endpoint requires the following parameters:\r\nDivisions An array of string values that represent the divisions to include <br />\r\nExample {Divisions : [\"Indoor'\", \"'Outdoor\", \"'Unspecified'\"]} <br />\r\nThe return is as shown below, however each array contains 12 'month value object pairs', 2 have been shown for simplicity. <br />\r\nReturn Example {\"netSalesThisYear\":[{\"month\":\"April\",\"value\":5388.00},{\"month\":\"May\",\"value\":57100.00}], \r\n\"netSalesLastYear\":[{\"month\":\"April\",\"value\":5000.00},{\"month\":\"May\",\"value\":0.00}]}",
        "operationId": "Analytics_GetNetSalesComparedToPriorYear",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/analytics/allUserPrefs/{employeeId}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "operationId": "Analytics_GetAllUserPrefs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/appointments/{appointmentId}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Retrieve an appointment",
        "description": "See the Filter for appointments endpoint for more information",
        "operationId": "Appointments_GetAppointmentById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/appointments/filter": {
      "post": {
        "tags": [
          "Appointments"
        ],
        "summary": "Filter for appointments",
        "description": "The result will be returned as JSON as shown below with the following key/value pairs. <br />\r\nid: The oid representing the appointment<br />\r\ncontactId: The id of the associated contact<br />\r\ninquiryId: The id of the lead inquiry record<br />\r\nappointmentDateTime: The time the appointment is scheduled for.  Timezone is company Timezone.<br />\r\nsalesperson: The saleperson of for the appointment as set in the Salesperson 1 field<br />\r\nsalesperson2: The saleperson of for the appointment as set in the Salesperson 2 field<br />\r\ntype: The type of appointment as set in the Add/Edit Lead Appointment modal<br />\r\nsetBy: The name of the employee that set the appointment<br />\r\ndateIssued: User editable field when appointment was issued<br />\r\nresult: Appointment result<br />\r\nresultReason: The result reason for the appointment, description of what happened<br />\r\nnotes: The notes for the appointment<br />\r\naddress: The jobsite address if any part of the jobsite address is present otherwise the contact address<br />\r\naddressLine2: The jobsite address line 2 if any part of the jobsite address is present otherwise the contact address<br />\r\ncity: The jobsite city if any part of the jobsite address info is present otherwise the contact city<br />\r\nstate: The jobsite state if any part of the jobsite address info is present otherwise the contact state<br />\r\nzip: The jobsite zip if any part of the jobsite address info is present otherwise the contact zip<br />\r\ndirections: Directions to the job site address<br />\r\nlastModifiedDate: This represents the most recent last updated date when looking at all the data (each appointment) returned excluding\r\nsetBy<br />",
        "operationId": "Appointments_FilterAppointments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/appointments/results/active": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "List active appointment results",
        "operationId": "Appointments_GetAppoinmentResults",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApptResultResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/appointments/resultreasons/active": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "List active appointment result reasons",
        "operationId": "Appointments_GetAppointmentResultReasons",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RejectReasonResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/appointments/{appointmentId}/result": {
      "post": {
        "tags": [
          "Appointments"
        ],
        "summary": "Result an appointment",
        "description": "See the Filter for appointments endpoint for more information",
        "operationId": "Appointments_ResultAppointment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApptResultBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResourceModel"
            }
          }
        }
      }
    },
    "/appointments/{appointmentId}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Retrieve an appointment - Deprecated",
        "operationId": "Appointments_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResourceModel"
            }
          }
        },
        "deprecated": true
      }
    },
    "/appointments/search": {
      "post": {
        "tags": [
          "Appointments"
        ],
        "summary": "Filter for appointments - Deprecated",
        "operationId": "Appointments_SearchAppointments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/appointments/results": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "List active appointment results - Deprecated",
        "operationId": "Appointments_ApptResults",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApptResultResourceModel"
            }
          }
        },
        "deprecated": true
      }
    },
    "/appointments/reasons": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "List active appointment result reasons - Deprecated",
        "operationId": "Appointments_RejectionReasons",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RejectReasonResourceModel"
            }
          }
        },
        "deprecated": true
      }
    },
    "/appointments/resultAppt": {
      "post": {
        "tags": [
          "Appointments"
        ],
        "summary": "Result an appointment - Deprecated",
        "operationId": "Appointments_UpdateApptResult",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApptResultBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResourceModel"
            }
          }
        },
        "deprecated": true
      }
    },
    "/companies/{companyId}/calendar/categories": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get all calendar categories for a company",
        "operationId": "Calendar_GetCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryResourceModel"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Update a calendar category.",
        "operationId": "Calendar_UpdateCategory",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryResourceModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Create a calendar category.",
        "operationId": "Calendar_CreateCategory",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryResourceModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Calendar"
        ],
        "summary": "Delete a calendar category.",
        "operationId": "Calendar_DeleteCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/events/filter": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get calendar events in a specified date range",
        "operationId": "Calendar_GetFilteredEvents",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventDatesBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/callcenter/events/filter": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get calendar events in a specified date range",
        "operationId": "Calendar_GetCallCenterFilteredEvents",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventDatesBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/events": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get all calendar events for a company",
        "operationId": "Calendar_GetEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventResourceModel"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Update a calendar event and send an email to all resources listed if sendEmail is set to true.",
        "operationId": "Calendar_UpdateEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventViewModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Create a calendar event and send an email to all resources listed if sendEmail is set to true.",
        "operationId": "Calendar_CreateEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventViewModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Calendar"
        ],
        "summary": "Delete a calendar event.",
        "operationId": "Calendar_DeleteEvent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventViewModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/events/exception": {
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Updates an exception (only) to a CalendarEvent",
        "operationId": "Calendar_UpdateEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralEventExceptionBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventViewModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Creates an Exception to a Recurring CalendarEvent",
        "operationId": "Calendar_CreateEventException",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralEventExceptionBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventViewModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/events/move": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Moves a Calendar Event to a new datetime",
        "operationId": "Calendar_MoveEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/events/reschedule": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Reschedule a Calendar Event to a new datetime and/or resource",
        "operationId": "Calendar_RescheduleEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RescheduleEventBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/events/sales/mapped": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Updates Salespeople for a Sales Appointment",
        "operationId": "Calendar_UpdateMappedSalesAppointmentEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/resources": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get all calendar resources for a company",
        "operationId": "Calendar_GetResources",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourcesResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/resources/color": {
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Inserts or Updates a Resource Color",
        "operationId": "Calendar_UpdateResourceColor",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourcesResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/userPrefs": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get all calendar user preferences for an employee",
        "operationId": "Calendar_GetUserPrefs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserPrefResourceModel"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Update a calendar user preference for an employee.",
        "operationId": "Calendar_UpdateUserPref",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPrefBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserPrefResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyid}/calendar/eventContact": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "operationId": "Calendar_GetEventContact",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/calendar/permissions": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "operationId": "Calendar_GetPermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Retrieve a company",
        "operationId": "Company_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanyBindingModel"
            }
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Retrieve all companies for a database",
        "operationId": "Company_GetCompanies",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SharedCompanyEmployeeResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieve a contact",
        "operationId": "Contact_GetContactById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/contacts/filter": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Filter for contacts",
        "operationId": "Contact_FilterContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactResourceModel"
              }
            }
          }
        }
      }
    },
    "/contacts/search2": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Search for contacts.",
        "description": "If \"numberOfRecords\" is not specified when making a request a default of up to 100 records will be returned.",
        "operationId": "Contact_CallCenterSearchContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactSearchBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultiCompanyContactSearchResult"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/contacts/search": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Search for contacts",
        "description": "QuickFind Contact Search. Employee id required in bearer token",
        "operationId": "Contact_SearchContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactSearchBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactSearchResult"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/contacts/{contactId}/attachments": {
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Replace an attachment - Deprecated",
        "operationId": "Contact_ReplaceAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Upload an attachment",
        "operationId": "Contact_UploadAttachment",
        "consumes": [
          "application/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieve a contact - Deprecated",
        "operationId": "Contact_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/contacts/search": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Filter for contacts - Deprecated",
        "operationId": "Contact_SearchContact",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/companies/{companyid}/divisions": {
      "get": {
        "tags": [
          "Division"
        ],
        "summary": "Retrieve company divisions",
        "description": "Returns all divisions for the given company id.",
        "operationId": "Division_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/companies/{companyid}/email/templates": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Get active email templates",
        "description": "Return a list of valid email templates the User can select",
        "operationId": "Email_GetAllActiveEmailTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValueResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyid}/email/template/{templateId}/linkedevents": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Get Email Template Dependencies",
        "description": "This returns true or false for a given template whether it needs detals about a service orders, lead/inquiry and so on",
        "operationId": "Email_GetEmailTemplateLinkedEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmailLinkedEventsResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/employees/{employeeId}/reminders": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Get User Reminders",
        "description": "This endpoint is used to retrieve reminders for a given employee that have not been dismissed.\r\nReturn Example [{ \"activityId\": \"2e1afbc4-893b-4e70-4321-58523541a123\", <br />\r\n                   \"contactId\": \"da623e7d-1c12-4a44-6579-6e1c5454b46a\", <br />\r\n                   \"activityType\": \"Email Out\",                         <br />\r\n                   \"activityReferenceName\": \"Thank You Email\",          <br />\r\n                   \"dueDate\": \"2015-08-18T13:11:20.127\",                <br />\r\n                   \"contactFirstName\": \"First Name\",                    <br />\r\n                   \"contactLastName\": \"Last Name\",                      <br />\r\n                   \"contactType\": \"2\",                                  <br />\r\n                   \"pastDue\": true,                                      <br />\r\n                   \"createdDate\": \"2016-02-02T11:37:15.697\"             <br />\r\n                }]",
        "operationId": "Employees_GetUserReminders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reminder"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/employees/{employeeId}/featurePermissions": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get Feature Permissions",
        "description": "Get the coalesced user and company feature permissions. Only granted permissions will be returned.",
        "operationId": "Employees_GetFeaturePermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/employees/{employeeId}/dismissReminder": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Dismiss a Reminder",
        "description": "This endpoint is used to dismiss a reminder.\r\nThis enpoint takes a single parameter which is the id of the reminder to dismiss. <br />\r\nExample (\"activityId\": '2e1afbc4-893b-4e70-4321-58523541a123'}\r\n\r\nAn object containing a single boolean property will be returned. If set to true \r\nthe dismissal was processed successfully, if set to false the update failed. <br />\r\nReturn Example { \"dismissSuccessful\" : true } <br />",
        "operationId": "Employees_DismissReminder",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeesBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DismissReminderResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyid}/employees/filter": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Filter Employees",
        "description": "Provides a way to search employees if they have a phone, email, or a specific list permission type. \r\n            Can pass in a list of employee Id to always include at the top of the results. The included employees are only at the top of the list if they would not be in the result.\r\n            Otherwise, the list is sorted by employee name descending.",
        "operationId": "Employees_FilterEmployees",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeFilterBindingModel"
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleEmployeeResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/employees/production/assignedTo/{activeOnly}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get Production Assigned To Employee List",
        "description": "Returns a list of Employees which are valid to be assigned to Production tasks",
        "operationId": "Employees_GetProductionAssignedToEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValueResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/employees/production/salespeople/{activeOnly}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get Salesperson for Production List",
        "description": "Get a list of valid employees which are valid to be shown in the production salesperson lists",
        "operationId": "Employees_GetProductionSalespeopleEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValueResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/employees/projectmanager/{activeOnly}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get Project Manager Employees",
        "description": "Get a list of employees which are project managers",
        "operationId": "Employees_GetProductionProjectManagerEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValueResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/employees/{employeeId}/passwordreset/{expiresInHours}": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Generates a password reset URL.",
        "description": "Returns the URL containing the password reset token for the company and employee id passed.  Token expire time is an optional parameter that defaults to 12 hours.",
        "operationId": "Employees_GenerateAndUpdatePassResetToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "expiresInHours",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/estimates": {
      "post": {
        "tags": [
          "Estimates"
        ],
        "summary": "Create an estimate",
        "operationId": "Estimates_CreateEstimate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimatesResourceModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/estimates/{estimateId}": {
      "put": {
        "tags": [
          "Estimates"
        ],
        "summary": "Update an estimate",
        "operationId": "Estimates_UpdateEstimate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimatesResourceModel"
            }
          },
          {
            "name": "estimateId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/estimates/{estimateId}/attachments": {
      "post": {
        "tags": [
          "Estimates"
        ],
        "summary": "Upload an attachment",
        "operationId": "Estimates_UploadAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "estimateId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/estimates/statuses/active": {
      "get": {
        "tags": [
          "Estimates"
        ],
        "summary": "List active estimate statuses",
        "operationId": "Estimates_GetEstimateStatuses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/estimates/types/active": {
      "get": {
        "tags": [
          "Estimates"
        ],
        "operationId": "Estimates_GetEstimateTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/estimates/unitsofmeasure/active": {
      "get": {
        "tags": [
          "Estimates"
        ],
        "summary": "List active units of measure",
        "operationId": "Estimates_GetUnitsOfMeasure",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/estimates": {
      "post": {
        "tags": [
          "Estimates"
        ],
        "summary": "Create an estimate - Deprecated",
        "operationId": "Estimates_CreateEstimateDeprecated",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimatesResourceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/estimates/{estimateId}/attachment": {
      "post": {
        "tags": [
          "Estimates"
        ],
        "summary": "Upload an attachment - Deprecated",
        "operationId": "Estimates_UploadFile",
        "consumes": [
          "application/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "estimateId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/estimates/status": {
      "get": {
        "tags": [
          "Estimates"
        ],
        "summary": "List active estimate statuses - Deprecated",
        "operationId": "Estimates_GetEstimateStatusCodes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/estimates/units": {
      "get": {
        "tags": [
          "Estimates"
        ],
        "summary": "List active units of measure - Deprecated",
        "operationId": "Estimates_GetUnitOfMeasure",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/companies/{companyId}/fieldtextchoices/{fieldName}/{activeOnly}": {
      "get": {
        "tags": [
          "FieldTextChoices"
        ],
        "summary": "List Field Text Choices.",
        "description": "Returns a list of field text choices based on the field name that is passed.  For example, to return payment types pass in the string \"PaymentType\".",
        "operationId": "FieldTextChoices_GetFieldTextChoices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fieldName",
            "in": "path",
            "description": "This field is not case sensitive.  Name of the field to display text choices for. ie) paymenttype or paymentmethod.",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "path",
            "description": "Optional parameter.  Defaults to true if the parameter is omitted from the request.  Set to false to return all active and inactive records.  True will return active records only.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValueResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/financial/payments": {
      "post": {
        "tags": [
          "Financial"
        ],
        "summary": "Save Payment history",
        "description": "Saves the payment history record for a job/contract",
        "operationId": "Financial_SavePayment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancePaymentBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/financial/loantypes": {
      "get": {
        "tags": [
          "Financial"
        ],
        "summary": "List active loan types",
        "operationId": "Financial_GetLoanTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/inquiries/{inquiryId}": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Retrieve an inquiry by Id",
        "description": "Return a single inquiry by id",
        "operationId": "Inquiries_GetInquiryById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiryId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InquiryResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/inquiries/filter": {
      "post": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Filter for inquiries",
        "description": "filter parameters are optional\r\n<br />pageNumber and rowsPerPage default to 1st page and 1000 inquiries",
        "operationId": "Inquiries_FilterInquiries",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InquiriesBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InquiryResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyid}/inquiries/search": {
      "post": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Search for inquiries",
        "description": "QuickFind - Inquiry Search. Find inquiries with permissions by checking employee id in the bearer token.\r\n            <br /><br /> Employee Id in the bearer token is required",
        "operationId": "Inquiries_SearchInquiries",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiry",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InquirySearchBindingModel"
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InquirySearchResult"
              }
            }
          }
        }
      }
    },
    "/inquiries/search2": {
      "post": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Search for inquiries",
        "description": "Search inquiries across all companies in marketsharp database with employee permissions.\r\n            This uses the employeeId in the bearer token.\r\n            In order to access all the databases, the employee must be shared down from the parent down to the child.\r\n            <br /><br />companyId parameter looks to accept a comma delimited list of company id: eg 3,2,1\r\n            <br /><br /> Employee Id in the bearer token is required",
        "operationId": "Inquiries_SearchInquiries",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiry",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InquirySearchBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultiCompanyInquirySearchResult"
              }
            }
          }
        }
      }
    },
    "/inquiries/search": {
      "post": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Filter for inquiries - Deprecated",
        "operationId": "Inquiries_SearchInquiries",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InquiriesBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/companies/{companyId}/opportunities/{inquiryId}": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Get Opportunity By Id",
        "description": "This is an inquiry combined with a job. The jobsite address comes from the job if specified. JobId is optional",
        "operationId": "Inquiries_GetOpportunity",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiryId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpportunityResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/opportunities/{inquiryId}/notes/{noteType}": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Get opportunity notes.",
        "description": "Retrieves all notes for a lead based on the type of note passed.",
        "operationId": "Inquiries_GetOpportunityNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiryId",
            "in": "path",
            "description": "Inquiry Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteType",
            "in": "path",
            "description": "Type of note. Inquiry notes = 1 and Job notes = 2.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              1,
              2
            ]
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpportunityNoteResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/opportunities/{inquiryId}/note/{opportunityNoteId}": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Get opportunity note.",
        "description": "Retrieves a single note based on the information passed.",
        "operationId": "Inquiries_GetOpportunityNote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiryId",
            "in": "path",
            "description": "Inquiry Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "opportunityNoteId",
            "in": "path",
            "description": "Id of the note.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpportunityNoteResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/opportunities/notes": {
      "post": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Save opportunity notes.",
        "description": "Saves the opportunity note record.  If a note id is passed then the existing note will be updated.  If the note id is omitted then a new record will be inserted. The save will return the updated opportunity note record.<br /><br /> \r\nRequest:<br /> \r\n{ <br /> \r\n \"id\": 1, // Optional. Id of the note. Pass the Id of the note to update an existing note.  Omit the note id to insert a new note record.<br /> \r\n \"inquiryId\": \"BC0607CC-CB12-48BD-AE27-95848710BF24\", // Required. Id of the inquiry that the note is being saved to.<br /> \r\n \"note\": \"Sample note text.\", // Required. Note text. <br /> \r\n \"opportunityNoteType\": 1 // Optional. Required for insert and ignored when updating. Opportunity note type. Inquiry = 1. Job = 2.\r\n<br /> }",
        "operationId": "Inquiries_SaveOpportunityNotes",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "opportunityNoteToSave",
            "in": "body",
            "description": "Model containing opportunity note information to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpportunityNoteBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpportunityNoteResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/opportunities/{inquiryId}/notes/{noteId}": {
      "delete": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Delete opportunity note.",
        "description": "Deletes the opportunity note based on the note id and inquiry id passed.",
        "operationId": "Inquiries_DeleteOpportunityNote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "description": "Id of the note to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "Id of the inquiry that the note is associated with.",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/opportunities/address/{inquiryId}/{jobId}": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Get inquiry or job address.",
        "description": "Gets either the inquiry or job address.  \r\nIf a job id is passed in addition to the inquiry id then the job address will be grabbed.  \r\nIf only an inquiry id is passed then the inquiry address is grabbed.",
        "operationId": "Inquiries_GetInquiryJobAddress",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiryId",
            "in": "path",
            "description": "Inquiry Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "Job id. Optional.",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddressResourceModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Update inquiry or job address.",
        "description": "Updates either the inquiry or job address.  If a job id is passed in addition to the inquiry id then the job address will be updated.  If only an inquiry id is passed then the inquiry address is updated.",
        "operationId": "Inquiries_UpdateInquiryJobAddress",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Database company id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "Inquiry Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressToUpdate",
            "in": "body",
            "description": "Model containing address information to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressBindingModel"
            }
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "Job id. Optional.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/opportunities/name/{inquiryId}/{jobId}": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Get Opportunity Name by Id",
        "description": "Retrieves the Opportunity name by Inquiry or Job Id. If Job Id is specified, then Job Name is returned. If only Inquiry Id is specified, then Opportunity Name is returned",
        "operationId": "Inquiries_GetOpportunityOrJobName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiryId",
            "in": "path",
            "description": "Inquiry Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "Job Id. Optional.",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Update opportunity or job name.",
        "description": "Updates either the opportunity or job name. If a job id is passed in addition to the inquiry id the the job name will be updated. If only an inquiry id is passed then the opportunity name is updated.",
        "operationId": "Inquiries_UpdateOpportunityOrJobName",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Database company id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "Inquiry Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nameToBeUpdated",
            "in": "body",
            "description": "Model containing name to be updated to.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimpleOpportunityBindingModel"
            }
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "Job id. Optional.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/opportunities/qualification/{inquiryId}": {
      "put": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Qualify an Inquiry/Opportunity",
        "description": "Qualifies an Inquiry/Opportunity. Sets the Qualified_By and Qualified_Date_Utc fields on the Lead table.",
        "operationId": "Inquiries_UpdateInquiryQualification",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiryId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/inquiries/{inquiryId}": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Retrieve an inquiry - Deprecated",
        "operationId": "Inquiries_GetInquiry",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inquiryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/companies/{companyid}/jobs/search": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Quickfind - Job Search",
        "description": "This is the job search used by the quickfind. Employee Id required in the bearer token",
        "operationId": "Jobs_SearchJobs",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobSearchBindingModel"
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/jobs/search": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_SearchJobs",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobSearchBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/jobs/opportunities": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get jobs and leads.",
        "description": "Lists job and lead information for the company passed.",
        "operationId": "Jobs_GetJobsAndLeads",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Database company Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchModel",
            "in": "body",
            "description": "Model containing search parameters. numberOfRecords specifies the number of records to be returned. Defaulted to 50 if omitted.\r\n            fromDate specifies the datetime from which to begin your search.  Will return all records for that datetime and after.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimpleDateSearchBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobLeadResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/leadcaptures/custom": {
      "get": {
        "tags": [
          "LeadCaptures"
        ],
        "summary": "List all custom lead captures",
        "description": "Returns a list of all of a company's custom lead captures",
        "operationId": "LeadCaptures_GetCustomLeadCaptures",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleLeadCaptureResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/leadcaptures/iCapture": {
      "get": {
        "tags": [
          "LeadCaptures"
        ],
        "summary": "List iCapture lead captures",
        "operationId": "LeadCaptures_GetiCaptureLeadCaptures",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LeadCaptureResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/leadcaptures/{applicationInternalName}/contacts/filter": {
      "post": {
        "tags": [
          "LeadCaptures"
        ],
        "summary": "List active contacts submitted by lead capture app since latest updated date/time",
        "description": "ContactId: The id representing the contact <br />\r\nThirdPartyId: Id generated by the third party. Populated via POST request to a MarketSharp lead capture endpoint and using thirdPartyId or MSM_thirdPartyId <br />\r\nInquiryDateTime: Date/time of when the inquiry was created (this can be modified by the user <br />\r\nAppointmentDate: Date/time of the appointment <br />\r\nAppointmentSetDateTime: Date/time of when the appointment was set.  Time will always be 12:00am <br />\r\nAppointmentResult: The current result of the appointment that was scheduled <br />\r\nAppointmentPresenteDateTime: Populated when the current appointment result counts towards a presentation in MarketSharp.  Populates with appointment date/time <br />\r\nAppointmentSoldDateTime: Populated when the current appointment result counts towards a sold appointment in MarketSharp.  Populates with appointment date/time <br />\r\nContractApprovedDateTime: Populated when the current contract status is marked Approved.  Returns contract date.  Time will always be 12:00am <br />\r\nContractStatus: Is a required field in MarketSharp <br />\r\nLatestUpdatedTime: Takes the latest updated time between the inquiry, appointment, job or job product <br />",
        "operationId": "LeadCaptures_GetContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LeadCaptureContactBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationInternalName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LeadCaptureContactResourceModel"
              }
            }
          }
        }
      }
    },
    "/leadcaptures/{applicationInternalName}/contacts/filter": {
      "post": {
        "tags": [
          "LeadCaptures"
        ],
        "summary": "List global active contacts submitted by lead capture app since latest updated date/time",
        "description": "CompanyId: The company id the contact is tied to <br />\r\nContactId: The id representing the contact <br />\r\nThirdPartyId: Id generated by the third party. Populated via POST request to a MarketSharp lead capture endpoint and using thirdPartyId or MSM_thirdPartyId <br />\r\nInquiryDateTime: Date/time of when the inquiry was created (this can be modified by the user <br />\r\nAppointmentDate: Date/time of the appointment <br />\r\nAppointmentSetDateTime: Date/time of when the appointment was set.  Time will always be 12:00am <br />\r\nAppointmentResult: The current result of the appointment that was scheduled <br />\r\nAppointmentPresenteDateTime: Populated when the current appointment result counts towards a presentation in MarketSharp.  Populates with appointment date/time <br />\r\nAppointmentSoldDateTime: Populated when the current appointment result counts towards a sold appointment in MarketSharp.  Populates with appointment date/time <br />\r\nContractApprovedDateTime: Populated when the current contract status is marked Approved.  Returns contract date.  Time will always be 12:00am <br />\r\nContractStatus: Is a required field in MarketSharp <br />\r\nLatestUpdatedTime: Takes the latest updated time between the inquiry, appointment, job or job product <br />",
        "operationId": "LeadCaptures_GetGlobalLeadCaptureContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalLeadCaptureContactBindingModel"
            }
          },
          {
            "name": "applicationInternalName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalLeadCaptureContactResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/listpermissions/{permissionName}/employees": {
      "get": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "List all employees that have a specified list permission",
        "description": "Return all active and inactive employees for the specified permission name",
        "operationId": "ListPermissions_GetSimpleEmployeesWithSpecificedListPermission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The id of company.",
            "required": true,
            "type": "string"
          },
          {
            "name": "permissionName",
            "in": "path",
            "description": "Allowed values include all, activityassignedto, appointmentsetby, canvasser, confirmedby, \r\nproductionassignedto, projectmanager, promoter, salesperson, servicerep, telemarketer or jobworker.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleEmployeeResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/listpermissions/{permissionName}/employees/active": {
      "get": {
        "tags": [
          "ListPermissions"
        ],
        "summary": "List active employees that have the specified permission",
        "description": "Return only active employees for the specified permission name",
        "operationId": "ListPermissions_GetActiveSimpleEmployeesWithSpecificedListPermission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The id of company.",
            "required": true,
            "type": "string"
          },
          {
            "name": "permissionName",
            "in": "path",
            "description": "Allowed values include all, activityassignedto, appointmentsetby, canvasser, confirmedby, \r\nproductionassignedto, projectmanager, promoter, salesperson, servicerep, telemarketer or jobworker.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleEmployeeResourceModel"
              }
            }
          }
        }
      }
    },
    "/logger/log/loginclientsideexception": {
      "post": {
        "tags": [
          "Logger"
        ],
        "summary": "Log Client Side Exceptions",
        "description": "Used when user is not logged in\r\n            <br /> Used to log exceptions that occur in clientside code. You can pass in only fields that have a value.",
        "operationId": "Logger_LoggedOutClientSideException",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSideExceptionBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/logger/log/clientsideexception": {
      "post": {
        "tags": [
          "Logger"
        ],
        "summary": "Log Client Side Exceptions",
        "description": "User must be logged in to use this endpoint\r\n            <br /> Used to log exceptions that occur in clientside code. You can pass in only fields that have a value.",
        "operationId": "Logger_LoggedInClientSideException",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSideExceptionBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/login/authcookie": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Get MS Login Cookie",
        "description": "Internal Endpoint. Can be used to get a login cookie for marketsharp",
        "operationId": "Login_CreateAuthenticationCookie",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "description": "rememberMe default value is false, restapiurl what the url is for generating the api cookie. default value of production url for now",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoginCookieResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/login/isvalidcookie": {
      "get": {
        "tags": [
          "Login"
        ],
        "summary": "Validate MS Login Cookie",
        "description": "Internal Endpoint. Validates the MS Login Cookie",
        "operationId": "Login_ValidateAuthenticationCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/IsSandbox": {
      "get": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Check for Sandbox or Production Paysimple Credentials",
        "description": "Check if the api credentials in the admin are used for production payment processing or for the paysimple sandbox environment.\r\nSandbox api credentials are needed from PaySimple to be able to use the sandbox. Marketsharp can enable/disable the sandbox flag on the entered credentials.\r\n<br /><br /> Returns true if credentials are for the sandbox\r\n<br /> Return false if the credentials are for the production environment\r\n<br /> Returns null if there are no credentials specified",
        "operationId": "PaySimple_IsSandbox",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/checkouttoken": {
      "get": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Get PaySimple Checkout Token.",
        "description": "The checkout token uniquely identifies your merchant account to PaySimple. While the token expires in 5 minutes, it is recommended you generate a new token on each checkout.",
        "operationId": "PaySimple_GetCheckoutToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/contact/{contactId}/customers": {
      "get": {
        "tags": [
          "PaySimple"
        ],
        "summary": "List Paysimple Customers for a Contact",
        "description": "Lists all paysimple customers that are associated with a marketsharp contact",
        "operationId": "PaySimple_ListCustomers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/customers/{customerId}/accounts": {
      "get": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Get PaySimple Customer Accounts.",
        "description": "Retrieve all of the Payment Account Objects associated with a Customer Record.",
        "operationId": "PaySimple_GetCustomerAccounts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Id of the Customer whose accounts you want to list.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaySimpleAccountsResponse"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/customers/{customerId}/token": {
      "get": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Get PaySimple Customer Token.",
        "description": "Retrieves a customer token that uniquely identifies a customer to PaySimpleJS.",
        "operationId": "PaySimple_GetCustomerToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "PaySimple Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaySimpleCustomerTokenResponse"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/customers/{customerId}/contacts/{contactId}": {
      "post": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Link PaySimple Customer to Contact.",
        "description": "Links the PaySimple customer to the MarketSharp contact.  If the link already exists no record will be inserted.",
        "operationId": "PaySimple_LinkMarketSharpContactToPaySimpleCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "PaySimple Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "Contact OID",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/payment": {
      "post": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Make a Payment",
        "description": "Makes a payment to the specified account for the specified amount. Does not save the results in MarketsharpM. \r\n            See /companies/{companyId}/financial/payments to save the results in marketsharp.",
        "operationId": "PaySimple_MakePayment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "paymentRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PSPaymentRequest"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaySimplePaymentResponse"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/merchant/paymentoptions": {
      "get": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Get Merchant Payment Options.",
        "description": "Get enabled credit card and payment types for merchant.",
        "operationId": "PaySimple_GetMerchantPaymentOptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaySimpleMerchantOptionsResponse"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/account/ach": {
      "put": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Update ACH Account Info.",
        "description": "Updates the IsCheckingAccount on the ACH Account object for the account specified in the request body.",
        "operationId": "PaySimple_UpdateACHAccountInfo",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "updateAchRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ACHRequest"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaySimpleACHResponse"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/account/creditcard": {
      "put": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Update Credit Card",
        "description": " Makes a request to https://documentation.paysimple.com/reference#update-credit-card <br /> \r\n to update a credit card. Per Paysimple documentation: Only the ExpirationDate and BillingZipCode fields can be modified; changes to other fields will be ignored. <br /><br /> \r\n Request:<br /> \r\n { <br /> \r\n  \"creditCardNumber\": \"9999999999999999\", //required but unused <br /> \r\n  \"expirationDate\": \"03/2022\", //required in this format <br /> \r\n  \"issuer\": \"Discover\", //required, must be ANY valid issuer, not updated <br /> \r\n  \"billingZipCode\": \"54601\", <br /> // if this is not specified, the billing zip code will be set to null in the API regardless of current value\r\n  \"id\": 660832 //required account id <br /> \r\n   // customerId: not shown, can be passed in, value is submitted to PaySimple API and entirely ignored <br /> \r\n } <br /><br /> \r\n    Response: <br /> \r\nnotice correct Issuer, customer Id, and Credit card returned compared to the Request <br /> \r\n { <br /> \r\n    \"response\": { <br /> \r\n        \"creditCardNumber\": \"\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*1111\", <br /> \r\n        \"expirationDate\": \"03/2022\", <br /> \r\n        \"issuer\": \"Visa\", <br /> \r\n        \"billingZipCode\": \"54601\", <br /> \r\n        \"customerId\": 476184, <br /> \r\n        \"isDefault\": true, <br /> \r\n        \"id\": 660832, <br /> \r\n        \"lastModified\": \"2018-08-23T13:57:24.6298317Z\", <br /> \r\n        \"createdOn\": \"2018-07-25T20:24:33Z\" <br /> \r\n    }, <br /> \r\n    \"meta\": { <br /> \r\n        \"errors\": null, <br /> \r\n        \"httpStatus\": \"OK\", <br /> \r\n        \"httpStatusCode\": 200, <br /> \r\n        \"pagingDetails\": null <br /> \r\n    } <br /> \r\n } <br />",
        "operationId": "PaySimple_UpdateCreditCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ccRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditCardRequest"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaySimpleMerchantOptionsResponse"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/contactJobSearch": {
      "post": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Contact Job Search",
        "description": "List any contacts associated to a paysimple customer ID if any. Job information is included as well.\r\n            <br />If paysimple customer id is filled in, then it prefers searching only by that field. If no results are returned by customer id, the rest of the fields are searched.\r\n            Does partial matching on name and email. For the appointment date, the time part is ignored.\r\n            <br />Pass in null or empty string to not include that parameter in the search.",
        "operationId": "PaySimple_SearchContactsJobs",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaysimpleContactJobSearchBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaysimpleSearchResultResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/reconciliation/payments": {
      "post": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Get PaySimple payment reconciliation records.",
        "description": "Optionally pass in the from date to limit the results of the reconciliation records returned.",
        "operationId": "PaySimple_GetPaysimpleReconciliationPayments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaySimpleGetReconciliationBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentReconciliationData"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/reconciliation/matchpayment": {
      "post": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Reconcile PaySimple payment.",
        "description": "This endpoint will match the PaySimple payment with a Marketsharp contact and job.",
        "operationId": "PaySimple_ReconcilePayment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "reconcilePaymentRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReconcilePaymentRequest"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/paysimple/reconciliation/unlinkpayment": {
      "post": {
        "tags": [
          "PaySimple"
        ],
        "summary": "Unlink a PaySimple payment.",
        "description": "This endpoint will unlink a PaySimple payment that was previously linked to a marketsharp contact and job.",
        "operationId": "PaySimple_UnlinkPayment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unlinkPaymentRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnlinkPaymentRequest"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/pricebook": {
      "get": {
        "tags": [
          "PriceBook"
        ],
        "summary": "List all items",
        "operationId": "PriceBook_GetProductBook",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/pricebook": {
      "get": {
        "tags": [
          "PriceBook"
        ],
        "summary": "List all items - Deprecated",
        "operationId": "PriceBook_GetProducts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "/companies/{companyId}/primaryleadsources": {
      "get": {
        "tags": [
          "PrimaryLeadSources"
        ],
        "summary": "List all primary lead sources",
        "operationId": "PrimaryLeadSources_GetPrimaryLeadSources",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimplePrimaryLeadSourceResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/primaryleadsources/active": {
      "get": {
        "tags": [
          "PrimaryLeadSources"
        ],
        "summary": "List active primary lead sources",
        "operationId": "PrimaryLeadSources_GetActivePrimaryLeadSources",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimplePrimaryLeadSourceResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/primaryleadsources/{primaryLeadSourceId}/secondaryleadsources": {
      "get": {
        "tags": [
          "PrimaryLeadSources"
        ],
        "summary": "List all secondary lead sources for a given primary lead source",
        "operationId": "PrimaryLeadSources_GetSecondaryLeadSources",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryLeadSourceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleSecondaryLeadSourceResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/primaryleadsources/{primaryLeadSourceId}/secondaryleadsources/active": {
      "get": {
        "tags": [
          "PrimaryLeadSources"
        ],
        "summary": "List active secondary lead sources for a given primary lead source",
        "operationId": "PrimaryLeadSources_GetActiveSecondaryLeadSources",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryLeadSourceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleSecondaryLeadSourceResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyid}/printfile/workorder/{processTypeStepOid}/exists": {
      "get": {
        "tags": [
          "PrintFile"
        ],
        "summary": "Checks if a work order exists",
        "description": "Returns a boolean whether the work order exists",
        "operationId": "PrintFile_GetWorkOrderById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processTypeStepOid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrintFileExistsBindingModel"
            }
          }
        }
      }
    },
    "/companies/{companyid}/printfile/workorder/templates": {
      "get": {
        "tags": [
          "PrintFile"
        ],
        "summary": "Gets the available work order templates",
        "description": "Returns a key value pair of work order templates",
        "operationId": "PrintFile_GetWorkOrderTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KeyValueResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyid}/printfile/workorder": {
      "post": {
        "tags": [
          "PrintFile"
        ],
        "summary": "Creates a string url to open the print file shim to create a work order",
        "description": "This creates a string that is used as a url to create a new work order through the print file shim",
        "operationId": "PrintFile_CreateGetWorkOrders",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workOrderBinding",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrintFileBindingModel"
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyid}/printfile/workorder/{processTypeStepOid}": {
      "get": {
        "tags": [
          "PrintFile"
        ],
        "summary": "Opens the existing work order for editing",
        "description": "This creates a string that is used as a url to edit a new work order through the print file shim",
        "operationId": "PrintFile_GetWorkOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processTypeStepOid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyid}/printfile/workorder/{processTypeStepOid}/delete": {
      "delete": {
        "tags": [
          "PrintFile"
        ],
        "summary": "This will delete the work order by the processTypeStepOid",
        "description": "This will return a boolean whether the print file as been deleted",
        "operationId": "PrintFile_DeleteWorkOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "processTypeStepOid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/types/{activeOnly}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve Product Type",
        "description": "Retrieves a list of product types",
        "operationId": "Products_GetProductTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValueResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/views/flat": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve Flat/Pivot View of the production tab",
        "description": "Retrieves the product view with one Job Product per line. Only the process type steps defined in the admin section will be returned as the columns. <br />\r\nif the oid is blank, then that column is not valid for that production step. <br />\r\nif the oid has a value, then date end estimated and date end actual values are real.\r\n<br />\r\nNote: As of 2017-06-12 there is no way to set the time for a Production Step. As far as I can tell, the time part can and should be ignored.",
        "operationId": "Products_GetFlatProductionView",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductionSearchBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductionResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/productionFlatTotalAmounts": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve Total Amount in dollars shown on the production flat view",
        "description": "Retrieves the product total amounts for the same types shown on the production flat view. <br /><br />\r\nNote: these numbers will not match the numbers on the production report or even in the regular production view as only jobs with a production type step defined in the admin section are considered.",
        "operationId": "Products_GetFlatProductionTotalAmounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductionSearchBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductionTotalResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyid}/products/jobProduct/{jobProductId}/process/{processId}/steps": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Production Steps by Production Process Id",
        "description": "Retrieves a list of Production Steps",
        "operationId": "Products_GetProductionStepsByProcessId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "jobProductId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductionProcessStepResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyid}/products/hasActivities": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Check Link between Production Step and Activity",
        "description": "Checks if the any of the provided production steps have activities associated with them. Returns True if any of them have activities, else false.",
        "operationId": "Products_ProductionStepsHasActivity",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productionStepIdList",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/stepInfo/{stepId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve Information about a Production Step",
        "description": "Retrieve Information about a Production Step by id <br />\r\n If the step id is invalid, an empty model is returned.",
        "operationId": "Products_ProductionStepInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepId",
            "in": "path",
            "description": "The step id to get data for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductionStepResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/stepInfoDates/{stepId}": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update Production Step Dates",
        "description": "Update the actual end and start dates for a production step. Other fields are ignored. Returns the saved steps and a list of steps that need to have their activity process triggered",
        "operationId": "Products_UpdateProductionStepDates",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductionStepBindingModel"
            }
          },
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/jobProduct/{jobProductOid}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Job Product Information",
        "description": "Retrieves more detailed information for a specific Job Product",
        "operationId": "Products_JobProductProductionGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobProductOid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobProductViewResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/jobProduct": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update Job Product",
        "description": "returns the saved steps and a list of steps that need to have their activity process triggered",
        "operationId": "Products_UpdateJobProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductionJobProductBindingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductionJobProductSavedStepsResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/processTypes/{activeOnly}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Process Type List",
        "description": "Get a list of process types",
        "operationId": "Products_GetProductionProcesses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Optional parameter to filter list to applicable processes only",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValueResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/workcrew/{activeOnly}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Work Crew List",
        "description": "Get a list of work crews. This is a user edit-able dropdown list.",
        "operationId": "Products_WorkCrewGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListDropDownItem"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/workcrew": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update Work Crew List",
        "description": "Pass in all active and inactive work crews to ensure the correct order is saved. The passed in workCrews is saved in the given order.",
        "operationId": "Products_WorkCrewUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workCrews",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListDropDownItem"
              }
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/userPrefs/productionProcessList": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Production User Pref List",
        "operationId": "Products_GetProductionProcessListUserPrefs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserPrefResourceModel"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update User Pref",
        "operationId": "Products_UpdateUserPref",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPrefBindingModel"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserPrefResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/interests/{activeOnly}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all product interests.",
        "description": "Returns all product type and product detail records for the company id passed.",
        "operationId": "Products_GetAllProductInterests",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "path",
            "description": "If the value is true then only records that are active are returned.  If this value is false then all records are returned.",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductTypeDetailResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/interests/leads/{leadId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product interests by lead id.",
        "description": "Returns all product type and product detail records for the company and lead id passed.",
        "operationId": "Products_GetProductInterestsByLeadId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "leadId",
            "in": "path",
            "description": "Lead id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleProductTypeDetailResourceModel"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Associate product interest to lead.",
        "description": "This endpoint will associate a product interest to the lead that is passed in.  If the product interest is already associated to the lead the product interest record will be updated.",
        "operationId": "Products_AssociateProductInterestToLead",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Database company id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "leadId",
            "in": "path",
            "description": "Lead id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "modelsToAdd",
            "in": "body",
            "description": "Product interest model to be associated to the lead.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductTypeDetailBindingModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/products/interests/leads/{leadId}/unlink": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Unlink product interest from lead.",
        "description": "This endpoint will disassociate product interest record(s) from the lead that is passed in.  The product interest record is not deleted from the database, but merely no longer associated with the lead.",
        "operationId": "Products_DisassociateProductInterestsFromLead",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Database company id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "leadId",
            "in": "path",
            "description": "Lead id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "modelsToRemove",
            "in": "body",
            "description": "Product interest model(s).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleProductTypeDetailBindingModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyId}/guildquality/contacts": {
      "get": {
        "tags": [
          "Survey"
        ],
        "summary": "GuildQuality Get Contacts To Survey",
        "description": "This method may called as often as needed and will not cause any data modifications.\r\n<br />Returns a list of contacts that are valid to send surveys to. \r\n<br />If a contact has multiple jobs that are valid to survey, there will be multiple records with the same contact information, but different UniqueJobId\r\n<br /><br />SurveyQueueDate: This date will be the date after it is valid to send the survey. It should not be possible to have dates in the future. Will never be null, but it could be DateTime.MaxValue as an exception case",
        "operationId": "Survey_GetGuildQualityJobsForExport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuildQualityJob"
            }
          }
        }
      }
    },
    "/companies/{companyId}/guildquality/jobs/surveyed": {
      "put": {
        "tags": [
          "Survey"
        ],
        "summary": "GuildQuality Mark Job as Surveyed/Exported",
        "description": "This method may called as often as needed. Contacts will only be marked as surveyed the first time. Subsequent calls have no effect.\r\n<br /><br />This endpoint is used to exclude contacts to be returned from the \"GuildQuality Get Contacts To Survey\" endpoint",
        "operationId": "Survey_MarkQuildQualityJobSurveyed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GuildQualityJobSurveyedBindingModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/companies/{companyid}/texting/templates/{contactId}": {
      "get": {
        "tags": [
          "Texting"
        ],
        "summary": "Get active texting templates",
        "description": "Return a list of valid texting templates the User can select",
        "operationId": "Texting_GetAllTextTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValueResourceModel"
              }
            }
          }
        }
      }
    },
    "/companies/{companyid}/texting/template/{templateId}/linkedEvents": {
      "get": {
        "tags": [
          "Texting"
        ],
        "summary": "Get Texting Template Dependencies",
        "description": "This returns true or false for a given template whether it needs detals about a service orders, lead/inquiry and so on",
        "operationId": "Texting_GetTextTemplateLinkedEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TextingLinkedEventsResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/views/type/{listViewType}": {
      "get": {
        "tags": [
          "Views"
        ],
        "summary": "Get available Views",
        "description": "Get a list of views available to select from. No fields are returned. The list of views returned is only the list of views the employee has permission to see. <br />\r\nThe list is returned in alphabetical order (with the default view being first)",
        "operationId": "Views_ViewsByType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/views/type/{listViewType}/fields": {
      "get": {
        "tags": [
          "Views"
        ],
        "summary": "Get available fields to select by list view type",
        "description": "Returns a list of all available fields available to select from. For example, can be used to get a list of all fields available to be added to the Production View.",
        "operationId": "Views_FieldListAvailableByViewType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyId}/views/{viewId}": {
      "get": {
        "tags": [
          "Views"
        ],
        "summary": "Get a View By ID",
        "description": "Get a view with the ordered selected field list, The selected field order is zero based and sorted by the field order. <br />\r\nIncludes all available fields to select sorted by table name.",
        "operationId": "Views_FieldListByViewId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyid}/views": {
      "put": {
        "tags": [
          "Views"
        ],
        "summary": "Update an existing view",
        "description": "Update an existing view with the name and the new field list. <br /><br />\r\nNote: the existing field list will be replaced with the passed in field list. <br /><br /> \r\n Required Fields: <br />\r\n ViewName, listviewType, at least one field must be included in the request.\r\n <br />\r\n No fields are allowed to have the duplicate order numbers. <br />\r\n Order number is expected to start at zero <br />\r\n A field must have a FieldId or a FieldDefId (custom field), but not both.",
        "operationId": "Views_ViewUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ViewBindingModel"
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewResourceModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Views"
        ],
        "summary": "Create a new view",
        "description": "Create a new view along with the selected fields. <br /><br /> \r\n Required Fields: <br />\r\n ViewId, ViewName, listviewType, at least one field must be included in the request.\r\n <br />\r\n No fields are allowed to have the duplicate order numbers. <br />\r\n Order number is expected to start at zero <br />\r\n A field must have a FieldId or a FieldDefId (custom field), but not both.",
        "operationId": "Views_ViewCreate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ViewBindingModel"
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewResourceModel"
            }
          }
        }
      }
    },
    "/companies/{companyid}/views/{viewId}": {
      "delete": {
        "tags": [
          "Views"
        ],
        "summary": "Delete a view entirely",
        "description": "Delete a view and associated field list",
        "operationId": "Views_ViewDelete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LeadCaptureResourceModel": {
      "type": "object",
      "properties": {
        "primaryLeadSource": {
          "$ref": "#/definitions/SimplePrimaryLeadSourceResourceModel"
        },
        "secondaryLeadSource": {
          "$ref": "#/definitions/SimpleSecondaryLeadSourceResourceModel"
        },
        "activityProcess": {
          "$ref": "#/definitions/SimpleActivityProcessResourceModel"
        },
        "employeeIdsToNotify": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "onSuccessUrl": {
          "type": "string"
        },
        "onErrorUrl": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "formId": {
          "type": "string"
        }
      }
    },
    "SimplePrimaryLeadSourceResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "SimpleSecondaryLeadSourceResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "primaryLeadSourceId": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "SimpleActivityProcessResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        },
        "type": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProposedActivitiesRequestBindingModel": {
      "type": "object",
      "properties": {
        "requestSourceType": {
          "format": "int32",
          "description": "Type of request. Example (ProductionStep, ServiceOrder, etc.).",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "requestSourceId": {
          "description": "Id for the request type entity.",
          "type": "string"
        }
      }
    },
    "ProposedActivityResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productionStepId": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "assignedEmployeeId": {
          "type": "string"
        },
        "scheduledEmployeeId": {
          "type": "string"
        },
        "referenceId": {
          "format": "int32",
          "type": "integer"
        },
        "activityProcessStepId": {
          "type": "string"
        },
        "serviceOrderId": {
          "type": "string"
        },
        "leadId": {
          "type": "string"
        },
        "appointmentId": {
          "type": "string"
        },
        "reminderMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "resultId": {
          "format": "int32",
          "type": "integer"
        },
        "jobId": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "completionDate": {
          "format": "date-time",
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "emailTemplate": {
          "$ref": "#/definitions/ProposedActivityCommunicationTemplateResourceModel"
        },
        "textTemplate": {
          "$ref": "#/definitions/ProposedActivityCommunicationTemplateResourceModel"
        }
      }
    },
    "ProposedActivityCommunicationTemplateResourceModel": {
      "type": "object",
      "properties": {
        "templateId": {
          "format": "int32",
          "type": "integer"
        },
        "sendDate": {
          "format": "date-time",
          "type": "string"
        },
        "fromEmployeeId": {
          "type": "string"
        }
      }
    },
    "ReferenceAndResultBindingModel": {
      "type": "object",
      "properties": {
        "referenceId": {
          "format": "int32",
          "type": "integer"
        },
        "resultId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ActivityReferenceResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "inquiryRequired": {
          "type": "boolean"
        },
        "appointmentRequired": {
          "type": "boolean"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "isActive": {
          "type": "boolean"
        },
        "callOutScriptTemplateId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ActivityResultResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "emailSuccess": {
          "type": "boolean"
        },
        "emailFailure": {
          "type": "boolean"
        },
        "countAsApptConfirmed": {
          "type": "boolean"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "isActive": {
          "type": "boolean"
        },
        "countAsApptCreated": {
          "type": "boolean"
        },
        "countAsApptContacted": {
          "type": "boolean"
        },
        "activityProcessId": {
          "type": "string"
        },
        "confirmed": {
          "type": "boolean"
        },
        "textSuccess": {
          "type": "boolean"
        },
        "textFailure": {
          "type": "boolean"
        },
        "callInType": {
          "type": "boolean"
        },
        "callOutType": {
          "type": "boolean"
        },
        "callBackType": {
          "type": "boolean"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        }
      }
    },
    "ActivityTypeResourceModel": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AdditionalContactSearchBindingModel": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address_line_one": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email_address": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "contactType": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "type": "string"
        },
        "numberOfRecords": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AnalyticsBindingModel": {
      "type": "object",
      "properties": {
        "netSales": {
          "type": "boolean"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "divisions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeWhiteSpaceDivs": {
          "type": "boolean"
        },
        "widgetGuid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "prefValue": {
          "type": "string"
        },
        "useSalesPaceMonth": {
          "type": "boolean"
        }
      }
    },
    "AppointmentResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "inquiryId": {
          "type": "string"
        },
        "appointmentDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "hideInScheduler": {
          "type": "boolean"
        },
        "salesperson": {
          "type": "string"
        },
        "salesperson2": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "setBy": {
          "type": "string"
        },
        "dateIssued": {
          "format": "date-time",
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "resultReason": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "directions": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AppointmentsBindingModel": {
      "type": "object",
      "properties": {
        "start_modified_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "start_appointment_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "end_appointment_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "appointment_salesperson_id": {
          "type": "string"
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "rowsPerPage": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ApptResultResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "sold": {
          "type": "boolean"
        },
        "presentation": {
          "type": "boolean"
        }
      }
    },
    "RejectReasonResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ApptResultBindingModel": {
      "type": "object",
      "properties": {
        "appt_id": {
          "type": "string"
        },
        "result_id": {
          "type": "string"
        },
        "result_reason": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "employee_id": {
          "type": "string"
        }
      }
    },
    "CategoryResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "CategoryBindingModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "EventDatesBindingModel": {
      "type": "object",
      "properties": {
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "EventResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "isAllDay": {
          "type": "boolean"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "categoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrenceId": {
          "format": "int32",
          "type": "integer"
        },
        "recurrenceRule": {
          "type": "string"
        },
        "recurrenceException": {
          "type": "string"
        },
        "lastUpdateDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdateBy": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "activityProcessOidToUpdate": {
          "type": "string"
        },
        "activityContactOid": {
          "type": "string"
        },
        "productionStepOid": {
          "type": "string"
        }
      }
    },
    "EventBindingModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "allDayEvent": {
          "type": "boolean"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "categoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "lastUpdateDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdateBy": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "sendEmail": {
          "type": "boolean"
        },
        "eventDetails": {
          "type": "string"
        },
        "additionalDetails": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eventType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "EventViewModel": {
      "type": "object",
      "properties": {
        "sendEmailResourceFailureList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "activityProcessOidToUpdate": {
          "type": "string"
        },
        "productionStepOid": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "isAllDay": {
          "type": "boolean"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "categoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrenceId": {
          "format": "int32",
          "type": "integer"
        },
        "recurrenceRule": {
          "type": "string"
        },
        "recurrenceException": {
          "type": "string"
        },
        "lastUpdateDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdateBy": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "activityContactOid": {
          "type": "string"
        }
      }
    },
    "GeneralEventExceptionBindingModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "allDayEvent": {
          "type": "boolean"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "categoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "lastUpdateDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdateBy": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "sendEmail": {
          "type": "boolean"
        },
        "eventDetails": {
          "type": "string"
        },
        "additionalDetails": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eventType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "readOnly": true
        },
        "additionalResourceIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "recurrenceId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "rRule": {
          "type": "string",
          "readOnly": true
        },
        "ruleException": {
          "type": "string",
          "readOnly": true
        },
        "recurrenceStartDateTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RescheduleEventBindingModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "view": {
          "type": "string"
        },
        "resourceId": {
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AppointmentBindingModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "apptSales1EmpOid": {
          "type": "string"
        },
        "apptSales2EmpOid": {
          "type": "string"
        }
      }
    },
    "ResourcesResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "workCrew": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCrew": {
          "format": "int32",
          "type": "integer"
        },
        "salesperson": {
          "format": "int32",
          "type": "integer"
        },
        "production": {
          "format": "int32",
          "type": "integer"
        },
        "employee": {
          "format": "int32",
          "type": "integer"
        },
        "equipment": {
          "format": "int32",
          "type": "integer"
        },
        "otherResource": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ResourceBindingModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "UserPrefResourceModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "UserPrefBindingModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "CompanyBindingModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "phonenumber": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "contact_name": {
          "type": "string"
        },
        "contact_title": {
          "type": "string"
        },
        "saturday_is_workday": {
          "type": "boolean"
        },
        "sunday_is_workday": {
          "type": "boolean"
        },
        "workday_start_time": {
          "format": "date-time",
          "type": "string"
        },
        "workday_end_time": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SharedCompanyEmployeeResourceModel": {
      "type": "object",
      "properties": {
        "oid": {
          "type": "string"
        },
        "companyNumber": {
          "format": "int32",
          "type": "integer"
        },
        "parentCompanyOid": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "isParentCompany": {
          "type": "boolean"
        },
        "sharedEmpOid": {
          "type": "string"
        }
      }
    },
    "ContactResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "contactBusinessName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email1": {
          "type": "string"
        },
        "email2": {
          "type": "string"
        },
        "email3": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumberResourceModel"
          }
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "contactType": {
          "type": "string"
        }
      }
    },
    "PhoneNumberResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "isPrimary": {
          "type": "boolean"
        },
        "freeFormNumber": {
          "type": "string"
        },
        "phoneNumberDigits": {
          "type": "string"
        }
      }
    },
    "ContactBindingModel": {
      "type": "object",
      "properties": {
        "start_modified_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "start_appointment_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "end_appointment_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "appointment_salesperson_id": {
          "type": "string"
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "rowsPerPage": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ContactSearchBindingModel": {
      "type": "object",
      "properties": {
        "numberOfRecords": {
          "format": "int32",
          "type": "integer"
        },
        "business_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address_line_one": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email_address": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "contactType": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "type": "string"
        }
      }
    },
    "MultiCompanyContactSearchResult": {
      "type": "object",
      "properties": {
        "msCompany": {
          "type": "string"
        },
        "coyOid": {
          "type": "string"
        },
        "contactType": {
          "type": "string"
        },
        "contactTypeDisplay": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "primaryEmail": {
          "type": "string"
        },
        "secondaryEmail": {
          "type": "string"
        },
        "teritiaryEmail": {
          "type": "string"
        },
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "canAccessContactDetails": {
          "type": "string"
        }
      }
    },
    "ContactSearchResult": {
      "type": "object",
      "properties": {
        "contactType": {
          "type": "string"
        },
        "contactTypeDisplay": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "primaryEmail": {
          "type": "string"
        },
        "secondaryEmail": {
          "type": "string"
        },
        "teritiaryEmail": {
          "type": "string"
        },
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "canAccessContactDetails": {
          "type": "string"
        }
      }
    },
    "KeyValueResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "EmailLinkedEventsResourceModel": {
      "type": "object",
      "properties": {
        "inquiryRequired": {
          "type": "boolean"
        },
        "appointmentRequired": {
          "type": "boolean"
        },
        "jobRequired": {
          "type": "boolean"
        },
        "productionRequired": {
          "type": "boolean"
        },
        "serviceRequired": {
          "type": "boolean"
        }
      }
    },
    "Reminder": {
      "type": "object",
      "properties": {
        "activityId": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "activityType": {
          "type": "string"
        },
        "activityReferenceName": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "contactFirstName": {
          "type": "string"
        },
        "contactLastName": {
          "type": "string"
        },
        "contactType": {
          "type": "string"
        },
        "pastDue": {
          "type": "boolean"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "viewed": {
          "type": "boolean"
        }
      }
    },
    "EmployeesBindingModel": {
      "type": "object",
      "properties": {
        "activityId": {
          "type": "string"
        }
      }
    },
    "DismissReminderResourceModel": {
      "type": "object",
      "properties": {
        "dismissSuccessful": {
          "type": "boolean"
        }
      }
    },
    "EmployeeFilterBindingModel": {
      "type": "object",
      "properties": {
        "hasPhone": {
          "type": "boolean"
        },
        "hasEmail": {
          "type": "boolean"
        },
        "includeInactive": {
          "type": "boolean"
        },
        "employeeListTypes": {
          "description": "A list of employeeList types. The permission for an employee to appear in various drop down lists. ex: All, Salesperson, AppointmentSetBy...",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeEmployees": {
          "description": "A list of employee id to include in the search results. A good usecase for this can be to include the assigned employee in the search results.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SimpleEmployeeResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "EstimatesResourceModel": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "estimateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "estimateStatus": {
          "type": "string"
        },
        "estimateType": {
          "type": "string"
        },
        "proposalDeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "discountAmount": {
          "format": "double",
          "type": "number"
        },
        "discountPercent": {
          "format": "double",
          "type": "number"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "notes": {
          "type": "string"
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstimateLineItemResourceModel"
          }
        }
      }
    },
    "EstimateLineItemResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "estimateId": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "unitOfMeasure": {
          "format": "int32",
          "type": "integer"
        },
        "retailPrice": {
          "format": "double",
          "type": "number"
        },
        "lineItem_DiscountAmount": {
          "format": "double",
          "type": "number"
        },
        "lineItem_DiscountPercent": {
          "format": "double",
          "type": "number"
        },
        "cost": {
          "format": "double",
          "type": "number"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "FinancePaymentBindingModel": {
      "required": [
        "contractId",
        "paymentType",
        "amount",
        "cashFinance"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the payment history to update",
          "type": "string"
        },
        "contractId": {
          "type": "string"
        },
        "paymentType": {
          "description": "Downpayment, payment, .... user defined data",
          "type": "string"
        },
        "paymentMethod": {
          "description": "The payment method of cash, credit card, check, ach. User defined data, but PaySimple gurantees 'Credit Card' and 'ACH' will be available",
          "type": "string"
        },
        "description": {
          "description": "An optional bit of user entered text that can be said provides additional information about a payment.",
          "type": "string"
        },
        "paymentDate": {
          "format": "date-time",
          "description": "Date of Payment",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "Stored as negative values in the database",
          "type": "number"
        },
        "cashFinance": {
          "description": "Used as part of Applies to Contract for finance or cash.\r\nNONE: does not apply to the contract\r\nCASH: applies to contract\r\nFINANCE: applies to contract",
          "type": "string"
        },
        "paySimplePaymentID": {
          "format": "int32",
          "description": "ID of PaySimple Payment if applicable",
          "type": "integer"
        }
      }
    },
    "InquiryResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "inquiryDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "takenBy": {
          "type": "string"
        },
        "division": {
          "type": "string"
        },
        "primaryLeadSource": {
          "type": "string"
        },
        "secondaryLeadSource": {
          "type": "string"
        },
        "canvasser": {
          "type": "string"
        },
        "telemarketer": {
          "type": "string"
        },
        "promoter": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "productInterests": {
          "type": "string"
        },
        "leadPaintYearHomeBuilt": {
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "InquiriesBindingModel": {
      "type": "object",
      "properties": {
        "start_modified_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "start_appointment_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "end_appointment_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "appointment_salesperson_id": {
          "type": "string"
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "rowsPerPage": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "InquirySearchBindingModel": {
      "type": "object",
      "properties": {
        "business_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address_line_one": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email_address": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "contactType": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "type": "string"
        },
        "numberOfRecords": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "InquirySearchResult": {
      "type": "object",
      "properties": {
        "contactType": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "primaryEmail": {
          "type": "string"
        },
        "secondaryEmail": {
          "type": "string"
        },
        "teritiaryEmail": {
          "type": "string"
        },
        "inquiryDateTime": {
          "type": "string"
        },
        "inquiryAddressLineOne": {
          "type": "string"
        },
        "inquiryAddressLineTwo": {
          "type": "string"
        },
        "inquiryCity": {
          "type": "string"
        },
        "inquiryState": {
          "type": "string"
        },
        "inquiryZip": {
          "type": "string"
        },
        "primaryLeadSource": {
          "type": "string"
        },
        "secondaryLeadSource": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "productInterest": {
          "type": "string"
        }
      }
    },
    "MultiCompanyInquirySearchResult": {
      "type": "object",
      "properties": {
        "msCompany": {
          "type": "string"
        },
        "coyOid": {
          "type": "string"
        },
        "contactType": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "primaryEmail": {
          "type": "string"
        },
        "secondaryEmail": {
          "type": "string"
        },
        "teritiaryEmail": {
          "type": "string"
        },
        "inquiryDateTime": {
          "type": "string"
        },
        "inquiryAddressLineOne": {
          "type": "string"
        },
        "inquiryAddressLineTwo": {
          "type": "string"
        },
        "inquiryCity": {
          "type": "string"
        },
        "inquiryState": {
          "type": "string"
        },
        "inquiryZip": {
          "type": "string"
        },
        "primaryLeadSource": {
          "type": "string"
        },
        "secondaryLeadSource": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "productInterest": {
          "type": "string"
        }
      }
    },
    "OpportunityResourceModel": {
      "description": "This is the Opportunity resource model. It's a mix of Inquiry/Job Information. It may be used in the Inquiries/Jobs Controller",
      "type": "object",
      "properties": {
        "inquiryId": {
          "description": "The lead/inquiry id",
          "type": "string"
        },
        "contactId": {
          "description": "The contact this lead and job is tied to",
          "type": "string"
        },
        "jobId": {
          "description": "Will be null if no job has been created.\r\nA lead may be tied to more than one job, but we're choosing to make each job/lead a single opportunity",
          "type": "string"
        },
        "inquiryDescription": {
          "description": "Description field. Not used by classic marketsharp. Lead Capture can insert some description here sometimes",
          "type": "string"
        },
        "inquiryNotes": {
          "description": "Notes",
          "type": "string"
        },
        "inquiryDateTime": {
          "format": "date-time",
          "description": "Inquiry Date Time. Usually set by an employee when the inquiry came in",
          "type": "string"
        },
        "inquiryDivision": {
          "description": "Text containing inquiry division if any",
          "type": "string"
        },
        "inquiryStatusId": {
          "format": "int32",
          "description": "Inquiry status id if any",
          "type": "integer"
        },
        "jobSiteAddress": {
          "$ref": "#/definitions/AddressResourceModel",
          "description": "Jobsite address. On an opportunity this comes from the job first and then from the inquiry"
        }
      }
    },
    "AddressResourceModel": {
      "type": "object",
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      }
    },
    "OpportunityNoteResourceModel": {
      "description": "Response/resource model containing opportunity note information.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of the note. Auto incremented identity field.",
          "type": "integer"
        },
        "note": {
          "description": "Field containing note text.",
          "type": "string"
        },
        "updatedUtc": {
          "format": "date-time",
          "description": "Date that the note record was last updated.",
          "type": "string"
        },
        "updatedBy": {
          "description": "Id of the employee who last updated the note record.",
          "type": "string"
        },
        "createdUtc": {
          "format": "date-time",
          "description": "Date that the note record was created.",
          "type": "string"
        },
        "createdBy": {
          "description": "Id of the employee who created the note record.",
          "type": "string"
        },
        "updatedByDetail": {
          "$ref": "#/definitions/EmployeePictureResourceModel",
          "description": "Object containing detailed updated by employee information."
        },
        "createdByDetail": {
          "$ref": "#/definitions/EmployeePictureResourceModel",
          "description": "Object containing detailed created by employee information."
        }
      }
    },
    "EmployeePictureResourceModel": {
      "description": "Response/resource model containing employee picture information.",
      "type": "object",
      "properties": {
        "employeeId": {
          "description": "Id of the employee.",
          "type": "string"
        },
        "employeeName": {
          "description": "Name of the employee.",
          "type": "string"
        },
        "employeePictureFileName": {
          "description": "Employee picture file name.",
          "type": "string"
        },
        "employeePictureImageUrl": {
          "description": "Full employee picture file path.  Need to call SetEmployeePictureImageUrl() method to populate.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OpportunityNoteBindingModel": {
      "description": "Request/binding model containing opportunity note data.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of the note. Optional.  Populate if updating an existing record or leave empty if inserting a new record.",
          "type": "integer"
        },
        "inquiryId": {
          "description": "Inquiry or lead id.",
          "type": "string"
        },
        "note": {
          "description": "Field containing note text.",
          "type": "string"
        },
        "opportunityNoteType": {
          "format": "int32",
          "description": "Opportunity note type field.",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "AddressBindingModel": {
      "description": "Request/binding model containing simple address information.",
      "type": "object",
      "properties": {
        "addressLineOne": {
          "description": "Address line one.",
          "type": "string"
        },
        "addressLineTwo": {
          "description": "Address line two.",
          "type": "string"
        },
        "city": {
          "description": "Address city.",
          "type": "string"
        },
        "state": {
          "description": "Address state.",
          "type": "string"
        },
        "zip": {
          "description": "Address zip without zip4",
          "type": "string"
        }
      }
    },
    "SimpleOpportunityBindingModel": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the opportunity.  Could also be a job name.",
          "type": "string"
        }
      }
    },
    "JobSearchBindingModel": {
      "type": "object",
      "properties": {
        "business_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address_line_one": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email_address": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "job_name": {
          "type": "string"
        },
        "job_number": {
          "type": "string"
        },
        "contactType": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "type": "string"
        },
        "numberOfRecords": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SimpleDateSearchBindingModel": {
      "description": "Request/binding model containing date search parameters.",
      "type": "object",
      "properties": {
        "fromDate": {
          "format": "date-time",
          "description": "Search from date.",
          "type": "string"
        },
        "numberOfRecords": {
          "format": "int32",
          "description": "Number of records to retrieve. Defaults to 50 if number of records was not specified.",
          "type": "integer"
        }
      }
    },
    "JobLeadResourceModel": {
      "description": "Response/resource model containing job and lead information.",
      "type": "object",
      "properties": {
        "jobUniqueNumber": {
          "description": "Job unique number.",
          "type": "string"
        },
        "firstName": {
          "description": "First name of the contact lead.",
          "type": "string"
        },
        "lastName": {
          "description": "Last name of the contact lead.",
          "type": "string"
        },
        "opportunityName": {
          "description": "Name of the opportunity or job.",
          "type": "string"
        },
        "inquiryDate": {
          "format": "date-time",
          "description": "The date that the Inquiry came in.",
          "type": "string"
        },
        "contactCreatedDate": {
          "format": "date-time",
          "description": "Date that the contact record was created.",
          "type": "string"
        },
        "contactUpdatedDate": {
          "format": "date-time",
          "description": "Date that the contact record was last updated.",
          "type": "string"
        },
        "leadUpdatedDate": {
          "format": "date-time",
          "description": "Date that the lead record was last updated.",
          "type": "string"
        },
        "jobUpdatedDate": {
          "format": "date-time",
          "description": "Date that the job record was last updated.",
          "type": "string"
        },
        "contactId": {
          "description": "Contact id.",
          "type": "string"
        },
        "jobId": {
          "description": "Job id.",
          "type": "string"
        },
        "inquiryId": {
          "description": "Lead or inquiry id.",
          "type": "string"
        },
        "jobSiteAddress": {
          "$ref": "#/definitions/AddressResourceModel"
        },
        "state": {
          "$ref": "#/definitions/OpportunityState"
        }
      }
    },
    "OpportunityState": {
      "description": "Opportunity State Tracker",
      "type": "object",
      "properties": {
        "isQualified": {
          "description": "An Employee has verified the opportunity that it is appropiate for the company to pursue",
          "type": "boolean"
        },
        "isSet": {
          "description": "Has an appointment been set for the opportunity",
          "type": "boolean"
        },
        "isSold": {
          "description": "Has the opportunity been sold",
          "type": "boolean"
        }
      }
    },
    "SimpleLeadCaptureResourceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "formId": {
          "type": "string"
        }
      }
    },
    "LeadCaptureContactBindingModel": {
      "required": [
        "afterLeadUpdatedTime"
      ],
      "type": "object",
      "properties": {
        "afterLeadUpdatedTime": {
          "format": "date-time",
          "type": "string"
        },
        "formId": {
          "type": "string"
        },
        "returnOnlyActive": {
          "type": "boolean"
        }
      }
    },
    "LeadCaptureContactResourceModel": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        },
        "thirdPartyId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "inquiryDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "appointmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "appointmentSetDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "appointmentResult": {
          "type": "string"
        },
        "appointmentPresentedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "appointmentSoldDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "contractApprovedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "contractStatus": {
          "type": "string"
        },
        "contractAmount": {
          "format": "double",
          "type": "number"
        },
        "jobCompletedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "latestUpdatedTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GlobalLeadCaptureContactBindingModel": {
      "required": [
        "afterLeadUpdatedTime"
      ],
      "type": "object",
      "properties": {
        "afterLeadUpdatedTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GlobalLeadCaptureContactResourceModel": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "thirdPartyId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "inquiryDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "appointmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "appointmentSetDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "appointmentResult": {
          "type": "string"
        },
        "appointmentPresentedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "appointmentSoldDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "contractApprovedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "contractStatus": {
          "type": "string"
        },
        "contractAmount": {
          "format": "double",
          "type": "number"
        },
        "jobCompletedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "latestUpdatedTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ClientSideExceptionBindingModel": {
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "employeeId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "requestIP": {
          "type": "string"
        },
        "requestURL": {
          "type": "string"
        },
        "exceptionType": {
          "type": "string"
        },
        "exceptionMessage": {
          "type": "string"
        },
        "exceptionSource": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        },
        "browser": {
          "type": "string"
        },
        "browserVersion": {
          "type": "string"
        }
      }
    },
    "LoginBindingModel": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "rememberMe": {
          "type": "boolean"
        },
        "restapiurl": {
          "type": "string"
        }
      }
    },
    "LoginCookieResourceModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "expiresAtUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomerResourceModel": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta",
          "description": "Contains information about the current request directly from the Paysimple API. Errors, pagination... will all go in here"
        }
      }
    },
    "Meta": {
      "type": "object",
      "properties": {
        "errors": {
          "$ref": "#/definitions/Errors"
        },
        "httpStatus": {
          "type": "string"
        },
        "httpStatusCode": {
          "format": "int32",
          "type": "integer"
        },
        "pagingDetails": {
          "$ref": "#/definitions/PagingDetails"
        }
      }
    },
    "Errors": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "traceCode": {
          "type": "string"
        }
      }
    },
    "PagingDetails": {
      "type": "object",
      "properties": {
        "totalItems": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "itemsPerPage": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PaySimpleAccountsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AccountsResponse"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "AccountsResponse": {
      "type": "object",
      "properties": {
        "creditCardAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCResponse"
          }
        },
        "achAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ACHResponse"
          }
        }
      }
    },
    "CCResponse": {
      "type": "object",
      "properties": {
        "creditCardNumber": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "billingZipCode": {
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "isDefault": {
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "lastModified": {
          "type": "string"
        },
        "createdOn": {
          "type": "string"
        }
      }
    },
    "ACHResponse": {
      "type": "object",
      "properties": {
        "isCheckingAccount": {
          "type": "boolean"
        },
        "routingNumber": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "bankName": {
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "isDefault": {
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "lastModified": {
          "type": "string"
        },
        "createdOn": {
          "type": "string"
        }
      }
    },
    "PaySimpleCustomerTokenResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TokenResponse"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "properties": {
        "jwtToken": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        }
      }
    },
    "PSPaymentRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "isDebit": {
          "type": "string"
        },
        "invoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "purchaseOrderNumber": {
          "format": "int32",
          "type": "integer"
        },
        "orderId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "cvv": {
          "type": "string"
        },
        "paymentSubType": {
          "type": "string"
        }
      }
    },
    "PaySimplePaymentResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/PaymentResponse"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "PaymentResponse": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "customerFirstName": {
          "type": "string"
        },
        "customerLastName": {
          "type": "string"
        },
        "customerCompany": {
          "type": "string"
        },
        "referenceId": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "recurringScheduleId": {
          "format": "int32",
          "type": "integer"
        },
        "paymentType": {
          "type": "string"
        },
        "paymentSubType": {
          "type": "string"
        },
        "providerAuthCode": {
          "type": "string"
        },
        "traceNumber": {
          "type": "string"
        },
        "paymentDate": {
          "type": "string"
        },
        "returnDate": {
          "type": "string"
        },
        "estimatedSettleDate": {
          "type": "string"
        },
        "actualSettledDate": {
          "type": "string"
        },
        "canVoidUntil": {
          "type": "string"
        },
        "failureData": {
          "$ref": "#/definitions/FailureData"
        },
        "accountId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceId": {
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "isDebit": {
          "type": "boolean"
        },
        "invoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "purchaseOrderNumber": {
          "format": "int32",
          "type": "integer"
        },
        "orderId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "successReceiptOptions": {
          "type": "string"
        },
        "failureReceiptOptions": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "lastModified": {
          "type": "string"
        },
        "createdOn": {
          "type": "string"
        }
      }
    },
    "FailureData": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "merchantActionText": {
          "type": "string"
        }
      }
    },
    "PaySimpleMerchantOptionsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/MerchantOptionsResponse"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "MerchantOptionsResponse": {
      "type": "object",
      "properties": {
        "acceptsCreditCard": {
          "type": "boolean"
        },
        "acceptsAch": {
          "type": "boolean"
        },
        "creditCardIssuers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ACHRequest": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "isCheckingAccount": {
          "type": "boolean"
        },
        "routingNumber": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "bankName": {
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PaySimpleACHResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ACHResponse"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "CreditCardRequest": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "creditCardNumber": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "billingZipCode": {
          "type": "string"
        }
      }
    },
    "PaysimpleContactJobSearchBindingModel": {
      "type": "object",
      "properties": {
        "paysimpleCustomerId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "appointmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "useAndSearch": {
          "type": "boolean"
        }
      }
    },
    "PaysimpleSearchResultResourceModel": {
      "type": "object",
      "properties": {
        "searchResultByCustomerId": {
          "description": "Filled out when searching by paysimple customer id",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactJobResourceModel"
          }
        },
        "searchResultByNameFields": {
          "description": "filled out when searching by other fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactJobResourceModel"
          }
        }
      }
    },
    "ContactJobResourceModel": {
      "type": "object",
      "properties": {
        "lastAppointmentDate": {
          "format": "date-time",
          "description": "Last Appointment Date for this contact, regardless of what inquiry it is on",
          "type": "string"
        },
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimplePhoneResourceModel"
          }
        },
        "id": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "contactBusinessName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email1": {
          "type": "string"
        },
        "email2": {
          "type": "string"
        },
        "email3": {
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "contactType": {
          "type": "string"
        }
      }
    },
    "Job": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "jobType": {
          "type": "string"
        },
        "jobStatus": {
          "type": "string"
        },
        "leadId": {
          "type": "string"
        },
        "contactId": {
          "type": "string"
        },
        "saleDate": {
          "format": "date-time",
          "type": "string"
        },
        "completionDate": {
          "format": "date-time",
          "type": "string"
        },
        "leadAppointmentSoldId": {
          "type": "string"
        },
        "leadAppointmentSoldDate": {
          "format": "date-time",
          "type": "string"
        },
        "contractTotal": {
          "format": "double",
          "type": "number"
        },
        "contractDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        }
      }
    },
    "SimplePhoneResourceModel": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Full Phone Number",
          "type": "string"
        },
        "doNotCall": {
          "description": "Do Not Call Bit Flag. True/False or null for not loaded",
          "type": "boolean"
        }
      }
    },
    "PaySimpleGetReconciliationBindingModel": {
      "type": "object",
      "properties": {
        "paymentReconciliationStatuses": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "fromDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PaymentReconciliationData": {
      "type": "object",
      "properties": {
        "companyID": {
          "type": "string"
        },
        "eventID": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "paymentID": {
          "format": "int32",
          "type": "integer"
        },
        "paymentCreated": {
          "format": "date-time",
          "type": "string"
        },
        "paySimpleCustomerID": {
          "format": "int32",
          "type": "integer"
        },
        "contactID": {
          "type": "string"
        },
        "jobID": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdUTC": {
          "format": "date-time",
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedUTC": {
          "format": "date-time",
          "type": "string"
        },
        "paySimplePaymentReconciliationStatusID": {
          "format": "int32",
          "type": "integer"
        },
        "paySimplePaymentReconciliationStatus": {
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "jobName": {
          "type": "string"
        },
        "jobNumber": {
          "type": "string"
        },
        "contactFirstName": {
          "type": "string"
        },
        "contactLastName": {
          "type": "string"
        }
      }
    },
    "ReconcilePaymentRequest": {
      "type": "object",
      "properties": {
        "companyID": {
          "type": "string"
        },
        "eventID": {
          "type": "string"
        },
        "jobID": {
          "type": "string"
        },
        "contactID": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "employeeOid": {
          "type": "string"
        }
      }
    },
    "UnlinkPaymentRequest": {
      "type": "object",
      "properties": {
        "companyID": {
          "type": "string"
        },
        "eventID": {
          "type": "string"
        },
        "contactID": {
          "type": "string"
        },
        "paySimpleCustomerId": {
          "format": "int32",
          "type": "integer"
        },
        "paymentId": {
          "format": "int32",
          "type": "integer"
        },
        "employeeOid": {
          "type": "string"
        }
      }
    },
    "PrintFileExistsBindingModel": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "lastUpdateByEmployeeName": {
          "type": "string"
        },
        "lastUpdate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PrintFileBindingModel": {
      "type": "object",
      "properties": {
        "fileId": {
          "format": "int32",
          "type": "integer"
        },
        "employeeCurrentDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "processTypeStepOid": {
          "type": "string"
        }
      }
    },
    "ProductionSearchBindingModel": {
      "description": "This is the model used on the production process list page to hold the search options",
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        },
        "assignedTo": {
          "type": "string"
        },
        "salesperson": {
          "type": "string"
        },
        "process": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "pagesize": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "type": "string"
        },
        "loggedInEmployeeId": {
          "type": "string"
        },
        "calculatedDateFieldType": {
          "type": "string"
        },
        "calculatedStartComparison": {
          "type": "string"
        },
        "calculatedEndComparison": {
          "type": "string"
        },
        "calculatedStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "calculatedEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "dateRangeType": {
          "description": "The selected dropdown, will be a user friendly date search name (this week) or set to customDateRange",
          "type": "string"
        },
        "customDateField": {
          "description": "If set, will tell us what date field custom start and end will pertain to",
          "type": "string"
        },
        "customStart": {
          "format": "date-time",
          "type": "string"
        },
        "customEnd": {
          "format": "date-time",
          "type": "string"
        },
        "isCustomDate": {
          "description": "True for when custom dates should be respected",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ProductionResourceModel": {
      "description": "This model is the Production Flat View or the Production Proccess List. Final name pending.",
      "type": "object",
      "properties": {
        "customColumnList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalRows": {
          "format": "int32",
          "type": "integer"
        },
        "stepTotals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemTotal"
          }
        },
        "dataTotals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemTotal"
          }
        },
        "productionProcesses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductionDetail"
          }
        }
      }
    },
    "ItemTotal": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "total": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ProductionDetail": {
      "type": "object",
      "properties": {
        "coyOid": {
          "type": "string"
        },
        "contractDate": {
          "format": "date-time",
          "type": "string"
        },
        "contractStatus": {
          "type": "string"
        },
        "contractAmount": {
          "format": "double",
          "type": "number"
        },
        "contractBalanceDue": {
          "format": "double",
          "type": "number"
        },
        "contactType": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/ContactViewResourceModel"
        },
        "address": {
          "$ref": "#/definitions/AddressViewResourceModel"
        },
        "job": {
          "$ref": "#/definitions/JobViewResourceModel"
        },
        "jobProduct": {
          "$ref": "#/definitions/JobProductViewResourceModel"
        },
        "customFieldValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValueResourceModel"
          }
        }
      }
    },
    "ContactViewResourceModel": {
      "description": "This class contains the fields from the Contact table available to be selected as apart of the view from The T_LIST_FIELDS table",
      "type": "object",
      "properties": {
        "oid": {
          "type": "string"
        },
        "ageGroup": {
          "type": "string"
        },
        "ageOfHome": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "doNotMail": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "email2": {
          "type": "string"
        },
        "email3": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "homeValue": {
          "type": "string"
        },
        "incomeLevel": {
          "type": "string"
        },
        "lengthOfResidence": {
          "type": "string"
        },
        "maritalStatus": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "contactLastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdatedBy": {
          "type": "string"
        },
        "recordSource": {
          "type": "string"
        },
        "styleOfHome": {
          "type": "string"
        },
        "contactTagged": {
          "type": "boolean"
        },
        "contactTitle": {
          "type": "string"
        },
        "contactWebsite": {
          "type": "string"
        },
        "contactWebsite2": {
          "type": "string"
        },
        "contactWebsite3": {
          "type": "string"
        },
        "yearHomeBuilt": {
          "type": "string"
        }
      }
    },
    "AddressViewResourceModel": {
      "type": "object",
      "properties": {
        "barCode": {
          "type": "string"
        },
        "carrierRoute": {
          "type": "string"
        },
        "CASS": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "DPBC": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "zip4": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "JobViewResourceModel": {
      "type": "object",
      "properties": {
        "jobAddress1": {
          "type": "string"
        },
        "jobAddress2": {
          "type": "string"
        },
        "jobCity": {
          "type": "string"
        },
        "jobCompletedDate": {
          "format": "date-time",
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "jobNotes": {
          "type": "string"
        },
        "jobNumber": {
          "type": "string"
        },
        "jobSaleDate": {
          "format": "date-time",
          "type": "string"
        },
        "jobStatus": {
          "type": "string"
        },
        "jobType": {
          "type": "string"
        },
        "jobZip": {
          "type": "string"
        }
      }
    },
    "JobProductViewResourceModel": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "jobProductId": {
          "type": "string"
        },
        "productNotes": {
          "type": "string"
        },
        "productProductionNotes": {
          "type": "string"
        },
        "productPrice": {
          "format": "double",
          "type": "number"
        },
        "productPriceAdjustment": {
          "format": "double",
          "type": "number"
        },
        "productCompletedDate": {
          "format": "date-time",
          "type": "string"
        },
        "productSaleDate": {
          "format": "date-time",
          "type": "string"
        },
        "productSalesperson1": {
          "type": "string"
        },
        "productSalesperson2": {
          "type": "string"
        },
        "productServiceExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "productServiceStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "productWarrantyExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "productWarrantyStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "productProjectManager": {
          "type": "string"
        },
        "productProcessTypeId": {
          "type": "string"
        },
        "DetailTaskList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseProductionStepModel"
          }
        },
        "productWorkers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValueResourceModel"
          }
        },
        "HasCustomSteps": {
          "type": "boolean"
        },
        "productWorkCrew": {
          "type": "string"
        }
      }
    },
    "BaseProductionStepModel": {
      "description": "Contains the shared fields for all classes that show information about a production type step",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "expectedEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "actualEndDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ProductionTotalResourceModel": {
      "description": "This model is the Production Flat View or the Production Proccess List. Final name pending.",
      "type": "object",
      "properties": {
        "completedTotal": {
          "format": "double",
          "type": "number"
        },
        "completedNum": {
          "format": "int32",
          "type": "integer"
        },
        "overdueTotal": {
          "format": "double",
          "type": "number"
        },
        "overdueNum": {
          "format": "int32",
          "type": "integer"
        },
        "futureTotal": {
          "format": "double",
          "type": "number"
        },
        "futureNum": {
          "format": "int32",
          "type": "integer"
        },
        "dueNowTotal": {
          "format": "double",
          "type": "number"
        },
        "dueNowNum": {
          "format": "int32",
          "type": "integer"
        },
        "notScheduledTotal": {
          "format": "double",
          "type": "number"
        },
        "notScheduledNum": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProductionProcessStepResourceModel": {
      "type": "object",
      "properties": {
        "productionProcessStepOid": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "assignedTo": {
          "type": "string"
        },
        "processTypeOid": {
          "type": "string"
        },
        "productTypeOid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "activeDays": {
          "format": "int32",
          "type": "integer"
        },
        "enableScheduler": {
          "type": "boolean"
        },
        "enableWorkorder": {
          "type": "boolean"
        },
        "stepDuration": {
          "format": "int32",
          "type": "integer"
        },
        "calculatedExpectedStateDate": {
          "format": "int32",
          "type": "integer"
        },
        "activityProcessOid": {
          "type": "string"
        }
      }
    },
    "ProductionStepResourceModel": {
      "description": "Contains a subset of the information about a particular production step.",
      "type": "object",
      "properties": {
        "assignedToId": {
          "type": "string"
        },
        "expectedStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "actualStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "activityProcessId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "isWorkOrderEnabled": {
          "type": "boolean"
        },
        "isSchedulerEnabled": {
          "type": "boolean"
        },
        "schedulerId": {
          "format": "int32",
          "type": "integer"
        },
        "workOrderPrintFileActivityId": {
          "type": "string"
        },
        "processTypeStepId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "expectedEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "actualEndDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ProductionStepBindingModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "assignedToId": {
          "type": "string"
        },
        "processTypeStepId": {
          "type": "string"
        },
        "expectedStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "actualStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "expectedEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "actualEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "schedulerId": {
          "format": "int32",
          "type": "integer"
        },
        "isSchedulerEnabled": {
          "type": "boolean"
        },
        "isWorkOrderEnabled": {
          "type": "boolean"
        },
        "stepOrder": {
          "format": "int32",
          "type": "integer"
        },
        "activityProcessId": {
          "type": "string"
        }
      }
    },
    "ProductionJobProductBindingModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productCompletedDate": {
          "format": "date-time",
          "type": "string"
        },
        "workCrewId": {
          "type": "string"
        },
        "projectManagerId": {
          "type": "string"
        },
        "productProductionNotes": {
          "type": "string"
        },
        "productProcessTypeId": {
          "type": "string"
        },
        "stepList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductionStepBindingModel"
          }
        },
        "employeeIdProductWorkerList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stepsToDelete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProductionJobProductSavedStepsResourceModel": {
      "type": "object",
      "properties": {
        "stepsSaved": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductionStepResourceModel"
          }
        },
        "activityProcessToTrigger": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityProcessProductionStepResourceModel"
          }
        }
      }
    },
    "ActivityProcessProductionStepResourceModel": {
      "type": "object",
      "properties": {
        "activityProcessId": {
          "type": "string"
        },
        "productionStepId": {
          "type": "string"
        }
      }
    },
    "ListDropDownItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "ProductTypeDetailResourceModel": {
      "description": "Response/resource model containing product type and detail information.",
      "type": "object",
      "properties": {
        "productTypeId": {
          "description": "Product type id.",
          "type": "string"
        },
        "productTypeName": {
          "description": "The name of the product type record.",
          "type": "string"
        },
        "isActive": {
          "description": "Returns a value of true if the record in the database is active.",
          "type": "boolean"
        },
        "productDetails": {
          "description": "List of product detail resource models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDetailResourceModel"
          }
        }
      }
    },
    "ProductDetailResourceModel": {
      "description": "Response/resource model containing product detail information.",
      "type": "object",
      "properties": {
        "productDetailId": {
          "description": "Product detail id.",
          "type": "string"
        },
        "productDetailName": {
          "description": "The name of the product detail record.",
          "type": "string"
        },
        "isActive": {
          "description": "Returns a value of true if the record in the database is active.",
          "type": "boolean"
        }
      }
    },
    "SimpleProductTypeDetailResourceModel": {
      "description": "Simple response/resource model containing product type and detail information.",
      "type": "object",
      "properties": {
        "productTypeId": {
          "description": "Product type id.",
          "type": "string"
        },
        "productTypeName": {
          "description": "The name of the product type record.",
          "type": "string"
        },
        "productDetails": {
          "description": "List of simple product detail resource models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleProductDetailResourceModel"
          }
        }
      }
    },
    "SimpleProductDetailResourceModel": {
      "description": "Simple response/resource model containing product detail information.",
      "type": "object",
      "properties": {
        "productDetailId": {
          "description": "Product detail id.",
          "type": "string"
        },
        "productDetailName": {
          "description": "The name of the product detail record.",
          "type": "string"
        }
      }
    },
    "ProductTypeDetailBindingModel": {
      "description": "Request/binding model containing product type and detail information.",
      "type": "object",
      "properties": {
        "productTypeId": {
          "description": "Product type id.",
          "type": "string"
        },
        "isActive": {
          "description": "Returns a value of true if the record in the database is active.",
          "type": "boolean"
        },
        "productDetails": {
          "description": "IEnumerable list of simple product detail binding models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDetailBindingModel"
          }
        }
      }
    },
    "ProductDetailBindingModel": {
      "description": "Request/binding model containing product detail information.",
      "type": "object",
      "properties": {
        "productDetailId": {
          "description": "Product detail id.",
          "type": "string"
        },
        "isActive": {
          "description": "Returns a value of true if the record in the database is active.",
          "type": "boolean"
        }
      }
    },
    "SimpleProductTypeDetailBindingModel": {
      "description": "Simple request/binding model containing product type and detail information. Contains less properties than a full product type details binding model.",
      "type": "object",
      "properties": {
        "productTypeId": {
          "description": "Product type id.",
          "type": "string"
        },
        "productDetails": {
          "description": "IEnumerable list of simple product detail binding models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleProductDetailBindingModel"
          }
        }
      }
    },
    "SimpleProductDetailBindingModel": {
      "description": "Simple request/binding model containing product detail information.",
      "type": "object",
      "properties": {
        "productDetailId": {
          "description": "Product detail id.",
          "type": "string"
        }
      }
    },
    "GuildQualityJob": {
      "type": "object",
      "properties": {
        "guildQualityAccountId": {
          "type": "string"
        },
        "uniqueJobId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "mailingAddressLine1": {
          "type": "string"
        },
        "mailingAddressLine2": {
          "type": "string"
        },
        "mailingAddressCity": {
          "type": "string"
        },
        "mailingAddressState": {
          "type": "string"
        },
        "mailingAddressZip": {
          "type": "string"
        },
        "primaryEmail": {
          "type": "string"
        },
        "secondaryEmail": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "primaryLeadSource": {
          "type": "string"
        },
        "productSalespeople": {
          "type": "string"
        },
        "projectTypes": {
          "type": "string"
        },
        "projectManagers": {
          "type": "string"
        },
        "workCrews": {
          "type": "string"
        },
        "workers": {
          "type": "string"
        },
        "surveyQueueDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GuildQualityJobSurveyedBindingModel": {
      "type": "object",
      "properties": {
        "uniqueJobId": {
          "description": "Marketsharp Job Id",
          "type": "string"
        }
      }
    },
    "TextingLinkedEventsResourceModel": {
      "type": "object",
      "properties": {
        "inquiryRequired": {
          "type": "boolean"
        },
        "appointmentRequired": {
          "type": "boolean"
        },
        "jobRequired": {
          "type": "boolean"
        },
        "productionRequired": {
          "type": "boolean"
        },
        "serviceRequired": {
          "type": "boolean"
        }
      }
    },
    "ViewResourceModel": {
      "type": "object",
      "properties": {
        "viewList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValueResourceModel"
          }
        },
        "viewId": {
          "type": "string"
        },
        "viewName": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "selectedFieldList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListField"
          }
        },
        "availableFieldList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListField"
          }
        }
      }
    },
    "ListField": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "isCustomField": {
          "type": "boolean"
        },
        "fieldDataType": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ViewBindingModel": {
      "type": "object",
      "properties": {
        "fieldList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "companyId": {
          "type": "string"
        },
        "viewId": {
          "type": "string"
        },
        "viewName": {
          "type": "string"
        },
        "listViewType": {
          "description": "The Type of the list. Is this an activity list, production list....?\r\nSee MarketSharp.CRM.Data.Enum.ListViewType for acceptable types",
          "type": "string"
        },
        "isPublic": {
          "description": "Whether this View is viewable by everyone or just the person who created it. By default views are created as private if this field is not specified",
          "type": "boolean"
        }
      }
    },
    "Field": {
      "type": "object",
      "properties": {
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "fieldId": {
          "description": "The Id used to identify the regular non custom field. If this is missing, then the field will be added by the {MarketSharp.CRM.WebApi.Models.Binding.ViewBindingModel.Field.FieldDefId}",
          "type": "string"
        },
        "fieldDefId": {
          "description": "The custom ID field from the T_LIST_FIELD table. This can only be specified when the {MarketSharp.CRM.WebApi.Models.Binding.ViewBindingModel.Field.FieldId} is null or empty",
          "type": "string"
        }
      }
    }
  }
}