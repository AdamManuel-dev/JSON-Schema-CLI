node schemGen.js | fx 'x => Object.entries(x.definitions).map(([key, val]) => val.properties)' | fx 'x => x.filter(y => !!y)' | fx 'x => x.map(y => ({status: y.status, type: y.type}))' | fx 'x => x.filter(y => !!y)' | fx 'x => x.map(y => ({type: y.type, states: y.status}))' | fx 'x => x.filter(y => !!y.states)' | fx 'x => x.map(y => ({type: y.type.enum[0], states: y.states.enum}))' | fx 'x => x.map(y => ({[y.type]: y.states}))' | fx 'x => x.reduce((prev, cur) => { return { ...prev, ...cur } }, {})' | fx